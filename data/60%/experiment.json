{"methodannotation":"called when the activity is first created ","groudtruth":"java.io.ObjectInputStream.readObject java.io.ObjectInputStream.close java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"N N N N N N N N N N N N N W W 7 } O java.util.LinkedList<com.cs110.stdev.crossfit.User> } java.io.ObjectInputStream N java.io.ObjectInputStream.readObject java.io.ObjectInputStream.close O ","decomposemethodname":"on Create ","nowapisequence":"java.util.LinkedList<com.cs110.stdev.crossfit.User> java.io.ObjectInputStream.readObject java.io.ObjectInputStream.close "}
{"methodannotation":"start counting elapsed time ","groudtruth":"java.lang.System.currentTimeMillis ","nowflat":"","decomposemethodname":"start ","nowapisequence":""}
{"methodannotation":"stop the message processor ","groudtruth":"java.net.ServerSocket.close java.lang.Throwable.printStackTrace java.util.Hashtable.values java.util.Collection.iterator java.util.Iterator.hasNext java.util.Iterator.next java.util.Iterator.hasNext java.util.Iterator.next java.lang.Object.notify ","nowflat":"} java.net.ServerSocket.close O java.lang.Throwable.printStackTrace java.util.Hashtable.values 7 java.util.Collection.iterator java.util.Iterator.hasNext N ","decomposemethodname":"stop ","nowapisequence":"java.net.ServerSocket.close java.lang.Throwable.printStackTrace java.util.Hashtable.values java.util.Collection.iterator java.util.Iterator.hasNext "}
{"methodannotation":"parses the text for special variables ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} java.lang.Object ","decomposemethodname":"parse Text ","nowapisequence":""}
{"methodannotation":"this is AFTER so value contains element.text after processing by AnySimpleType ","groudtruth":"java.lang.String.startsWith java.lang.String.substring ","nowflat":"N 8 java.lang.String.startsWith ","decomposemethodname":"parse ","nowapisequence":"java.lang.String.startsWith "}
{"methodannotation":"read a line of CSV from the supplied reader and split the line into an array of unescaped values ","groudtruth":"java.io.Reader.read java.io.Reader.read java.lang.StringBuilder.append java.io.Reader.read java.lang.StringBuilder.append java.io.Reader.read java.lang.StringBuilder.length java.lang.StringBuilder.toString java.util.ArrayList.add java.lang.StringBuilder.delete java.io.Reader.read java.lang.StringBuilder.toString java.util.ArrayList.add java.util.ArrayList.toArray java.lang.StringBuilder.append java.io.Reader.read java.lang.StringBuilder.length java.lang.StringBuilder.toString java.util.ArrayList.add java.util.ArrayList.toArray ","nowflat":"W java.util.ArrayList<java.lang.String> java.lang.StringBuilder java.io.Reader.read 8 @ ` 8 8 java.io.Reader.read 8 java.lang.StringBuilder.append java.io.Reader.read 8 { java.lang.StringBuilder.append java.io.Reader.read 8 8 java.lang.StringBuilder.length { 8 java.lang.StringBuilder.toString java.util.ArrayList.add ","decomposemethodname":"read Line ","nowapisequence":"java.util.ArrayList<java.lang.String> java.io.Reader.read java.io.Reader.read java.lang.StringBuilder.append java.io.Reader.read java.lang.StringBuilder.append java.io.Reader.read java.lang.StringBuilder.length java.lang.StringBuilder.toString java.util.ArrayList.add "}
{"methodannotation":"parse arguments and then runs a map/reduce job ","groudtruth":"java.io.PrintStream.println java.lang.Integer.parseInt java.lang.Long.parseLong java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"W 8 java.io.PrintStream.println @ java.lang.Integer.parseInt java.lang.Long.parseLong ","decomposemethodname":"run ","nowapisequence":"java.io.PrintStream.println java.lang.Integer.parseInt java.lang.Long.parseLong "}
{"methodannotation":"executes the statement ","groudtruth":"java.sql.PreparedStatement.execute ","nowflat":"@ ","decomposemethodname":"execute ","nowapisequence":""}
{"methodannotation":"shutdown the worker threads ","groudtruth":"java.lang.Thread.interrupt ","nowflat":"8 ","decomposemethodname":"shutdown ","nowapisequence":""}
{"methodannotation":"this method is called from within the constructor to initialize the form ","groudtruth":"javax.swing.JComponent.setOpaque ","nowflat":"javax.swing.JPanel java.awt.GridBagLayout ","decomposemethodname":"init Components ","nowapisequence":""}
{"methodannotation":"draws this component ","groudtruth":"java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics.drawImage java.lang.Math.sin java.awt.Image.getWidth java.lang.Math.cos java.awt.Image.getHeight java.awt.Graphics.drawImage java.awt.Graphics.drawImage ","nowflat":"N java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics.drawImage N java.lang.Math.sin java.awt.Image.getWidth ","decomposemethodname":"paint Component ","nowapisequence":"java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics2D.setRenderingHint java.awt.Graphics.drawImage java.lang.Math.sin java.awt.Image.getWidth "}
{"methodannotation":"closes this message to free up any system resources ","groudtruth":"java.io.InputStream.close ","nowflat":"","decomposemethodname":"close ","nowapisequence":""}
{"methodannotation":"returns the first element in the sorted set ","groudtruth":"java.util.SortedSet.first ","nowflat":"@ ","decomposemethodname":"first ","nowapisequence":""}
{"methodannotation":"resets the HMAC object for further use ","groudtruth":"java.security.MessageDigest.reset java.security.MessageDigest.update ","nowflat":"java.security.MessageDigest.reset ","decomposemethodname":"clear ","nowapisequence":"java.security.MessageDigest.reset "}
{"methodannotation":"adds a feature to the list if it 's not already added ","groudtruth":"java.lang.Object.getClass java.util.Map.containsKey java.lang.Object.getClass java.util.Map.put ","nowflat":"8 java.lang.Object.getClass java.util.Map.containsKey ","decomposemethodname":"add ","nowapisequence":"java.lang.Object.getClass java.util.Map.containsKey "}
{"methodannotation":"removes the given key from the cache ","groudtruth":"java.util.Map.remove java.util.Map.remove ","nowflat":"_ ","decomposemethodname":"remove ","nowapisequence":""}
{"methodannotation":"the number of keys in this map ","groudtruth":"java.util.Map.size ","nowflat":"@ ","decomposemethodname":"size ","nowapisequence":""}
{"methodannotation":"check if the list contains a point ","groudtruth":"java.util.ArrayList.contains ","nowflat":"@ ","decomposemethodname":"contains ","nowapisequence":""}
{"methodannotation":"this method is called when the mouse is moved over a component while a button has been pressed ","groudtruth":"java.awt.Component.getMouseMotionListeners java.awt.event.MouseMotionListener.mouseDragged ","nowflat":"8 W java.awt.Component.getMouseMotionListeners ","decomposemethodname":"mouse Dragged ","nowapisequence":"java.awt.Component.getMouseMotionListeners "}
{"methodannotation":"gets a hashCode for the range ","groudtruth":"java.lang.Object.hashCode java.lang.Object.getClass java.lang.Float.floatToIntBits java.lang.Float.floatToIntBits ","nowflat":"8 java.lang.Object.hashCode java.lang.Object.getClass ","decomposemethodname":"hash Code ","nowapisequence":"java.lang.Object.hashCode java.lang.Object.getClass "}
{"methodannotation":"clones this object ","groudtruth":"java.security.MessageDigest.clone java.lang.Object.clone ","nowflat":"N java.security.MessageDigest.clone N ","decomposemethodname":"clone ","nowapisequence":"java.security.MessageDigest.clone "}
{"methodannotation":"check player name valid or not ","groudtruth":"java.util.regex.Matcher.matches java.util.regex.Pattern.matcher java.util.regex.Pattern.compile ","nowflat":"8 @ 8 java.util.regex.Matcher.matches ","decomposemethodname":"is Valid Name ","nowapisequence":"java.util.regex.Matcher.matches "}
{"methodannotation":"copies a file from one location to another ","groudtruth":"java.io.InputStream.read java.io.OutputStream.write java.io.InputStream.close java.io.OutputStream.close ","nowflat":"java.io.FileInputStream java.io.FileOutputStream W W ` ","decomposemethodname":"copy ","nowapisequence":""}
{"methodannotation":"deletes all of the parameters contained in this object from the database ","groudtruth":"java.sql.Connection.prepareStatement java.sql.PreparedStatement.setInt java.sql.PreparedStatement.execute java.sql.Statement.close ","nowflat":"java.sql.Connection.prepareStatement java.sql.PreparedStatement.setInt ","decomposemethodname":"delete ","nowapisequence":"java.sql.Connection.prepareStatement java.sql.PreparedStatement.setInt "}
{"methodannotation":"read the state of parsing for all open log files from a property file ","groudtruth":"java.util.Properties.load java.lang.Throwable.printStackTrace ","nowflat":"} java.io.FileInputStream java.util.Properties.load ","decomposemethodname":"read State ","nowapisequence":"java.util.Properties.load "}
{"methodannotation":"writes the entire state of the MersenneTwister RNG to the stream ","groudtruth":"java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeDouble java.io.DataOutputStream.writeBoolean ","nowflat":"7 java.io.DataOutputStream.writeInt 7 java.io.DataOutputStream.writeInt ","decomposemethodname":"write State ","nowapisequence":"java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt "}
{"methodannotation":"encode the array into a String ","groudtruth":"java.lang.String.charAt java.lang.String.charAt ","nowflat":"W W W 7 ","decomposemethodname":"encode ","nowapisequence":""}
{"methodannotation":"generates a password reset code that is valid for a limited time ","groudtruth":"java.net.URLEncoder.encode java.net.URLDecoder.decode java.util.Calendar.getInstance java.util.Calendar.add java.util.Calendar.getTimeInMillis ","nowflat":"} java.net.URLEncoder.encode java.net.URLDecoder.decode O ","decomposemethodname":"save ","nowapisequence":"java.net.URLEncoder.encode java.net.URLDecoder.decode "}
{"methodannotation":"removes a property from the world model ","groudtruth":"javax.swing.SwingUtilities.invokeLater ","nowflat":"java.lang.Object ","decomposemethodname":"remove Property ","nowapisequence":""}
{"methodannotation":"let the thread pause for a random amount of time in the range of -LSB- 0 , maxDelayBetweenOps -RSB- if the delay is not zero ","groudtruth":"java.util.Random.nextInt java.lang.Thread.sleep ","nowflat":"8 ","decomposemethodname":"delay ","nowapisequence":""}
{"methodannotation":"processes requests for both HTTP GET and POST methods ","groudtruth":"java.io.PrintWriter.close ","nowflat":"} ","decomposemethodname":"process Request ","nowapisequence":""}
{"methodannotation":"adds the explosion to the pool ","groudtruth":"java.util.ArrayList.add ","nowflat":"","decomposemethodname":"dispose ","nowapisequence":""}
{"methodannotation":"read the attribute at the given index ","groudtruth":"java.lang.StringBuffer.setLength java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 { java.io.IOException java.lang.StringBuffer.setLength ","decomposemethodname":"next ","nowapisequence":"java.lang.StringBuffer.setLength "}
{"methodannotation":"compare method to sort lists of packets according to their arriving time ","groudtruth":"java.lang.Double.compare ","nowflat":"@ ","decomposemethodname":"compare To ","nowapisequence":""}
{"methodannotation":"plays a sequence , optionally looping ","groudtruth":"javax.sound.midi.MidiDevice.isOpen javax.sound.midi.Sequencer.setSequence javax.sound.midi.Sequencer.start java.lang.Throwable.printStackTrace ","nowflat":"8 javax.sound.midi.MidiDevice.isOpen } javax.sound.midi.Sequencer.setSequence ","decomposemethodname":"play ","nowapisequence":"javax.sound.midi.MidiDevice.isOpen javax.sound.midi.Sequencer.setSequence "}
{"methodannotation":"replaces the LF with CRLF ","groudtruth":"java.lang.String.replaceAll java.lang.String.trim ","nowflat":"8 @ @ ","decomposemethodname":"normalize ","nowapisequence":""}
{"methodannotation":"increment the number of bases seen at the given location ","groudtruth":"java.util.Map.put java.util.Map.put ","nowflat":"java.util.Map.put Z ","decomposemethodname":"increment ","nowapisequence":"java.util.Map.put "}
{"methodannotation":"the function decodes URL-encoded strings into a regular string ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.lang.String.getBytes ","nowflat":"java.lang.StringBuffer 7 java.lang.String.length java.lang.String.charAt = } java.lang.StringBuffer.append O { java.lang.IllegalArgumentException M java.lang.StringBuffer.append ","decomposemethodname":"decode ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"invoked when a key has been pressed ","groudtruth":"java.awt.event.KeyEvent.getKeyCode java.lang.Object.notifyAll ","nowflat":"= java.awt.event.KeyEvent.getKeyCode M M M M ","decomposemethodname":"key Pressed ","nowapisequence":"java.awt.event.KeyEvent.getKeyCode "}
{"methodannotation":"registers an event listener ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Listener ","nowapisequence":""}
{"methodannotation":"remove a listener ","groudtruth":"javax.swing.event.EventListenerList.remove ","nowflat":"","decomposemethodname":"remove Listener ","nowapisequence":""}
{"methodannotation":"removes all currently registered listeners ","groudtruth":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock java.util.concurrent.locks.Lock.unlock java.util.concurrent.locks.ReadWriteLock.writeLock ","nowflat":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock } ","decomposemethodname":"remove All Listeners ","nowapisequence":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock "}
{"methodannotation":"add a dependency to this Node ","groudtruth":"java.util.ArrayList.add java.util.ArrayList.contains java.util.ArrayList.add java.util.ArrayList.add ","nowflat":"8 java.util.ArrayList<com.nineoldandroids.animation.AnimatorSet.Dependency> java.util.ArrayList<com.nineoldandroids.animation.AnimatorSet.Node> java.util.ArrayList.add 8 java.util.ArrayList.contains ","decomposemethodname":"add Dependency ","nowapisequence":"java.util.ArrayList<com.nineoldandroids.animation.AnimatorSet.Dependency> java.util.ArrayList<com.nineoldandroids.animation.AnimatorSet.Node> java.util.ArrayList.add java.util.ArrayList.contains "}
{"methodannotation":"evaluate the message ","groudtruth":"java.util.regex.Matcher.find java.util.regex.Pattern.matcher ","nowflat":"8 @ 8 @ N ","decomposemethodname":"evaluate ","nowapisequence":""}
{"methodannotation":"adds a listener to the set of listeners that are sent update events through the life of an animation ","groudtruth":"java.util.ArrayList.add ","nowflat":"8 ","decomposemethodname":"add Update Listener ","nowapisequence":""}
{"methodannotation":"removes a listener from the set listening to frame updates for this animation ","groudtruth":"java.util.ArrayList.remove java.util.ArrayList.size ","nowflat":"8 @ java.util.ArrayList.remove ","decomposemethodname":"remove Update Listener ","nowapisequence":"java.util.ArrayList.remove "}
{"methodannotation":"invoke the method on the target object , without attempting any modifications to method accessibility ","groudtruth":"java.lang.reflect.Method.invoke ","nowflat":"","decomposemethodname":"invoke ","nowapisequence":""}
{"methodannotation":"writes a four-byte int to the underlying output streamin little endian order , low byte first , high byte last ","groudtruth":"java.io.OutputStream.write java.io.OutputStream.write java.io.OutputStream.write java.io.OutputStream.write ","nowflat":"java.io.OutputStream.write java.io.OutputStream.write ","decomposemethodname":"write Int ","nowapisequence":"java.io.OutputStream.write java.io.OutputStream.write "}
{"methodannotation":"write an integer as defined by the I2P data structure specification to the stream ","groudtruth":"java.io.OutputStream.write ","nowflat":"8 { 7 ","decomposemethodname":"write Long ","nowapisequence":""}
{"methodannotation":"this method generates the string representation of an xsd : duration value ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.text.NumberFormat.format java.lang.StringBuffer.append java.text.NumberFormat.format java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.insert java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"to String ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"creates a new instance of MlibMaxOpImage in the rendered image mode ","groudtruth":"java.awt.image.renderable.ParameterBlock.getRenderedSource java.awt.image.renderable.ParameterBlock.getRenderedSource ","nowflat":"8 @ @ ","decomposemethodname":"create ","nowapisequence":""}
{"methodannotation":"finds a descriptor from a collection by its class name ","groudtruth":"java.lang.String.equals java.lang.Class.getName java.lang.Object.getClass ","nowflat":"Z 8 java.lang.String.equals java.lang.Class.getName ","decomposemethodname":"find ","nowapisequence":"java.lang.String.equals java.lang.Class.getName "}
{"methodannotation":"resets the generation ","groudtruth":"java.math.BigInteger.toString ","nowflat":"7 ","decomposemethodname":"reset ","nowapisequence":""}
{"methodannotation":"reads and parses the output of ifconfig for a specified NIC and creates an appropriate EventRecord that holds the desirable information for it ","groudtruth":"java.net.InetAddress.getCanonicalHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getAllByName java.util.Calendar.getInstance java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString ","nowflat":"java.net.InetAddress.getCanonicalHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getAllByName java.util.Calendar.getInstance java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString 8 java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString ","decomposemethodname":"query ","nowapisequence":"java.net.InetAddress.getCanonicalHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getHostName java.net.InetAddress.getLocalHost java.net.InetAddress.getAllByName java.util.Calendar.getInstance java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString "}
{"methodannotation":"create new NameValue and adds it to list of params ","groudtruth":"java.util.Hashtable.put ","nowflat":"","decomposemethodname":"add Data ","nowapisequence":""}
{"methodannotation":"start the compilation in a separate thread ","groudtruth":"java.lang.Thread.start ","nowflat":"java.lang.Thread ","decomposemethodname":"start Thread ","nowapisequence":""}
{"methodannotation":"converts the contents of the queue to an array ","groudtruth":"java.util.Collection.toArray ","nowflat":"W W ","decomposemethodname":"to Array ","nowapisequence":""}
{"methodannotation":"put a context value as identified with the key parameter into the current thread 's context map ","groudtruth":"java.lang.ThreadLocal.get java.lang.ThreadLocal.set java.util.HashMap.put ","nowflat":"8 { java.lang.IllegalArgumentException N java.lang.ThreadLocal.get ","decomposemethodname":"put ","nowapisequence":"java.lang.ThreadLocal.get "}
{"methodannotation":"play the sample given bytes -RRB- assuming that it 's timestamp is long ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W N W ","decomposemethodname":"write ","nowapisequence":""}
{"methodannotation":"print a line separator ","groudtruth":"java.io.PrintWriter.write java.io.PrintWriter.flush ","nowflat":"_ java.io.PrintWriter.write ","decomposemethodname":"println ","nowapisequence":"java.io.PrintWriter.write "}
{"methodannotation":"returns true iff a file with the given name exists ","groudtruth":"java.io.File.exists ","nowflat":"java.io.File ","decomposemethodname":"file Exists ","nowapisequence":""}
{"methodannotation":"decodes four bytes from array source and writes the resulting bytes to destination ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"W W 8 N @ 8 N N @ } N N ","decomposemethodname":"decode4to3 ","nowapisequence":""}
{"methodannotation":"returns the number of bytes that can be read from this input stream without blocking ","groudtruth":"java.io.FilterInputStream.available ","nowflat":"8 @ ","decomposemethodname":"available ","nowapisequence":""}
{"methodannotation":"invokes the delegate 's mark method ","groudtruth":"java.io.InputStream.mark ","nowflat":"","decomposemethodname":"mark ","nowapisequence":""}
{"methodannotation":"removes a row ","groudtruth":"java.util.List.remove java.util.List.remove ","nowflat":"java.util.List.remove ","decomposemethodname":"remove Row ","nowapisequence":"java.util.List.remove "}
{"methodannotation":"updates the direct buffers in case the user ","groudtruth":"java.nio.FloatBuffer.put java.nio.Buffer.position java.nio.FloatBuffer.put java.nio.Buffer.position java.nio.FloatBuffer.put java.nio.Buffer.position java.nio.FloatBuffer.put java.nio.Buffer.position ","nowflat":"8 java.nio.FloatBuffer.put java.nio.Buffer.position 8 java.nio.FloatBuffer.put java.nio.Buffer.position 8 java.nio.FloatBuffer.put java.nio.Buffer.position ","decomposemethodname":"update ","nowapisequence":"java.nio.FloatBuffer.put java.nio.Buffer.position java.nio.FloatBuffer.put java.nio.Buffer.position java.nio.FloatBuffer.put java.nio.Buffer.position "}
{"methodannotation":"passes call to method on physical connection instance ","groudtruth":"java.sql.Connection.commit ","nowflat":"8 { java.sql.SQLException ","decomposemethodname":"commit ","nowapisequence":""}
{"methodannotation":"handle the results from the recognition activity ","groudtruth":"java.util.ArrayList.get ","nowflat":"8 ","decomposemethodname":"on Activity Result ","nowapisequence":""}
{"methodannotation":"adds a header to the headers Map ","groudtruth":"java.util.Map.put ","nowflat":"8 { java.lang.IllegalArgumentException 8 ","decomposemethodname":"add Header ","nowapisequence":""}
{"methodannotation":"method used to define the list of resources to be filtered ","groudtruth":"java.util.Arrays.asList java.util.List.addAll ","nowflat":"java.util.Arrays.asList ","decomposemethodname":"filter ","nowapisequence":"java.util.Arrays.asList "}
{"methodannotation":"implementation of join using a StringBuffer ","groudtruth":"java.lang.StringBuffer.length java.lang.StringBuffer.append java.lang.Object.toString java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer Z 8 java.lang.StringBuffer.length java.lang.StringBuffer.append ","decomposemethodname":"join ","nowapisequence":"java.lang.StringBuffer.length java.lang.StringBuffer.append "}
{"methodannotation":"restart the animation from the beginning ","groudtruth":"java.util.ArrayList.size java.util.ArrayList.get ","nowflat":"8 java.util.ArrayList.size @ ","decomposemethodname":"restart ","nowapisequence":"java.util.ArrayList.size "}
{"methodannotation":"builds the model ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} O ","decomposemethodname":"build ","nowapisequence":""}
{"methodannotation":"converts the given input to an object by using the ' fromString ' method ","groudtruth":"java.lang.reflect.Method.invoke java.lang.Class.cast java.lang.Throwable.getCause java.lang.Throwable.getCause ","nowflat":"} @ java.lang.reflect.Method.invoke java.lang.Class.cast O 8 java.lang.Throwable.getCause ","decomposemethodname":"from String ","nowapisequence":"java.lang.reflect.Method.invoke java.lang.Class.cast java.lang.Throwable.getCause "}
{"methodannotation":"transform a surface-relative point to a cartesian point ","groudtruth":"java.lang.Math.cos java.lang.Math.sin java.lang.Math.cos java.lang.Math.sin java.lang.Math.sqrt ","nowflat":"java.lang.Math.cos java.lang.Math.sin java.lang.Math.cos ","decomposemethodname":"transform ","nowapisequence":"java.lang.Math.cos java.lang.Math.sin java.lang.Math.cos "}
{"methodannotation":"increases the bounds to include a given point ","groudtruth":"java.lang.Math.min java.lang.Math.min java.lang.Math.min java.lang.Math.max java.lang.Math.max java.lang.Math.max ","nowflat":"java.lang.Math.min java.lang.Math.min java.lang.Math.min ","decomposemethodname":"add Point ","nowapisequence":"java.lang.Math.min java.lang.Math.min java.lang.Math.min "}
{"methodannotation":"add exception ","groudtruth":"java.util.HashSet.add ","nowflat":"","decomposemethodname":"add Exception ","nowapisequence":""}
{"methodannotation":"get a random numeric value ","groudtruth":"java.lang.Math.random ","nowflat":"@ ","decomposemethodname":"random ","nowapisequence":""}
{"methodannotation":"release the lock ","groudtruth":"java.lang.Thread.currentThread java.lang.Object.notify java.lang.Runnable.run ","nowflat":"8 java.lang.Thread.currentThread { java.lang.Error ","decomposemethodname":"release ","nowapisequence":"java.lang.Thread.currentThread "}
{"methodannotation":"finds a dependency in the cache ","groudtruth":"java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put ","nowflat":"8 java.util.HashMap<java.lang.String,java.lang.String> java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put ","decomposemethodname":"resolve ","nowapisequence":"java.util.HashMap<java.lang.String,java.lang.String> java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put "}
{"methodannotation":"dumps this model into XML ","groudtruth":"java.lang.Object.getClass javax.xml.bind.JAXBContext.newInstance javax.xml.bind.JAXBContext.createMarshaller javax.xml.bind.Marshaller.marshal ","nowflat":"java.lang.Object.getClass javax.xml.bind.JAXBContext.newInstance ","decomposemethodname":"dump ","nowapisequence":"java.lang.Object.getClass javax.xml.bind.JAXBContext.newInstance "}
{"methodannotation":"load all available locations from the workspace configuration directory ","groudtruth":"java.io.File.listFiles java.io.PrintStream.println ","nowflat":"java.util.TreeMap<java.lang.String,org.apache.hadoop.eclipse.servers.HadoopServer> Z java.io.File.listFiles ","decomposemethodname":"load ","nowapisequence":"java.util.TreeMap<java.lang.String,org.apache.hadoop.eclipse.servers.HadoopServer> java.io.File.listFiles "}
{"methodannotation":"logs a warning message ","groudtruth":"java.util.logging.Logger.log ","nowflat":"8 ","decomposemethodname":"warn ","nowapisequence":""}
{"methodannotation":"log INFO ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"info ","nowapisequence":""}
{"methodannotation":"print a warning message if verbose mode is enabled ","groudtruth":"java.lang.String.format javax.annotation.processing.Messager.printMessage ","nowflat":"8 ","decomposemethodname":"debug ","nowapisequence":""}
{"methodannotation":"given a bean class and a descriptor of the method to be invoked , returns the Method instance ","groudtruth":"java.lang.Class.getClassLoader java.lang.Class.forName java.lang.Class.getMethod ","nowflat":"W W 7 } java.lang.Class.getClassLoader java.lang.Class.forName O ","decomposemethodname":"find Method ","nowapisequence":"java.lang.Class.getClassLoader java.lang.Class.forName "}
{"methodannotation":"execute the Selector.select operations ","groudtruth":"java.nio.channels.Selector.select java.nio.channels.Selector.selectNow java.nio.channels.Selector.selectedKeys ","nowflat":"8 java.nio.channels.Selector.select java.nio.channels.Selector.selectNow ","decomposemethodname":"select ","nowapisequence":"java.nio.channels.Selector.select java.nio.channels.Selector.selectNow "}
{"methodannotation":"write a string to the output stream and escape some HTML characters ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.String.valueOf ","nowflat":"7 java.lang.String.length java.lang.String.charAt 8 = M ","decomposemethodname":"write String ","nowapisequence":"java.lang.String.length java.lang.String.charAt "}
{"methodannotation":"perform a log2 ","groudtruth":"java.lang.Math.log java.lang.Math.log ","nowflat":"@ N ","decomposemethodname":"log2 ","nowapisequence":""}
{"methodannotation":"add more value for OR relationship to this attribute ","groudtruth":"java.util.ArrayList.add ","nowflat":"8 ","decomposemethodname":"add Value ","nowapisequence":""}
{"methodannotation":"link a emitter configurable range to a value panel ","groudtruth":"java.util.HashMap.put ","nowflat":"","decomposemethodname":"link ","nowapisequence":""}
{"methodannotation":"add listener : action event sent when task is done ","groudtruth":"javax.swing.event.EventListenerList.add ","nowflat":"","decomposemethodname":"add Action Listener ","nowapisequence":""}
{"methodannotation":"removes a listener to be notified of slider changes ","groudtruth":"java.util.Vector.removeElement ","nowflat":"_ ","decomposemethodname":"remove Action Listener ","nowapisequence":""}
{"methodannotation":"forces this dispatcher to quit immediately ","groudtruth":"java.lang.Thread.interrupt ","nowflat":"","decomposemethodname":"quit ","nowapisequence":""}
{"methodannotation":"this processes the request for updating an Artifact ","groudtruth":"java.util.Arrays.asList ","nowflat":"java.util.ArrayList<org.ebayopensource.turmeric.repository.wso2.operations.CommonErrorData> } java.lang.Object 8 8 @ 8 8 @ java.util.Arrays.asList java.util.ArrayList java.util.ArrayList 8 ","decomposemethodname":"process ","nowapisequence":"java.util.ArrayList<org.ebayopensource.turmeric.repository.wso2.operations.CommonErrorData> java.util.Arrays.asList "}
{"methodannotation":"get the number of elements in the JSONArray , included nulls ","groudtruth":"java.util.Vector.size ","nowflat":"@ ","decomposemethodname":"length ","nowapisequence":""}
{"methodannotation":"returns true if this either implements the interface argument or is directly or indirectly a wrapper for an object that does ","groudtruth":"java.lang.Class.isInstance ","nowflat":"@ ","decomposemethodname":"is Wrapper For ","nowapisequence":""}
{"methodannotation":"get the next token or string ","groudtruth":"java.lang.Character.isWhitespace java.lang.StringBuffer.toString java.lang.StringBuffer.append java.lang.Character.isWhitespace java.lang.StringBuffer.toString java.lang.StringBuffer.append ","nowflat":"java.lang.StringBuffer X java.lang.Character.isWhitespace 8 7 8 { 8 @ java.lang.StringBuffer.toString ","decomposemethodname":"next Token ","nowapisequence":"java.lang.Character.isWhitespace java.lang.StringBuffer.toString "}
{"methodannotation":"returns an object that implements the given interface to allow access to non-standard methods , or standard methods not exposed by the proxy ","groudtruth":"java.lang.Class.getName java.lang.String.equals java.lang.Class.getName java.lang.String.equals java.lang.Class.cast java.lang.reflect.Proxy.newProxyInstance java.lang.Class.cast ","nowflat":"} 8 java.lang.Class.getName java.lang.String.equals java.lang.Class.getName java.lang.String.equals @ java.lang.Class.cast 8 java.util.HashMap ","decomposemethodname":"unwrap ","nowapisequence":"java.lang.Class.getName java.lang.String.equals java.lang.Class.getName java.lang.String.equals java.lang.Class.cast "}
{"methodannotation":"returns invalid if url encoding made a change to the string ","groudtruth":"java.util.List.isEmpty java.lang.String.equals ","nowflat":"8 java.util.List.isEmpty Z 8 ","decomposemethodname":"is Valid ","nowapisequence":"java.util.List.isEmpty "}
{"methodannotation":"this method is used to add an object 's information to the dumpResult 's serializable buffer ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.String.toCharArray java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder java.lang.StringBuilder.append java.lang.StringBuilder.append Z 8 java.lang.StringBuilder.append U 8 java.lang.StringBuilder.append U 8 @ Z java.lang.String.toCharArray ","decomposemethodname":"add Row ","nowapisequence":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.String.toCharArray "}
{"methodannotation":"checks whether the text is empty ","groudtruth":"java.lang.String.length java.lang.String.trim ","nowflat":"@ ","decomposemethodname":"is Empty ","nowapisequence":""}
{"methodannotation":"convert the given string to an array of bytes ","groudtruth":"java.lang.String.length java.lang.String.charAt ","nowflat":"W 8 @ java.lang.String.length W ","decomposemethodname":"to Bytes ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"add a new movement to the batch of movements in this event ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W 8 W W java.lang.System.arraycopy ","decomposemethodname":"add Batch ","nowapisequence":"java.lang.System.arraycopy "}
{"methodannotation":"splits the input a_string into individual chromosome representations ","groudtruth":"java.util.Collections.synchronizedList java.util.StringTokenizer.hasMoreTokens java.lang.String.equals java.util.StringTokenizer.nextToken java.util.StringTokenizer.nextToken java.lang.String.equals java.util.List.add java.util.List.add java.lang.String.equals java.util.StringTokenizer.nextToken ","nowflat":"java.util.ArrayList java.util.Collections.synchronizedList java.util.StringTokenizer ` java.util.StringTokenizer.hasMoreTokens 8 java.lang.String.equals java.util.StringTokenizer.nextToken { java.util.StringTokenizer.nextToken 8 ","decomposemethodname":"split ","nowapisequence":"java.util.Collections.synchronizedList java.util.StringTokenizer.hasMoreTokens java.lang.String.equals java.util.StringTokenizer.nextToken java.util.StringTokenizer.nextToken "}
{"methodannotation":"determines whether or not the string ' searchIn ' contains the string ' searchFor ' , dis-regarding case starting at ' startAt ' Shorthand for a String.regionMatch ","groudtruth":"java.lang.String.length java.lang.String.regionMatches ","nowflat":"@ ","decomposemethodname":"starts With Ignore Case ","nowapisequence":""}
{"methodannotation":"print commit authors and dates paged in blocks of 25 ","groudtruth":"java.io.PrintStream.println java.text.MessageFormat.format java.io.PrintStream.println ","nowflat":"W Z java.io.PrintStream.println ","decomposemethodname":"main ","nowapisequence":"java.io.PrintStream.println "}
{"methodannotation":"read the map in using a custom routine ","groudtruth":"java.io.ObjectInputStream.defaultReadObject ","nowflat":"","decomposemethodname":"read Object ","nowapisequence":""}
{"methodannotation":"casts given numbers to the specified type ","groudtruth":"java.lang.Number.intValue java.lang.Integer.valueOf java.lang.Number.longValue java.lang.Long.valueOf java.lang.Number.floatValue java.lang.Float.valueOf java.lang.Number.doubleValue java.lang.Double.valueOf java.lang.Number.byteValue java.lang.Byte.valueOf java.lang.Number.shortValue java.lang.Short.valueOf ","nowflat":"W W W 7 8 8 java.lang.Number.intValue java.lang.Integer.valueOf 8 java.lang.Number.longValue java.lang.Long.valueOf 8 java.lang.Number.floatValue java.lang.Float.valueOf ","decomposemethodname":"cast ","nowapisequence":"java.lang.Number.intValue java.lang.Integer.valueOf java.lang.Number.longValue java.lang.Long.valueOf java.lang.Number.floatValue java.lang.Float.valueOf "}
{"methodannotation":"draws the border by filling in the reserved space ","groudtruth":"java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getX java.awt.geom.RectangularShape.getY java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getHeight java.awt.Graphics2D.setPaint java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill ","nowflat":"java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getX java.awt.geom.RectangularShape.getY java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getHeight java.awt.Graphics2D.setPaint java.awt.geom.Rectangle2D.Double 8 java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill ","decomposemethodname":"draw ","nowapisequence":"java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getHeight java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getX java.awt.geom.RectangularShape.getY java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getHeight java.awt.Graphics2D.setPaint java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D.setRect java.awt.Graphics2D.fill "}
{"methodannotation":"substitutes a class name in the given descriptor string ","groudtruth":"java.lang.String.indexOf java.lang.String.indexOf java.lang.String.startsWith java.lang.String.charAt java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.length java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 java.lang.String.indexOf @ java.lang.StringBuffer 7 java.lang.String.indexOf 8 M 8 java.lang.String.startsWith java.lang.String.charAt java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"rename ","nowapisequence":"java.lang.String.indexOf java.lang.String.indexOf java.lang.String.startsWith java.lang.String.charAt java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"try loading the properties from the configuration file ","groudtruth":"java.util.logging.Logger.severe java.lang.System.exit ","nowflat":"} O ","decomposemethodname":"load Properties ","nowapisequence":""}
{"methodannotation":"returns a string that is equivalent to the specified string with its first character converted to uppercase as by String toUpperCase ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.Character.toUpperCase java.lang.String.substring ","nowflat":"8 java.lang.String.length @ java.lang.String.charAt ","decomposemethodname":"capitalize ","nowapisequence":"java.lang.String.length java.lang.String.charAt "}
{"methodannotation":"@Override ","groudtruth":"javax.swing.SpinnerModel.setValue ","nowflat":"","decomposemethodname":"update UI ","nowapisequence":""}
{"methodannotation":"this will add a mapping ","groudtruth":"java.util.Map.put java.util.Map.put ","nowflat":"W 8 java.lang.Integer java.util.Map.put 8 ","decomposemethodname":"add Mapping ","nowapisequence":"java.util.Map.put "}
{"methodannotation":"recycle this object ","groudtruth":"java.util.Stack.push ","nowflat":"_ ","decomposemethodname":"recycle ","nowapisequence":""}
{"methodannotation":"check if the current value ends with the patternValue or the referenceValue ","groudtruth":"java.lang.String.isEmpty java.lang.String.endsWith java.util.regex.Pattern.matcher java.util.regex.Matcher.find java.util.regex.Matcher.end java.lang.String.length ","nowflat":"8 java.lang.String.isEmpty @ 8 @ java.lang.String.endsWith java.util.regex.Pattern.matcher ","decomposemethodname":"ends With ","nowapisequence":"java.lang.String.isEmpty java.lang.String.endsWith java.util.regex.Pattern.matcher "}
{"methodannotation":"locks the database for exclusive access ","groudtruth":"java.util.concurrent.locks.ReentrantLock.lock java.util.concurrent.locks.ReentrantLock.getHoldCount ","nowflat":"8 @ java.util.concurrent.locks.ReentrantLock.lock ","decomposemethodname":"lock ","nowapisequence":"java.util.concurrent.locks.ReentrantLock.lock "}
{"methodannotation":"release the lock ","groudtruth":"java.net.ServerSocket.close java.lang.Object.notify ","nowflat":"_ 8 { java.lang.IllegalStateException } java.net.ServerSocket.close ","decomposemethodname":"unlock ","nowapisequence":"java.net.ServerSocket.close "}
{"methodannotation":"evaluate the gaussian with 2 parameters -RRB- ","groudtruth":"java.lang.Math.exp ","nowflat":"W ","decomposemethodname":"eval ","nowapisequence":""}
{"methodannotation":"creates and initializes the input and output images ","groudtruth":"java.awt.image.BufferedImage.getWidth java.awt.image.BufferedImage.getHeight java.awt.image.BufferedImage.getType java.awt.image.BufferedImage.createGraphics java.awt.Graphics.drawImage java.awt.image.BufferedImage.createGraphics java.awt.image.Raster.getDataElements java.awt.image.BufferedImage.getRaster ","nowflat":"java.awt.image.BufferedImage.getWidth java.awt.image.BufferedImage.getHeight W W 8 java.awt.image.BufferedImage.getType java.awt.image.BufferedImage java.awt.image.BufferedImage.createGraphics ","decomposemethodname":"initialize ","nowapisequence":"java.awt.image.BufferedImage.getWidth java.awt.image.BufferedImage.getHeight java.awt.image.BufferedImage.getType java.awt.image.BufferedImage.createGraphics "}
{"methodannotation":"called when the user clicks the Send button ","groudtruth":"java.lang.String.valueOf java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals ","nowflat":"N java.lang.String.valueOf 8 java.lang.String.equals 8 java.lang.String.equals 8 java.lang.String.equals 8 ","decomposemethodname":"send Message ","nowapisequence":"java.lang.String.valueOf java.lang.String.equals java.lang.String.equals java.lang.String.equals "}
{"methodannotation":"schedules the specified task ","groudtruth":"java.util.concurrent.Executor.execute ","nowflat":"8 java.lang.Object ","decomposemethodname":"schedule ","nowapisequence":""}
{"methodannotation":"produce a comma delimited text row from a JSONArray ","groudtruth":"java.lang.StringBuffer.append java.lang.Object.toString java.lang.String.length java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.charAt java.lang.StringBuffer.append java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 7 8 java.lang.StringBuffer.append 8 java.lang.Object.toString 8 java.lang.String.length java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.charAt java.lang.StringBuffer.append ","decomposemethodname":"row To String ","nowapisequence":"java.lang.StringBuffer.append java.lang.Object.toString java.lang.String.length java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.charAt java.lang.StringBuffer.append "}
{"methodannotation":"replace all instances of ' with '' ","groudtruth":"java.lang.String.length java.lang.StringBuffer.append java.lang.String.charAt java.lang.StringBuffer.append java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.String.length java.lang.StringBuffer java.lang.StringBuffer.append 7 8 java.lang.String.charAt java.lang.StringBuffer.append ","decomposemethodname":"escape ","nowapisequence":"java.lang.String.length java.lang.StringBuffer.append java.lang.String.charAt java.lang.StringBuffer.append "}
{"methodannotation":"convert % hh sequences to single characters , and convert plus to space ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.String.charAt java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.String.length java.lang.StringBuffer 7 java.lang.String.charAt 8 8 java.lang.String.charAt ","decomposemethodname":"unescape ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.String.charAt "}
{"methodannotation":"converts a property file object into a JSONObject ","groudtruth":"java.util.Hashtable.isEmpty java.util.Properties.propertyNames java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.util.Properties.getProperty ","nowflat":"8 java.util.Hashtable.isEmpty java.util.Properties.propertyNames ` java.util.Enumeration.hasMoreElements ","decomposemethodname":"to JSONObject ","nowapisequence":"java.util.Hashtable.isEmpty java.util.Properties.propertyNames java.util.Enumeration.hasMoreElements "}
{"methodannotation":"produce a string from a double ","groudtruth":"java.lang.Double.isInfinite java.lang.Double.isNaN java.lang.Double.toString java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf java.lang.String.endsWith java.lang.String.substring java.lang.String.endsWith java.lang.String.substring ","nowflat":"8 java.lang.Double.isInfinite java.lang.Double.isNaN @ java.lang.Double.toString 8 java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf ","decomposemethodname":"double To String ","nowapisequence":"java.lang.Double.isInfinite java.lang.Double.isNaN java.lang.Double.toString java.lang.String.indexOf java.lang.String.indexOf java.lang.String.indexOf "}
{"methodannotation":"determine if the JsonObject contains a specific key ","groudtruth":"java.util.Map.containsKey ","nowflat":"@ ","decomposemethodname":"has ","nowapisequence":""}
{"methodannotation":"get an enumeration of the keys of the JSONObject ","groudtruth":"java.util.Set.iterator java.util.Map.keySet ","nowflat":"@ ","decomposemethodname":"keys ","nowapisequence":""}
{"methodannotation":"get an optional value associated with a key ","groudtruth":"java.util.Hashtable.get ","nowflat":"@ ","decomposemethodname":"opt ","nowapisequence":""}
{"methodannotation":"produce a string in double quotes with backslash sequences in all the right places ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.StringBuilder.append java.lang.String.charAt java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.Integer.toHexString java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"8 java.lang.String.length @ java.lang.String.length java.lang.StringBuilder java.lang.StringBuilder.append 7 java.lang.String.charAt = java.lang.StringBuilder.append java.lang.StringBuilder.append M 8 java.lang.StringBuilder.append java.lang.StringBuilder.append M java.lang.StringBuilder.append M java.lang.StringBuilder.append ","decomposemethodname":"quote ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.StringBuilder.append java.lang.String.charAt java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append "}
{"methodannotation":"get an enumeration of the keys of the JSONObject ","groudtruth":"java.util.TreeSet.iterator java.util.Map.keySet ","nowflat":"@ java.util.TreeSet.iterator ","decomposemethodname":"sorted Keys ","nowapisequence":"java.util.TreeSet.iterator "}
{"methodannotation":"try to convert a string into a number , boolean , or null ","groudtruth":"java.lang.String.equals java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equals java.lang.String.charAt java.lang.String.charAt java.lang.String.charAt java.lang.String.indexOf java.lang.Double.valueOf java.lang.String.indexOf java.lang.String.indexOf java.lang.Long.longValue java.lang.Long.intValue java.lang.Long.intValue ","nowflat":"8 java.lang.String.equals @ 8 java.lang.String.equalsIgnoreCase @ 8 java.lang.String.equalsIgnoreCase @ 8 java.lang.String.equalsIgnoreCase @ 8 java.lang.String.equals @ java.lang.Integer } java.lang.String.charAt 8 java.lang.String.charAt 8 java.lang.String.charAt @ 8 ","decomposemethodname":"string To Value ","nowapisequence":"java.lang.String.equals java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equals java.lang.String.charAt java.lang.String.charAt java.lang.String.charAt "}
{"methodannotation":"throw an exception if the object is an NaN or infinite number ","groudtruth":"java.lang.Double.isInfinite java.lang.Double.isNaN java.lang.Float.isInfinite java.lang.Float.isNaN ","nowflat":"8 8 8 java.lang.Double.isInfinite java.lang.Double.isNaN { ","decomposemethodname":"test Validity ","nowapisequence":"java.lang.Double.isInfinite java.lang.Double.isNaN "}
{"methodannotation":"utility - creates an element and appends it ","groudtruth":"org.w3c.dom.Document.createElement org.w3c.dom.Node.appendChild ","nowflat":"org.w3c.dom.Document.createElement ","decomposemethodname":"append ","nowapisequence":"org.w3c.dom.Document.createElement "}
{"methodannotation":"append a key ","groudtruth":"java.io.Writer.write java.io.Writer.write java.io.Writer.write ","nowflat":"8 { 8 } 8 java.io.Writer.write java.io.Writer.write ","decomposemethodname":"key ","nowapisequence":"java.io.Writer.write java.io.Writer.write "}
{"methodannotation":"throw an exception if the string contains whitespace ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.Character.isWhitespace ","nowflat":"java.lang.String.length 8 { 7 ","decomposemethodname":"no Space ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"get the text in the CDATA block ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.length java.lang.StringBuffer.charAt java.lang.StringBuffer.charAt java.lang.StringBuffer.charAt java.lang.StringBuffer.setLength java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 7 8 { java.lang.StringBuffer.append java.lang.StringBuffer.length 8 ","decomposemethodname":"next CDATA ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.length "}
{"methodannotation":"return the next entity ","groudtruth":"java.lang.Character.isLetterOrDigit java.lang.Character.toLowerCase java.lang.StringBuffer.append java.lang.StringBuffer.toString java.util.HashMap.get ","nowflat":"java.lang.StringBuffer 7 8 java.lang.Character.isLetterOrDigit java.lang.Character.toLowerCase java.lang.StringBuffer.append 8 ","decomposemethodname":"next Entity ","nowapisequence":"java.lang.Character.isLetterOrDigit java.lang.Character.toLowerCase java.lang.StringBuffer.append "}
{"methodannotation":"returns the next XML meta token ","groudtruth":"java.lang.Character.isWhitespace java.lang.Character.isWhitespace ","nowflat":"X java.lang.Character.isWhitespace = { @ @ @ @ @ @ 7 8 ","decomposemethodname":"next Meta ","nowapisequence":"java.lang.Character.isWhitespace "}
{"methodannotation":"pad a string from right ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.Math.min java.lang.String.substring ","nowflat":"@ java.lang.String.length java.lang.String.length ","decomposemethodname":"format ","nowapisequence":"java.lang.String.length java.lang.String.length "}
{"methodannotation":"returns an iterator over the FormField objects in the list ","groudtruth":"java.util.ArrayList.iterator ","nowflat":"@ ","decomposemethodname":"iterator ","nowapisequence":""}
{"methodannotation":"true if the pipe is open ","groudtruth":"java.nio.channels.spi.AbstractInterruptibleChannel.isOpen java.nio.channels.Pipe.sink java.nio.channels.spi.AbstractInterruptibleChannel.isOpen java.nio.channels.Pipe.source ","nowflat":"@ java.nio.channels.spi.AbstractInterruptibleChannel.isOpen java.nio.channels.Pipe.sink ","decomposemethodname":"is Open ","nowapisequence":"java.nio.channels.spi.AbstractInterruptibleChannel.isOpen java.nio.channels.Pipe.sink "}
{"methodannotation":"sanitize the given input string ","groudtruth":"java.lang.String.trim java.lang.String.replaceAll java.lang.String.replaceAll java.lang.String.toLowerCase ","nowflat":"@ java.lang.String.trim java.lang.String.replaceAll ","decomposemethodname":"sanitize ","nowapisequence":"java.lang.String.trim java.lang.String.replaceAll "}
{"methodannotation":"get a single collection of all the values in the map ","groudtruth":"java.util.Map.keySet java.util.ArrayList.size java.util.Map.get java.util.Map.get java.util.Collection.addAll ","nowflat":"java.util.Map.keySet Z java.util.ArrayList.size java.util.Map.get java.util.ArrayList<V> ","decomposemethodname":"values ","nowapisequence":"java.util.Map.keySet java.util.ArrayList.size java.util.Map.get java.util.ArrayList<V> "}
{"methodannotation":"helper method to load an image file from the CLASSPATH ","groudtruth":"java.lang.Class.getClassLoader java.lang.Object.getClass java.lang.ClassLoader.getResource java.lang.Throwable.printStackTrace ","nowflat":"} java.lang.Class.getClassLoader java.lang.Object.getClass java.lang.ClassLoader.getResource 8 javax.swing.ImageIcon ","decomposemethodname":"load Image ","nowapisequence":"java.lang.Class.getClassLoader java.lang.Object.getClass java.lang.ClassLoader.getResource "}
{"methodannotation":"this is almost the same as Double.parseDouble , but it handles a few more versions of infinity ","groudtruth":"java.lang.String.equals java.lang.String.equals java.lang.Double.parseDouble ","nowflat":"8 java.lang.String.equals @ 8 ","decomposemethodname":"parse Double ","nowapisequence":"java.lang.String.equals "}
{"methodannotation":"parses a boolean ","groudtruth":"java.lang.String.equalsIgnoreCase ","nowflat":"8 @ ","decomposemethodname":"parse Boolean ","nowapisequence":""}
{"methodannotation":"fill the internal buffer using data from the undelying input stream ","groudtruth":"java.nio.Buffer.clear java.nio.Buffer.limit java.nio.ByteBuffer.get java.nio.Buffer.clear java.nio.Buffer.limit java.nio.ByteBuffer.get ","nowflat":"8 8 { java.lang.IllegalArgumentException java.nio.Buffer.clear 8 java.nio.Buffer.limit java.nio.ByteBuffer.get 8 @ { java.io.IOException java.nio.Buffer.clear 8 ","decomposemethodname":"fill ","nowapisequence":"java.nio.Buffer.clear java.nio.Buffer.limit java.nio.ByteBuffer.get java.nio.Buffer.clear "}
{"methodannotation":"strip input of whitespace and force Uppercase - except sections inside quotes ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.String.charAt java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.String.substring java.lang.StringBuilder.append java.lang.Character.toUpperCase java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.String.length java.lang.StringBuilder 7 java.lang.String.length java.lang.String.charAt 8 java.lang.String.indexOf 8 java.lang.String.length java.lang.String.substring java.lang.StringBuilder.append java.lang.StringBuilder.append ","decomposemethodname":"clean ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.String.charAt java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuilder.append java.lang.StringBuilder.append "}
{"methodannotation":"implementation of startDocument ","groudtruth":"java.util.Stack.push java.lang.Throwable.toString java.util.logging.Logger.warning ","nowflat":"} java.lang.Object java.util.Stack.push O ","decomposemethodname":"start Document ","nowapisequence":"java.util.Stack.push "}
{"methodannotation":"read IOR from the file in the local file system ","groudtruth":"java.io.File.exists java.io.File.length java.io.Reader.read java.io.InputStreamReader.close java.lang.String.trim java.lang.Throwable.initCause ","nowflat":"java.io.File 8 java.io.File.exists org.omg.CORBA.DATA_CONVERSION } W W N java.io.File.length java.io.FileReader java.io.Reader.read ","decomposemethodname":"read File ","nowapisequence":"java.io.File.exists java.io.File.length java.io.Reader.read "}
{"methodannotation":"update status according to current conditions ","groudtruth":"javax.swing.undo.UndoManager.canUndo javax.swing.AbstractAction.setEnabled ","nowflat":"javax.swing.undo.UndoManager.canUndo ","decomposemethodname":"update Status ","nowapisequence":"javax.swing.undo.UndoManager.canUndo "}
{"methodannotation":"overridden to store properties locally , not in the Ant Project ","groudtruth":"java.util.Hashtable.get java.util.Hashtable.put ","nowflat":"8 ","decomposemethodname":"add Property ","nowapisequence":""}
{"methodannotation":"sets a target coffee object 's roast attribute to the given string ","groudtruth":"java.util.Vector.lastElement ","nowflat":"","decomposemethodname":"characters ","nowapisequence":""}
{"methodannotation":"adds an attribute ","groudtruth":"java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals ","nowflat":"8 { N 8 8 { 8 { 8 { 8 java.lang.String.equals { 8 8 { 8 { ","decomposemethodname":"add Attribute ","nowapisequence":"java.lang.String.equals "}
{"methodannotation":"remove a key/value object ","groudtruth":"java.util.Map.remove ","nowflat":"8 @ ","decomposemethodname":"remove Attribute ","nowapisequence":""}
{"methodannotation":"prints the message ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"print ","nowapisequence":""}
{"methodannotation":"entry point for generating all stics files ","groudtruth":"java.lang.Throwable.toString ","nowflat":"} java.lang.Object O ","decomposemethodname":"write File ","nowapisequence":""}
{"methodannotation":"validates the contend of a RuleInputField ","groudtruth":"java.lang.Integer.parseInt ","nowflat":"8 @ 7 } ","decomposemethodname":"validate ","nowapisequence":""}
{"methodannotation":"description of the Method ","groudtruth":"java.awt.event.ActionEvent.getActionCommand java.lang.String.equals java.awt.Dialog.setVisible java.lang.String.equals javax.swing.text.JTextComponent.getText javax.swing.text.JTextComponent.getText javax.swing.text.JTextComponent.getText javax.swing.JComboBox.getSelectedItem java.awt.Dialog.setVisible ","nowflat":"java.awt.event.ActionEvent.getActionCommand 8 java.lang.String.equals java.awt.Dialog.setVisible 8 java.lang.String.equals java.lang.Object ","decomposemethodname":"action Performed ","nowapisequence":"java.awt.event.ActionEvent.getActionCommand java.lang.String.equals java.awt.Dialog.setVisible java.lang.String.equals "}
{"methodannotation":"informs all listeners ","groudtruth":"java.util.List.iterator java.util.Iterator.hasNext java.util.Iterator.next java.lang.Throwable.toString ","nowflat":"java.util.List.iterator ` java.util.Iterator.hasNext } N java.util.Iterator.next = ","decomposemethodname":"inform Listeners ","nowapisequence":"java.util.List.iterator java.util.Iterator.hasNext java.util.Iterator.next "}
{"methodannotation":"starts the connection manager thread ","groudtruth":"java.lang.Thread.start ","nowflat":"java.lang.Thread ","decomposemethodname":"open ","nowapisequence":""}
{"methodannotation":"instantiates an object ","groudtruth":"javax.management.MBeanServer.instantiate ","nowflat":"W W } @ ","decomposemethodname":"instantiate ","nowapisequence":""}
{"methodannotation":"adds an Array ","groudtruth":"java.lang.Float.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"W java.lang.StringBuffer 7 java.lang.Float.toString java.lang.StringBuffer.append ","decomposemethodname":"array To String ","nowapisequence":"java.lang.Float.toString java.lang.StringBuffer.append "}
{"methodannotation":"creates a DbUnit database connection ","groudtruth":"java.util.Properties.load java.util.Properties.getProperty java.util.Properties.getProperty java.util.Properties.getProperty java.util.Properties.getProperty java.lang.Class.forName java.sql.DriverManager.getConnection ","nowflat":"java.util.Properties java.io.FileInputStream java.util.Properties.load java.util.Properties.getProperty java.util.Properties.getProperty java.util.Properties.getProperty ","decomposemethodname":"create Connection ","nowapisequence":"java.util.Properties.load java.util.Properties.getProperty java.util.Properties.getProperty java.util.Properties.getProperty "}
{"methodannotation":"close an existing connection ","groudtruth":"java.sql.Connection.close ","nowflat":"8 8 } ","decomposemethodname":"close Connection ","nowapisequence":""}
{"methodannotation":"copies the specified sourceFile to the specified targetFile ","groudtruth":"java.io.File.getParentFile java.io.File.exists java.io.File.mkdirs java.io.InputStream.read java.io.InputStream.read java.io.OutputStream.write java.io.File.delete java.io.InputStream.close java.io.OutputStream.close ","nowflat":"8 { java.lang.NullPointerException java.io.File.getParentFile 8 java.io.File.exists java.io.File.mkdirs { java.io.IOException } java.io.FileInputStream java.io.BufferedInputStream java.io.FileOutputStream java.io.BufferedOutputStream } W W 7 java.io.InputStream.read ","decomposemethodname":"copy File ","nowapisequence":"java.io.File.getParentFile java.io.File.exists java.io.File.mkdirs java.io.InputStream.read "}
{"methodannotation":"converts the list to a comma separated representation ","groudtruth":"java.lang.StringBuilder.length java.lang.StringBuilder.append java.lang.Object.toString java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 8 N Z 8 java.lang.StringBuilder.length java.lang.StringBuilder.append ","decomposemethodname":"handle ","nowapisequence":"java.lang.StringBuilder.length java.lang.StringBuilder.append "}
{"methodannotation":"returns true if field success is set and false otherwise ","groudtruth":"java.util.BitSet.get ","nowflat":"@ ","decomposemethodname":"is Set Success ","nowapisequence":""}
{"methodannotation":"reports whether this ArgumentTypeDescriptor supports the given type ","groudtruth":"java.lang.Object.equals ","nowflat":"@ ","decomposemethodname":"supports ","nowapisequence":""}
{"methodannotation":"prevent shared object from being released ","groudtruth":"java.util.concurrent.atomic.AtomicInteger.incrementAndGet ","nowflat":"","decomposemethodname":"acquire ","nowapisequence":""}
{"methodannotation":"this method blocks while the swarm slave is serving as a slave ","groudtruth":"java.util.logging.Logger.fine java.util.Collections.emptyList java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep java.util.List.get java.util.List.add java.util.List.get java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.logging.Logger.fine java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.List.toArray java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep ","nowflat":"java.util.logging.Logger.fine java.util.Collections.emptyList } java.net.URL O java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep 8 } O java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep java.util.List.get java.util.List.add java.util.List.get java.util.List.add java.util.List.add java.util.List.add 8 ","decomposemethodname":"connect ","nowapisequence":"java.util.logging.Logger.fine java.util.Collections.emptyList java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep java.lang.Throwable.printStackTrace java.util.logging.Logger.log java.lang.Thread.sleep java.util.List.get java.util.List.add java.util.List.get java.util.List.add java.util.List.add java.util.List.add "}
{"methodannotation":"clear this buffer so it has no data , and can not be used again ","groudtruth":"java.io.OutputStream.close java.io.File.delete java.io.File.deleteOnExit ","nowflat":"8 } java.io.OutputStream.close O ","decomposemethodname":"destroy ","nowapisequence":"java.io.OutputStream.close "}
{"methodannotation":"util method to write an attribute with the ns prefix ","groudtruth":"javax.xml.stream.XMLStreamWriter.getPrefix javax.xml.stream.XMLStreamWriter.writeNamespace javax.xml.stream.XMLStreamWriter.setPrefix javax.xml.stream.XMLStreamWriter.writeAttribute ","nowflat":"8 javax.xml.stream.XMLStreamWriter.getPrefix javax.xml.stream.XMLStreamWriter.writeNamespace ","decomposemethodname":"write Attribute ","nowapisequence":"javax.xml.stream.XMLStreamWriter.getPrefix javax.xml.stream.XMLStreamWriter.writeNamespace "}
{"methodannotation":"import RDF data from a string ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} } java.io.StringReader ","decomposemethodname":"add String ","nowapisequence":""}
{"methodannotation":"escape an html string ","groudtruth":"java.lang.String.replaceAll java.lang.String.replaceAll java.lang.String.replaceAll ","nowflat":"8 @ @ ","decomposemethodname":"escape Html ","nowapisequence":""}
{"methodannotation":"read all the messages stores from the specified locale from all the specified packages ","groudtruth":"java.lang.String.equals ","nowflat":"Z java.lang.Object } O ","decomposemethodname":"read ","nowapisequence":""}
{"methodannotation":"add option - rotate to the ImageMagick commandline ","groudtruth":"java.lang.Double.toString java.lang.StringBuffer.append java.lang.Character.toString java.lang.StringBuffer.append java.lang.StringBuffer.length java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.Double.toString java.lang.StringBuffer.append 8 java.lang.Character.toString ","decomposemethodname":"rotate ","nowapisequence":"java.lang.Double.toString java.lang.StringBuffer.append java.lang.Character.toString "}
{"methodannotation":"implementation of String indexOf for character sequences ","groudtruth":"java.lang.CharSequence.length java.lang.CharSequence.length java.lang.CharSequence.charAt java.lang.CharSequence.charAt java.lang.CharSequence.charAt java.lang.CharSequence.charAt java.lang.CharSequence.charAt ","nowflat":"java.lang.CharSequence.length java.lang.CharSequence.length 8 @ S 8 8 @ java.lang.CharSequence.charAt 7 8 java.lang.CharSequence.charAt ","decomposemethodname":"index Of ","nowapisequence":"java.lang.CharSequence.length java.lang.CharSequence.length java.lang.CharSequence.charAt java.lang.CharSequence.charAt "}
{"methodannotation":"returns true if this LinkedHashMap maps one or more keys to the specified value ","groudtruth":"java.lang.Object.equals ","nowflat":"8 7 8 @ 7 ","decomposemethodname":"contains Value ","nowapisequence":""}
{"methodannotation":"applies the operator to the given String values ","groudtruth":"java.lang.String.compareTo ","nowflat":"@ ","decomposemethodname":"apply ","nowapisequence":""}
{"methodannotation":"creates a new array , the size of which is less than or equal to normals.length + metas.length ","groudtruth":"java.util.Set.add java.util.Set.add java.util.Set.size java.util.Set.toArray ","nowflat":"W W W 8 @ 8 @ java.util.HashSet 7 java.util.Set.add 7 ","decomposemethodname":"union ","nowapisequence":"java.util.Set.add "}
{"methodannotation":"like String.replace except that the old new items are strings ","groudtruth":"java.lang.String.length java.lang.String.indexOf java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuffer.append ","nowflat":"8 @ java.lang.StringBuffer java.lang.String.length } java.lang.String.indexOf ` java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"replace ","nowapisequence":"java.lang.String.length java.lang.String.indexOf java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"raises each entry in array a by power c ","groudtruth":"java.lang.Math.pow ","nowflat":"W W W W ","decomposemethodname":"pow ","nowapisequence":""}
{"methodannotation":"the CopyOnWriteArrayList iterator does not support remove but the sort implementation makes use of it ","groudtruth":"java.util.Arrays.sort ","nowflat":"W ","decomposemethodname":"sort ","nowapisequence":""}
{"methodannotation":"returns the square root of a given value ","groudtruth":"java.lang.Math.sqrt ","nowflat":"@ ","decomposemethodname":"sqrt ","nowapisequence":""}
{"methodannotation":"aligns the first rows * cols components of parent in a grid ","groudtruth":"java.awt.Container.getLayout java.io.PrintStream.println javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth javax.swing.Spring.max javax.swing.SpringLayout.Constraints.getHeight javax.swing.Spring.max java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.setWidth javax.swing.SpringLayout.Constraints.setHeight java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.setX javax.swing.SpringLayout.Constraints.getConstraint javax.swing.Spring.sum javax.swing.SpringLayout.Constraints.setX javax.swing.SpringLayout.Constraints.setY javax.swing.SpringLayout.Constraints.getConstraint javax.swing.Spring.sum javax.swing.SpringLayout.Constraints.setY javax.swing.SpringLayout.getConstraints javax.swing.Spring.constant javax.swing.SpringLayout.Constraints.getConstraint javax.swing.Spring.sum javax.swing.SpringLayout.Constraints.setConstraint javax.swing.Spring.constant javax.swing.SpringLayout.Constraints.getConstraint javax.swing.Spring.sum javax.swing.SpringLayout.Constraints.setConstraint ","nowflat":"} N java.awt.Container.getLayout O java.io.PrintStream.println @ javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints 7 java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth javax.swing.Spring.max javax.swing.SpringLayout.Constraints.getHeight javax.swing.Spring.max 7 java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.setWidth javax.swing.SpringLayout.Constraints.setHeight 7 java.awt.Container.getComponent ","decomposemethodname":"make Grid ","nowapisequence":"java.awt.Container.getLayout java.io.PrintStream.println javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.Spring.constant javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.getWidth javax.swing.Spring.max javax.swing.SpringLayout.Constraints.getHeight javax.swing.Spring.max java.awt.Container.getComponent javax.swing.SpringLayout.getConstraints javax.swing.SpringLayout.Constraints.setWidth javax.swing.SpringLayout.Constraints.setHeight java.awt.Container.getComponent "}
{"methodannotation":"this adds org.eclipse.emf.edit.command.CommandParameter s describing the children that can be created under this object ","groudtruth":"java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add ","nowflat":"java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add ","decomposemethodname":"collect New Child Descriptors ","nowapisequence":"java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add java.util.Collection.add "}
{"methodannotation":"this removes from the specified manager all org.eclipse.jface.action.ActionContributionItem s based on the org.eclipse.jface.action.IAction s contained in the actions collection ","groudtruth":"java.util.Collection.contains ","nowflat":"8 W 7 ` ","decomposemethodname":"depopulate Manager ","nowapisequence":""}
{"methodannotation":"this deals with how we want selection in the outliner to affect the other views ","groudtruth":"java.util.Iterator.hasNext java.util.Iterator.next java.util.ArrayList.add java.util.Iterator.hasNext java.util.Iterator.next java.util.ArrayList.add ","nowflat":"8 8 java.util.Iterator.hasNext java.util.Iterator.next java.util.ArrayList<java.lang.Object> java.util.ArrayList.add ","decomposemethodname":"handle Content Outline Selection ","nowapisequence":"java.util.Iterator.hasNext java.util.Iterator.next java.util.ArrayList<java.lang.Object> java.util.ArrayList.add "}
{"methodannotation":"the framework calls this to see if the file is correct ","groudtruth":"java.util.List.contains java.util.List.size ","nowflat":"8 java.lang.Object 8 java.util.List.contains S ","decomposemethodname":"validate Page ","nowapisequence":"java.util.List.contains "}
{"methodannotation":"overridden , so that the Swing button can create an Image without its own peer ","groudtruth":"java.awt.peer.ComponentPeer.createImage ","nowflat":"@ ","decomposemethodname":"create Image ","nowapisequence":""}
{"methodannotation":"trims an array to be exactly the target a size ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W W 8 @ ","decomposemethodname":"trim ","nowapisequence":""}
{"methodannotation":"replace the list by the given new list ","groudtruth":"java.util.ArrayList.add ","nowflat":"Z ","decomposemethodname":"add All ","nowapisequence":""}
{"methodannotation":"removes all the elements in the given collection from the queue ","groudtruth":"java.util.Collection.removeAll ","nowflat":"@ ","decomposemethodname":"remove All ","nowapisequence":""}
{"methodannotation":"given a string , return an array of tokens ","groudtruth":"java.lang.String.length java.lang.Character.charCount java.lang.String.codePointAt java.lang.StringBuilder.appendCodePoint java.util.List.size java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder.appendCodePoint java.lang.StringBuilder.length java.lang.StringBuilder.toString java.util.List.add java.util.List.toArray ","nowflat":"W java.util.ArrayList java.lang.StringBuilder 7 java.lang.String.length java.lang.Character.charCount java.lang.String.codePointAt 8 java.lang.StringBuilder.appendCodePoint 8 java.util.List.size java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder ","decomposemethodname":"tokenize ","nowapisequence":"java.lang.String.length java.lang.Character.charCount java.lang.String.codePointAt java.lang.StringBuilder.appendCodePoint java.util.List.size java.lang.StringBuilder.toString java.util.List.add "}
{"methodannotation":"returns whether the counter contains the given key ","groudtruth":"java.util.Map.containsKey ","nowflat":"@ ","decomposemethodname":"contains Key ","nowapisequence":""}
{"methodannotation":"save the properties to a file ","groudtruth":"java.util.Properties.store ","nowflat":"8 } java.io.FileOutputStream ","decomposemethodname":"save Properties ","nowapisequence":""}
{"methodannotation":"pushes the last character read back to the stream ","groudtruth":"java.io.PushbackReader.unread ","nowflat":"","decomposemethodname":"unread ","nowapisequence":""}
{"methodannotation":"shuffle old - > save and new - > old ","groudtruth":"java.io.File.renameTo java.io.File.renameTo java.io.File.renameTo java.io.File.exists java.io.File.renameTo ","nowflat":"8 java.io.File.renameTo 8 java.io.File.renameTo java.io.File.renameTo { java.io.IOException 8 java.io.File.exists ","decomposemethodname":"move ","nowapisequence":"java.io.File.renameTo java.io.File.renameTo java.io.File.renameTo java.io.File.exists "}
{"methodannotation":"check if a command is the clrQuota command ","groudtruth":"java.lang.String.equals ","nowflat":"@ ","decomposemethodname":"matches ","nowapisequence":""}
{"methodannotation":"outputs message to out if it 's not null ","groudtruth":"java.io.PrintStream.println ","nowflat":"8 ","decomposemethodname":"log ","nowapisequence":""}
{"methodannotation":"add a new category to the intent ","groudtruth":"java.lang.String.intern java.util.HashSet.add ","nowflat":"8 java.util.HashSet<java.lang.String> java.lang.String.intern ","decomposemethodname":"add Category ","nowapisequence":"java.util.HashSet<java.lang.String> java.lang.String.intern "}
{"methodannotation":"adds an eclipse option to be configurable via eclim ","groudtruth":"java.util.Map.clear ","nowflat":"","decomposemethodname":"add Option ","nowapisequence":""}
{"methodannotation":"deserializes an object from the given InputStream ","groudtruth":"java.io.ObjectInputStream.readObject java.lang.Throwable.toString ","nowflat":"8 { java.lang.NullPointerException java.io.ObjectInputStream } java.io.ObjectInputStream.readObject ","decomposemethodname":"deserialize ","nowapisequence":"java.io.ObjectInputStream.readObject "}
{"methodannotation":"writes message to to the output stream ","groudtruth":"java.lang.String.length java.lang.String.codePointAt java.lang.System.arraycopy java.io.OutputStream.write java.io.OutputStream.write ","nowflat":"8 { java.lang.Error W W S 7 java.lang.String.length N ","decomposemethodname":"serialize ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"concatenates two arrays ","groudtruth":"java.util.Arrays.copyOf java.lang.System.arraycopy ","nowflat":"W W W ","decomposemethodname":"concat ","nowapisequence":""}
{"methodannotation":"finishes writing data to the output stream , by writing the checksum bytes to the end ","groudtruth":"java.io.OutputStream.write java.io.OutputStream.flush ","nowflat":"8 @ ","decomposemethodname":"finish ","nowapisequence":""}
{"methodannotation":"shorthand for current time ","groudtruth":"java.lang.System.currentTimeMillis ","nowflat":"@ ","decomposemethodname":"now ","nowapisequence":""}
{"methodannotation":"report an error log to the Icy web site ","groudtruth":"java.util.Map.put java.util.Map.put ","nowflat":"java.util.HashMap<java.lang.String,java.lang.String> ","decomposemethodname":"report ","nowapisequence":"java.util.HashMap<java.lang.String,java.lang.String> "}
{"methodannotation":"adds a class path component ","groudtruth":"java.io.File.exists java.io.File.getCanonicalFile java.util.List.contains java.util.List.add java.io.PrintStream.println ","nowflat":"8 { java.lang.IllegalArgumentException 8 java.io.File.exists java.io.File.getCanonicalFile _ ","decomposemethodname":"add Component ","nowapisequence":"java.io.File.exists java.io.File.getCanonicalFile "}
{"methodannotation":"truncates the file to zero size and sets the record count to zero ","groudtruth":"java.nio.channels.FileChannel.position java.nio.channels.FileChannel.truncate ","nowflat":"java.nio.channels.FileChannel.position ","decomposemethodname":"truncate ","nowapisequence":"java.nio.channels.FileChannel.position "}
{"methodannotation":"gets the hash code for the key specified ","groudtruth":"java.lang.System.identityHashCode ","nowflat":"@ ","decomposemethodname":"hash ","nowapisequence":""}
{"methodannotation":"decode the parameter from the url to remove % 20 etc. ","groudtruth":"java.net.URLDecoder.decode ","nowflat":"@ ","decomposemethodname":"url Decode ","nowapisequence":""}
{"methodannotation":"runs URL encode function with arguments ","groudtruth":"java.nio.charset.Charset.displayName java.util.Arrays.asList ","nowflat":"@ ","decomposemethodname":"url Encode ","nowapisequence":""}
{"methodannotation":"fires 2 or 3 events , one generic hibernate event , one hibernate.eventName , and one hibernate.eventName.entityClass ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString 8 ","decomposemethodname":"handle Event ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString "}
{"methodannotation":"compares two enum values based on their ordinal position of the given enum values ","groudtruth":"java.lang.Enum.ordinal java.lang.Integer.compareTo ","nowflat":"8 8 @ @ ","decomposemethodname":"compare ","nowapisequence":""}
{"methodannotation":"closes the supplied OutputStream ignoring null and any exceptions ","groudtruth":"java.io.OutputStream.close ","nowflat":"} 8 ","decomposemethodname":"close Quietly ","nowapisequence":""}
{"methodannotation":"validates the given value against this Constraint ","groudtruth":"java.lang.String.length java.lang.String.trim java.lang.String.length java.lang.Object.toString java.lang.Object.toString java.util.Collection.add ","nowflat":"java.util.ArrayList 8 java.lang.String.length java.lang.String.trim 8 java.lang.String.length ","decomposemethodname":"match ","nowapisequence":"java.lang.String.length java.lang.String.trim java.lang.String.length "}
{"methodannotation":"method called when results are finalized and we can get the full aggregated result buffer to return to the caller ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W 8 @ W W 8 Z W java.lang.System.arraycopy ","decomposemethodname":"complete ","nowapisequence":"java.lang.System.arraycopy "}
{"methodannotation":"draws the needle ","groudtruth":"java.awt.geom.RectangularShape.getMinY java.awt.geom.RectangularShape.getMaxY java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getWidth java.awt.geom.Path2D.Float.moveTo java.awt.geom.Path2D.Float.lineTo java.awt.geom.Path2D.Float.lineTo java.awt.geom.Path2D.closePath java.awt.geom.Ellipse2D.Double java.awt.geom.Area.add java.awt.geom.Point2D.getX java.awt.geom.Point2D.getY java.awt.geom.Area.transform ","nowflat":"java.awt.geom.GeneralPath N java.awt.geom.RectangularShape.getMinY N java.awt.geom.RectangularShape.getMaxY N java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getWidth N java.awt.geom.RectangularShape.getWidth 8 java.awt.geom.Path2D.Float.moveTo java.awt.geom.Path2D.Float.lineTo ","decomposemethodname":"draw Needle ","nowapisequence":"java.awt.geom.RectangularShape.getMinY java.awt.geom.RectangularShape.getMaxY java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getWidth java.awt.geom.RectangularShape.getWidth java.awt.geom.Path2D.Float.moveTo java.awt.geom.Path2D.Float.lineTo "}
{"methodannotation":"adds a given annotation to the annotations attribute ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W 8 W ","decomposemethodname":"add Annotation ","nowapisequence":""}
{"methodannotation":"removes an annotation from the plot and , if requested , sends a PlotChangeEvent to all registered listeners ","groudtruth":"java.util.List.remove ","nowflat":"8 { java.lang.IllegalArgumentException ","decomposemethodname":"remove Annotation ","nowapisequence":""}
{"methodannotation":"unpacks the compressed character translation table ","groudtruth":"java.lang.String.charAt java.lang.String.charAt ","nowflat":"W W W ` ","decomposemethodname":"zz Unpack CMap ","nowapisequence":""}
{"methodannotation":"refills the input buffer ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy java.io.Reader.read java.io.Reader.read ","nowflat":"8 java.lang.System.arraycopy 8 W W java.lang.System.arraycopy java.io.Reader.read 8 @ ","decomposemethodname":"zz Refill ","nowapisequence":"java.lang.System.arraycopy java.lang.System.arraycopy java.io.Reader.read "}
{"methodannotation":"closes the input stream ","groudtruth":"java.io.Reader.close ","nowflat":"8 ","decomposemethodname":"yyclose ","nowapisequence":""}
{"methodannotation":"we ca n't avoid the exit here , so do n't call exit anywhere else ","groudtruth":"java.lang.System.exit ","nowflat":"","decomposemethodname":"window Closing ","nowapisequence":""}
{"methodannotation":"parse a date found in the Hadoop log ","groudtruth":"java.util.Calendar.getInstance java.lang.String.split java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.String.split java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set ","nowflat":"java.util.Calendar.getInstance W java.lang.String.split java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.String.split ","decomposemethodname":"parse Date ","nowapisequence":"java.util.Calendar.getInstance java.lang.String.split java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.Integer.parseInt java.util.Calendar.set java.lang.String.split "}
{"methodannotation":"xml list of all facts ","groudtruth":"java.util.logging.Logger.info java.util.logging.Logger.log ","nowflat":"java.util.LinkedList<uk.ac.horizon.ug.exserver.RawFactHolder> _ } Z java.util.logging.Logger.info 8 N ","decomposemethodname":"to Xml ","nowapisequence":"java.util.LinkedList<uk.ac.horizon.ug.exserver.RawFactHolder> java.util.logging.Logger.info "}
{"methodannotation":"generate the multi-part post body providing the parameters and boundary string ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"8 @ java.lang.StringBuilder Z 8 U ","decomposemethodname":"encode Post Body ","nowapisequence":""}
{"methodannotation":"upload a local file to this file on the distributed file system ","groudtruth":"java.io.FilterInputStream.read java.io.DataOutputStream.write java.lang.String.format java.lang.Throwable.getLocalizedMessage java.io.BufferedInputStream.close java.lang.Throwable.printStackTrace java.io.FilterOutputStream.close java.lang.Throwable.printStackTrace ","nowflat":"} java.io.FileInputStream java.io.BufferedInputStream W W ` java.io.FilterInputStream.read 8 @ java.io.DataOutputStream.write O java.lang.String.format java.lang.Throwable.getLocalizedMessage ","decomposemethodname":"upload ","nowapisequence":"java.io.FilterInputStream.read java.io.DataOutputStream.write java.lang.String.format java.lang.Throwable.getLocalizedMessage "}
{"methodannotation":"populate this Result object with data read from a DataInput object ","groudtruth":"java.io.DataInput.readLong java.io.DataInput.readInt ","nowflat":"java.io.DataInput.readLong ","decomposemethodname":"read Fields ","nowapisequence":"java.io.DataInput.readLong "}
{"methodannotation":"cleanup ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println } 8 } 8 ","decomposemethodname":"on Destroy ","nowapisequence":"java.io.PrintStream.println "}
{"methodannotation":"returns true if this list contains all of the elements of the specified collection ","groudtruth":"java.util.List.containsAll ","nowflat":"@ ","decomposemethodname":"contains All ","nowapisequence":""}
{"methodannotation":"performs intersection operation between the two region maps ","groudtruth":"java.util.HashMap.isEmpty java.util.HashMap.clear java.util.HashMap.keySet java.util.HashMap.get java.util.HashMap.get java.util.HashMap.remove java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals java.util.HashMap.put java.lang.String.equals java.lang.String.equals java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put ","nowflat":"8 java.util.HashMap.isEmpty java.util.HashMap.clear Z java.util.HashMap.keySet java.util.HashMap.get java.util.HashMap.get 8 java.util.HashMap.remove 8 java.lang.String.equals 8 java.lang.String.equals 8 java.lang.String.equals java.lang.String.equals ","decomposemethodname":"retain All ","nowapisequence":"java.util.HashMap.isEmpty java.util.HashMap.clear java.util.HashMap.keySet java.util.HashMap.get java.util.HashMap.get java.util.HashMap.remove java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals "}
{"methodannotation":"returns the index of the last occurrence of the specified string in this list , or -1 if this list does not contain the string ","groudtruth":"java.util.ArrayList.size java.util.ArrayList.get java.util.ArrayList.get java.lang.String.equalsIgnoreCase ","nowflat":"7 java.util.ArrayList.size 8 S java.util.ArrayList.get ","decomposemethodname":"last Index Of ","nowapisequence":"java.util.ArrayList.size java.util.ArrayList.get "}
{"methodannotation":"ensures capacity ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 W 8 ","decomposemethodname":"ensure Capacity ","nowapisequence":""}
{"methodannotation":"generates a connection id ","groudtruth":"java.util.concurrent.atomic.AtomicInteger.getAndIncrement java.lang.String.valueOf ","nowflat":"@ ","decomposemethodname":"generate Id ","nowapisequence":""}
{"methodannotation":"un-registers the specified Spring annotated POJO class used to configure and initialize the Spring ApplicationContext ","groudtruth":"java.util.List.remove ","nowflat":"@ ","decomposemethodname":"unregister ","nowapisequence":""}
{"methodannotation":"gets a new instance of this Class , using the empty constructor ","groudtruth":"java.lang.Class.newInstance java.lang.Throwable.printStackTrace ","nowflat":"8 { java.lang.IllegalStateException } @ ","decomposemethodname":"new Instance ","nowapisequence":""}
{"methodannotation":"checks whether the memory file has been closed ","groudtruth":"java.io.FileDescriptor.valid ","nowflat":"@ ","decomposemethodname":"is Closed ","nowapisequence":""}
{"methodannotation":"encode a URI path ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.String.indexOf java.lang.String.length java.lang.String.charAt java.lang.String.indexOf java.lang.StringBuffer.append java.lang.StringBuffer.append ","nowflat":"8 7 java.lang.String.length java.lang.String.charAt 8 java.lang.String.indexOf java.lang.StringBuffer M 8 @ _ ","decomposemethodname":"encode String ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.String.indexOf "}
{"methodannotation":"un-marshal an object instance from the data input stream ","groudtruth":"java.io.DataInput.readShort java.io.DataInput.readInt ","nowflat":"N 8 java.io.DataInput.readShort W ","decomposemethodname":"tight Unmarshal ","nowapisequence":"java.io.DataInput.readShort "}
{"methodannotation":"write a object instance to data output stream ","groudtruth":"java.io.DataOutput.writeByte ","nowflat":"N ","decomposemethodname":"tight Marshal2 ","nowapisequence":""}
{"methodannotation":"un-marshal an object instance from the data input stream ","groudtruth":"java.io.DataInput.readInt ","nowflat":"N ","decomposemethodname":"loose Unmarshal ","nowapisequence":""}
{"methodannotation":"write the booleans that this object uses to a BooleanStream ","groudtruth":"java.io.DataOutput.writeBoolean ","nowflat":"N ","decomposemethodname":"loose Marshal ","nowapisequence":""}
{"methodannotation":"parse an entry name from a buffer ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W 7 8 W ","decomposemethodname":"parse Name ","nowapisequence":""}
{"methodannotation":"print help and usage ","groudtruth":"java.lang.Class.getName java.text.MessageFormat.format java.text.MessageFormat.format ","nowflat":"java.lang.Class.getName ","decomposemethodname":"print Help ","nowapisequence":"java.lang.Class.getName "}
{"methodannotation":"custom serialisation ","groudtruth":"java.io.ObjectOutputStream.defaultWriteObject java.io.ObjectOutputStream.writeObject java.lang.Class.getName java.lang.Object.getClass java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.writeObject ","nowflat":"java.io.ObjectOutputStream.defaultWriteObject java.io.ObjectOutputStream.writeObject 8 java.lang.Class.getName ","decomposemethodname":"write Object ","nowapisequence":"java.io.ObjectOutputStream.defaultWriteObject java.io.ObjectOutputStream.writeObject java.lang.Class.getName "}
{"methodannotation":"make the current thread sleep ","groudtruth":"java.lang.Thread.sleep ","nowflat":"} ","decomposemethodname":"sleep ","nowapisequence":""}
{"methodannotation":"some JVM 's do not allow seek beyond end of file , so zeros are written first in that case ","groudtruth":"java.io.RandomAccessFile.length java.io.RandomAccessFile.length java.io.RandomAccessFile.length java.io.RandomAccessFile.seek java.io.RandomAccessFile.write java.io.RandomAccessFile.seek java.io.RandomAccessFile.write ","nowflat":"8 java.io.RandomAccessFile.length java.io.RandomAccessFile.length 8 W W N } java.io.RandomAccessFile.length ","decomposemethodname":"seek ","nowapisequence":"java.io.RandomAccessFile.length java.io.RandomAccessFile.length java.io.RandomAccessFile.length "}
{"methodannotation":"skips whitespace ","groudtruth":"java.lang.Character.isWhitespace ","nowflat":"` ","decomposemethodname":"skip Whitespace ","nowapisequence":""}
{"methodannotation":"search for the compiled pattern in the given text ","groudtruth":"java.lang.Character.toLowerCase java.lang.Character.toLowerCase ","nowflat":"W 8 @ 8 @ 7 8 7 8 S java.lang.Character.toLowerCase M ","decomposemethodname":"search ","nowapisequence":"java.lang.Character.toLowerCase "}
{"methodannotation":"repeat a String n times to form a new string ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 7 java.lang.StringBuilder.append ","decomposemethodname":"repeat ","nowapisequence":"java.lang.StringBuilder.append "}
{"methodannotation":"check if this class has a specific attribute , name of attribute is case insensitive ","groudtruth":"java.lang.String.toLowerCase java.lang.CharSequence.toString java.util.Map.containsKey ","nowflat":"@ java.lang.String.toLowerCase ","decomposemethodname":"has Attribute ","nowapisequence":"java.lang.String.toLowerCase "}
{"methodannotation":"resolves an external parsed entity ","groudtruth":"org.xml.sax.EntityResolver.resolveEntity org.xml.sax.InputSource.getPublicId org.xml.sax.InputSource.getSystemId org.xml.sax.InputSource.getByteStream org.xml.sax.InputSource.getCharacterStream org.xml.sax.InputSource.getEncoding org.xml.sax.SAXException.getException ","nowflat":"8 @ 8 } org.xml.sax.EntityResolver.resolveEntity 8 org.xml.sax.InputSource.getPublicId org.xml.sax.InputSource.getSystemId org.xml.sax.InputSource.getByteStream org.xml.sax.InputSource.getCharacterStream ","decomposemethodname":"resolve Entity ","nowapisequence":"org.xml.sax.EntityResolver.resolveEntity org.xml.sax.InputSource.getPublicId org.xml.sax.InputSource.getSystemId org.xml.sax.InputSource.getByteStream org.xml.sax.InputSource.getCharacterStream "}
{"methodannotation":"checks if the GTopo30DataSource supports a given file ","groudtruth":"java.net.URI.toURL java.io.File.toURI java.util.logging.Logger.isLoggable java.lang.Throwable.getLocalizedMessage java.util.logging.Logger.log java.net.URI.toURL java.io.File.toURI java.util.logging.Logger.isLoggable java.lang.Throwable.getLocalizedMessage java.util.logging.Logger.log java.util.logging.Logger.isLoggable java.lang.Throwable.getLocalizedMessage java.util.logging.Logger.log ","nowflat":"8 } java.net.URI.toURL java.io.File.toURI O 8 java.util.logging.Logger.isLoggable java.lang.Throwable.getLocalizedMessage java.util.logging.Logger.log @ 8 N 8 } java.net.URI.toURL java.io.File.toURI java.io.File O } java.net.URL O ","decomposemethodname":"accepts ","nowapisequence":"java.net.URI.toURL java.io.File.toURI java.util.logging.Logger.isLoggable java.lang.Throwable.getLocalizedMessage java.util.logging.Logger.log java.net.URI.toURL java.io.File.toURI "}
{"methodannotation":"convert a String to an int , returning a default value if the conversion fails ","groudtruth":"java.lang.Integer.parseInt ","nowflat":"8 @ } @ ","decomposemethodname":"to Int ","nowapisequence":""}
{"methodannotation":"add option - swap to the ImageMagick commandline ","groudtruth":"java.lang.StringBuffer.length java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.StringBuffer.length ","decomposemethodname":"swap ","nowapisequence":"java.lang.StringBuffer.length "}
{"methodannotation":"called when a key is typed ","groudtruth":"java.awt.event.KeyEvent.getKeyChar javax.swing.text.JTextComponent.getCaretPosition java.awt.event.InputEvent.consume javax.swing.text.JTextComponent.getCaretPosition javax.swing.text.JTextComponent.setCaretPosition ","nowflat":"java.awt.event.KeyEvent.getKeyChar 8 8 javax.swing.text.JTextComponent.getCaretPosition ","decomposemethodname":"key Typed ","nowapisequence":"java.awt.event.KeyEvent.getKeyChar javax.swing.text.JTextComponent.getCaretPosition "}
{"methodannotation":"keyboard button released ","groudtruth":"java.awt.event.KeyEvent.getKeyCode ","nowflat":"8 ","decomposemethodname":"key Released ","nowapisequence":""}
{"methodannotation":"returns a string resulting from replacing all occurrences of what in this string with with ","groudtruth":"java.lang.String.indexOf java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 java.lang.String.indexOf java.lang.StringBuffer java.lang.String.indexOf java.lang.String.length ` 8 java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"replace String ","nowapisequence":"java.lang.String.indexOf java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"activate the action referenced by this interactor ","groudtruth":"java.awt.event.ActionListener.actionPerformed ","nowflat":"java.awt.event.ActionEvent ","decomposemethodname":"mouse Pressed ","nowapisequence":""}
{"methodannotation":"handle the mouse click event to allow for navigation of the graph ","groudtruth":"javax.swing.JComponent.grabFocus java.awt.event.MouseEvent.getX java.awt.event.MouseEvent.getY ","nowflat":"javax.swing.JComponent.grabFocus ","decomposemethodname":"mouse Clicked ","nowapisequence":"javax.swing.JComponent.grabFocus "}
{"methodannotation":"when the mouse passes over the button ","groudtruth":"java.awt.Component.isEnabled javax.swing.JComponent.setBackground ","nowflat":"8 ","decomposemethodname":"mouse Entered ","nowapisequence":""}
{"methodannotation":"draw the Icon ","groudtruth":"java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Component.getBackground java.awt.Graphics.setColor java.awt.Graphics.draw3DRect ","nowflat":"java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Component.getBackground ","decomposemethodname":"paint Icon ","nowapisequence":"java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Component.getBackground "}
{"methodannotation":"disconnect the socket and close the connection ","groudtruth":"java.io.PrintStream.println java.net.Socket.shutdownInput java.net.Socket.shutdownOutput java.net.Socket.close ","nowflat":"8 java.io.PrintStream.println java.net.Socket.shutdownInput ","decomposemethodname":"disconnect ","nowapisequence":"java.io.PrintStream.println java.net.Socket.shutdownInput "}
{"methodannotation":"execute the Flickr operation and database operations on a background thread ","groudtruth":"java.util.ResourceBundle.getString java.util.ResourceBundle.getString javax.swing.JOptionPane.showMessageDialog ","nowflat":"} O java.util.ResourceBundle.getString ","decomposemethodname":"do In Background ","nowapisequence":"java.util.ResourceBundle.getString "}
{"methodannotation":"read the header of the transaction file ","groudtruth":"java.io.InputStream.close ","nowflat":"} java.io.FileInputStream java.io.BufferedInputStream @ ","decomposemethodname":"read Header ","nowapisequence":""}
{"methodannotation":"this flatten method does so using the following rules : If an Option exists for the first character ofthe arguments entry AND an Option does not exist for the whole argument then add the first character as an option to the processed tokens list e.g. '' - D '' and add the rest of the entry to the also ","groudtruth":"java.lang.String.equals java.util.List.add java.lang.String.equals java.util.List.add java.lang.String.startsWith java.util.List.add java.lang.String.indexOf java.lang.String.indexOf java.lang.String.substring java.lang.String.indexOf java.lang.String.substring java.util.List.add java.lang.String.substring java.util.List.add java.lang.String.substring java.lang.String.substring java.util.List.add java.lang.String.substring java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.List.toArray ","nowflat":"W W java.util.ArrayList<java.lang.String> 7 8 java.lang.String.equals java.util.List.add 8 java.lang.String.equals java.util.List.add 8 java.lang.String.startsWith 8 java.util.List.add 8 java.lang.String.indexOf java.lang.String.indexOf java.lang.String.substring java.lang.String.indexOf java.lang.String.substring java.util.List.add ","decomposemethodname":"flatten ","nowapisequence":"java.util.ArrayList<java.lang.String> java.lang.String.equals java.util.List.add java.lang.String.equals java.util.List.add java.lang.String.startsWith java.util.List.add java.lang.String.indexOf java.lang.String.indexOf java.lang.String.substring java.lang.String.indexOf java.lang.String.substring java.util.List.add "}
{"methodannotation":"tells me if the coverage plugin to access MrSID is available or not ","groudtruth":"java.lang.Class.forName java.util.logging.Logger.isLoggable java.util.logging.Logger.fine java.util.logging.Logger.fine java.util.logging.Logger.isLoggable java.util.logging.Logger.fine ","nowflat":"} java.lang.Class.forName 8 java.util.logging.Logger.isLoggable 8 java.util.logging.Logger.fine java.util.logging.Logger.fine ","decomposemethodname":"is Available ","nowapisequence":"java.lang.Class.forName java.util.logging.Logger.isLoggable java.util.logging.Logger.fine java.util.logging.Logger.fine "}
{"methodannotation":"the underlying instance state changes ","groudtruth":"java.lang.Object.notifyAll ","nowflat":"","decomposemethodname":"state Changed ","nowapisequence":""}
{"methodannotation":"this will print the usage for this document ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"usage ","nowapisequence":""}
{"methodannotation":"submits a Runnable task for execution and returns a Future representing that task ","groudtruth":"java.util.concurrent.ExecutorService.submit ","nowflat":"@ ","decomposemethodname":"submit ","nowapisequence":""}
{"methodannotation":"removes the item from the collection corresponding to the given key ","groudtruth":"java.util.LinkedHashMap.get java.util.Collection.remove java.util.Collection.isEmpty java.util.HashMap.remove ","nowflat":"java.util.LinkedHashMap.get 8 @ java.util.Collection.remove ","decomposemethodname":"remove Item ","nowapisequence":"java.util.LinkedHashMap.get java.util.Collection.remove "}
{"methodannotation":"closes the specified stream ","groudtruth":"java.io.Closeable.close ","nowflat":"8 } ","decomposemethodname":"close Stream ","nowapisequence":""}
{"methodannotation":"convert a long to a 16-digit hex string ","groudtruth":"java.lang.String.toUpperCase java.lang.Long.toHexString java.lang.String.length java.lang.String.substring ","nowflat":"java.lang.String.toUpperCase java.lang.Long.toHexString 8 java.lang.String.length ","decomposemethodname":"to Hex String ","nowapisequence":"java.lang.String.toUpperCase java.lang.Long.toHexString java.lang.String.length "}
{"methodannotation":"prints this exception 's stack trace to a print writer ","groudtruth":"java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace ","nowflat":"java.lang.Throwable.printStackTrace ","decomposemethodname":"print Stack Trace ","nowapisequence":"java.lang.Throwable.printStackTrace "}
{"methodannotation":"trims the capacity of this ArrayList instance to be the list 's current size ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 W ","decomposemethodname":"trim To Size ","nowapisequence":""}
{"methodannotation":"inserts the given child object of the given type at the given index ","groudtruth":"java.util.Vector.insertElementAt java.lang.StringBuffer.insert ","nowflat":"8 { java.lang.NullPointerException 8 java.util.Vector java.lang.StringBuffer 8 8 { ","decomposemethodname":"add Child ","nowapisequence":""}
{"methodannotation":"enumerates the attribute names ","groudtruth":"java.util.Hashtable.keys ","nowflat":"@ ","decomposemethodname":"enumerate Attribute Names ","nowapisequence":""}
{"methodannotation":"returns an enumeration of all child elements ","groudtruth":"java.util.Vector.elements ","nowflat":"@ ","decomposemethodname":"enumerate Children ","nowapisequence":""}
{"methodannotation":"method that removes a child from the children set ","groudtruth":"java.util.Set.remove ","nowflat":"8 @ ","decomposemethodname":"remove Child ","nowapisequence":""}
{"methodannotation":"writes a string encoding reserved characters ","groudtruth":"java.lang.String.length java.lang.String.charAt java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.lang.Integer.toString java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print ","nowflat":"7 java.lang.String.length java.lang.String.charAt = java.io.PrintWriter.print M java.io.PrintWriter.print M java.io.PrintWriter.print M java.io.PrintWriter.print M java.io.PrintWriter.print ","decomposemethodname":"write Encoded ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print java.io.PrintWriter.print "}
{"methodannotation":"the elements in the counter ","groudtruth":"java.util.Map.keySet ","nowflat":"@ ","decomposemethodname":"key Set ","nowapisequence":""}
{"methodannotation":"installs an entity ","groudtruth":"java.util.Map.put ","nowflat":"@ ","decomposemethodname":"install ","nowapisequence":""}
{"methodannotation":"calculate the checksum of a given InputStream ","groudtruth":"java.security.MessageDigest.getInstance java.io.InputStream.read java.security.MessageDigest.update java.security.MessageDigest.digest java.io.InputStream.close ","nowflat":"W } java.security.MessageDigest.getInstance W W ` ","decomposemethodname":"digest ","nowapisequence":"java.security.MessageDigest.getInstance "}
{"methodannotation":"releases any resources remaining open ","groudtruth":"java.io.Reader.close java.util.logging.Logger.log ","nowflat":"8 } java.io.Reader.close ","decomposemethodname":"cleanup ","nowapisequence":"java.io.Reader.close "}
{"methodannotation":"this is typically done by the application server ","groudtruth":"java.net.InetAddress.getByName java.net.InetAddress.getByName java.util.List.add java.util.List.add java.util.List.add java.lang.Class.getName java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.List.add java.util.List.add ","nowflat":"W java.net.InetAddress.getByName java.net.InetAddress.getByName java.util.ArrayList<java.lang.String> java.util.List.add java.util.List.add java.util.ArrayList<java.lang.String> java.util.List.add java.lang.Class.getName java.util.ArrayList<java.lang.String> ","decomposemethodname":"initialise ","nowapisequence":"java.net.InetAddress.getByName java.net.InetAddress.getByName java.util.ArrayList<java.lang.String> java.util.List.add java.util.List.add java.util.ArrayList<java.lang.String> java.util.List.add java.lang.Class.getName java.util.ArrayList<java.lang.String> "}
{"methodannotation":"lists resources to the specified stream ","groudtruth":"java.lang.System.getProperty java.lang.String.indexOf java.lang.String.length java.lang.String.indexOf java.lang.String.length java.lang.String.valueOf java.io.Writer.write java.io.Writer.write java.io.Writer.write java.lang.Math.min java.lang.String.substring java.io.Writer.write java.io.Writer.write ","nowflat":"W java.lang.System.getProperty 7 8 U java.lang.String.indexOf 8 java.lang.String.length java.lang.String.indexOf 8 java.lang.String.length ","decomposemethodname":"list ","nowapisequence":"java.lang.System.getProperty java.lang.String.indexOf java.lang.String.length java.lang.String.indexOf java.lang.String.length "}
{"methodannotation":"returns wether the handled application is already registered or not ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} 8 O ","decomposemethodname":"is Registered ","nowapisequence":""}
{"methodannotation":"skip bytes from an input byte stream ","groudtruth":"java.io.InputStream.read ","nowflat":"8 { java.lang.IllegalArgumentException 8 W ` ","decomposemethodname":"skip ","nowapisequence":""}
{"methodannotation":"mark this merge as aborted ","groudtruth":"java.lang.Object.notifyAll ","nowflat":"","decomposemethodname":"abort ","nowapisequence":""}
{"methodannotation":"method called remotely by lookup to handle the generated event ","groudtruth":"java.util.List.add ","nowflat":"N _ } N ","decomposemethodname":"notify ","nowapisequence":""}
{"methodannotation":"merge 2 xml document streams together into a final resulting stream ","groudtruth":"javax.xml.parsers.DocumentBuilder.parse javax.xml.parsers.DocumentBuilder.parse java.util.Collections.addAll javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.transform java.io.ByteArrayOutputStream.toByteArray ","nowflat":"} javax.xml.parsers.DocumentBuilder.parse javax.xml.parsers.DocumentBuilder.parse Z 8 java.lang.Object W 8 java.util.Collections.addAll javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty java.io.ByteArrayOutputStream } javax.xml.transform.dom.DOMSource ","decomposemethodname":"merge ","nowapisequence":"javax.xml.parsers.DocumentBuilder.parse javax.xml.parsers.DocumentBuilder.parse java.util.Collections.addAll javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty "}
{"methodannotation":"tries to lookup a given function name JDBC to an internal representation ","groudtruth":"java.util.Map.get ","nowflat":"@ ","decomposemethodname":"lookup ","nowapisequence":""}
{"methodannotation":"is this tunnel actively running ? While it 's unclear if all the possible states of the tunnel is a committed part of the API , the tunnel appears to transition from '' booting '' - > '' running '' - > '' halting '' ","groudtruth":"java.lang.String.equals ","nowflat":"@ ","decomposemethodname":"is Running ","nowapisequence":""}
{"methodannotation":"adds a new configurable parameter to this termination condition ","groudtruth":"java.util.Map.put ","nowflat":"","decomposemethodname":"add Parameter ","nowapisequence":""}
{"methodannotation":"kills the process ","groudtruth":"java.util.concurrent.atomic.AtomicBoolean.compareAndSet java.lang.Process.destroy java.lang.Thread.join ","nowflat":"8 java.util.concurrent.atomic.AtomicBoolean.compareAndSet } java.lang.Process.destroy ","decomposemethodname":"kill ","nowapisequence":"java.util.concurrent.atomic.AtomicBoolean.compareAndSet java.lang.Process.destroy "}
{"methodannotation":"this function is used for the exhibition of the details of the attributes contained in the Pricings Vector ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","decomposemethodname":"show ","nowapisequence":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println "}
{"methodannotation":"reload the FAT table from the file ","groudtruth":"java.util.Collection.iterator java.util.HashMap.values java.util.Iterator.hasNext java.util.Iterator.next ","nowflat":"java.util.Collection.iterator java.util.HashMap.values ` ","decomposemethodname":"refresh ","nowapisequence":"java.util.Collection.iterator java.util.HashMap.values "}
{"methodannotation":"send a message to the connected client ","groudtruth":"java.io.PrintWriter.print java.io.PrintWriter.flush java.io.PrintStream.println java.lang.Throwable.printStackTrace ","nowflat":"} java.io.PrintWriter.print java.io.PrintWriter.flush ","decomposemethodname":"send ","nowapisequence":"java.io.PrintWriter.print java.io.PrintWriter.flush "}
{"methodannotation":"receives a string from the socket and displays it in the comm text area ","groudtruth":"java.util.Scanner.nextLine java.lang.StringBuilder.append java.lang.StringBuilder.append ","nowflat":"java.util.Scanner.nextLine ","decomposemethodname":"receive ","nowapisequence":"java.util.Scanner.nextLine "}
{"methodannotation":"utility method supporting both possible signature formats : Base64 and Hex ","groudtruth":"java.lang.String.toCharArray java.security.Signature.verify java.lang.String.toCharArray java.security.Signature.verify ","nowflat":"} 8 java.lang.String.toCharArray java.security.Signature.verify @ O } ","decomposemethodname":"verify Signature ","nowapisequence":"java.lang.String.toCharArray java.security.Signature.verify "}
{"methodannotation":"read a int from the buffer ; ","groudtruth":"java.nio.ByteBuffer.getInt ","nowflat":"@ ","decomposemethodname":"read Int ","nowapisequence":""}
{"methodannotation":"long value representation of the number ","groudtruth":"java.lang.Number.longValue ","nowflat":"@ ","decomposemethodname":"long Value ","nowapisequence":""}
{"methodannotation":"utility method that shows warning to the user ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"warning ","nowapisequence":""}
{"methodannotation":"computes the distance between two points ","groudtruth":"java.lang.Math.abs ","nowflat":"W W @ ","decomposemethodname":"distance ","nowapisequence":""}
{"methodannotation":"applies the combining rule to the set of policies based on the evaluation context ","groudtruth":"java.util.List.iterator java.util.Iterator.hasNext java.util.List.add ","nowflat":"java.util.List.iterator ` java.util.Iterator.hasNext 8 @ java.lang.Object 8 8 java.util.ArrayList<java.lang.String> ","decomposemethodname":"combine ","nowapisequence":"java.util.List.iterator java.util.Iterator.hasNext java.util.ArrayList<java.lang.String> "}
{"methodannotation":"true if the predicate matches ","groudtruth":"java.util.regex.Pattern.matcher ","nowflat":"W 8 7 8 ","decomposemethodname":"is Match ","nowapisequence":""}
{"methodannotation":"@serialData Writes the real part , followed by the imaginary part.Both are written as doubles ","groudtruth":"java.io.DataOutput.writeDouble java.io.DataOutput.writeDouble ","nowflat":"java.io.DataOutput.writeDouble ","decomposemethodname":"write External ","nowapisequence":"java.io.DataOutput.writeDouble "}
{"methodannotation":"read the EPR to the specified InputStream ","groudtruth":"java.lang.Throwable.initCause javax.xml.stream.XMLStreamReader.close java.lang.Throwable.initCause ","nowflat":"8 { java.lang.ClassNotFoundException N W W ` 8 8 java.io.IOException { 8 java.io.IOException { java.io.ByteArrayInputStream 8 java.lang.String } 8 ","decomposemethodname":"read External ","nowapisequence":""}
{"methodannotation":"opens a File and returns a PrintWriter instance based on new/update option specified in argument ","groudtruth":"java.io.PrintStream.println java.lang.System.exit ","nowflat":"} = java.io.FileOutputStream M java.io.FileOutputStream M java.io.OutputStreamWriter ","decomposemethodname":"open File ","nowapisequence":""}
{"methodannotation":"returns a char array ","groudtruth":"java.util.Stack.empty java.util.Stack.pop ","nowflat":"W 8 java.util.Stack.empty @ W ","decomposemethodname":"request ","nowapisequence":"java.util.Stack.empty "}
{"methodannotation":"parse a server response into a JSON Object ","groudtruth":"java.lang.String.equals java.lang.String.equals java.lang.Integer.parseInt java.lang.Integer.parseInt ","nowflat":"8 java.lang.String.equals { 8 java.lang.String.equals 8 { java.lang.Object 8 { java.lang.Integer.parseInt java.lang.Object 8 ","decomposemethodname":"parse Json ","nowapisequence":"java.lang.String.equals java.lang.String.equals java.lang.Integer.parseInt "}
{"methodannotation":"grows the data array to the minimum length of the given parameter ","groudtruth":"java.util.Arrays.copyOf ","nowflat":"8 ","decomposemethodname":"grow ","nowapisequence":""}
{"methodannotation":"change the port of this link to alone with the mapper node y coordination ","groudtruth":"java.lang.String.equals java.beans.PropertyChangeEvent.getPropertyName javax.swing.SwingUtilities.invokeLater ","nowflat":"8 java.lang.String.equals java.beans.PropertyChangeEvent.getPropertyName ","decomposemethodname":"property Change ","nowapisequence":"java.lang.String.equals java.beans.PropertyChangeEvent.getPropertyName "}
{"methodannotation":"draw this generation ","groudtruth":"java.awt.Component.getSize java.awt.Component.createImage java.awt.Image.getGraphics java.awt.Component.getBackground java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics.drawImage java.awt.Graphics.drawImage ","nowflat":"8 java.awt.Component.getSize java.awt.Component.createImage java.awt.Image.getGraphics java.awt.Component.getBackground java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor 7 ","decomposemethodname":"paint ","nowapisequence":"java.awt.Component.getSize java.awt.Component.createImage java.awt.Image.getGraphics java.awt.Component.getBackground java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor java.awt.Graphics.fillRect java.awt.Graphics.setColor "}
{"methodannotation":"add a VetoableChangeListener to the listener list ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 { java.lang.NullPointerException W ","decomposemethodname":"add Property Change Listener ","nowapisequence":""}
{"methodannotation":"remove a property change listener from this component ","groudtruth":"java.beans.PropertyChangeSupport.removePropertyChangeListener ","nowflat":"","decomposemethodname":"remove Property Change Listener ","nowapisequence":""}
{"methodannotation":"pauses the game world clock ","groudtruth":"java.util.concurrent.Future.cancel ","nowflat":"8 ","decomposemethodname":"pause ","nowapisequence":""}
{"methodannotation":"calculate the result from the function ","groudtruth":"java.lang.Math.pow java.lang.Math.exp ","nowflat":"W W 7 ","decomposemethodname":"calculate ","nowapisequence":""}
{"methodannotation":"return true if null or empty ","groudtruth":"java.lang.String.length java.lang.String.trim ","nowflat":"@ ","decomposemethodname":"is Blank ","nowapisequence":""}
{"methodannotation":"returns a random long ","groudtruth":"java.util.Random.nextLong ","nowflat":"@ ","decomposemethodname":"next Long ","nowapisequence":""}
{"methodannotation":"wrap a line by continually removing characters from a string and adding to a list of lines , until the line is shorter than width ","groudtruth":"java.lang.StringBuilder.length java.lang.StringBuilder.substring java.util.List.add java.lang.StringBuilder.delete ","nowflat":"` java.lang.StringBuilder.length java.lang.StringBuilder.substring ","decomposemethodname":"wrap ","nowapisequence":"java.lang.StringBuilder.length java.lang.StringBuilder.substring "}
{"methodannotation":"shuts down the auto ingest ingest monitor ","groudtruth":"java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow java.util.concurrent.ThreadPoolExecutor.awaitTermination ","nowflat":"} java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow ` ","decomposemethodname":"shut Down ","nowapisequence":"java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow "}
{"methodannotation":"pass the key , and reversed value to reduce ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"8 { java.io.IOException W W 8 { java.io.IOException java.lang.String ","decomposemethodname":"map ","nowapisequence":""}
{"methodannotation":"determine if the source string still contains characters that next can consume ","groudtruth":"java.lang.String.length ","nowflat":"@ ","decomposemethodname":"more ","nowapisequence":""}
{"methodannotation":"sends nested multipart response ","groudtruth":"java.lang.Integer.toString java.lang.System.currentTimeMillis ","nowflat":"java.util.Properties java.lang.Object Z W } O { Z W W N } java.lang.Integer.toString O { ","decomposemethodname":"send Response ","nowapisequence":"java.lang.Integer.toString "}
{"methodannotation":"outputs a trace to the currently opened traces file ","groudtruth":"java.lang.Integer.toHexString ","nowflat":"8 @ } ","decomposemethodname":"trace ","nowapisequence":""}
{"methodannotation":"returns a string that contains all given strings concatenated and separated by the specified separator ","groudtruth":"java.lang.String.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"W java.lang.StringBuffer 8 java.lang.String.toString java.lang.StringBuffer.append 7 ","decomposemethodname":"as String ","nowapisequence":"java.lang.String.toString java.lang.StringBuffer.append "}
{"methodannotation":"adds a command to the command list ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Command ","nowapisequence":""}
{"methodannotation":"asynchronously schedules the compression of this file ","groudtruth":"java.util.concurrent.ExecutorService.submit ","nowflat":"java.lang.Object ","decomposemethodname":"compress ","nowapisequence":""}
{"methodannotation":"register the given directory with the WatchService ","groudtruth":"java.nio.file.Path.register java.util.Map.get java.io.PrintStream.format java.nio.file.Path.equals java.io.PrintStream.format java.util.Map.put ","nowflat":"java.nio.file.Path.register 8 java.util.Map.get 8 java.io.PrintStream.format ","decomposemethodname":"register ","nowapisequence":"java.nio.file.Path.register java.util.Map.get java.io.PrintStream.format "}
{"methodannotation":"called by resize , this handles creating the actual GLCanvas the first time around , or simply resizing it on subsequent calls ","groudtruth":"java.io.PrintStream.println ","nowflat":"8 @ 8 java.lang.Object 8 8 ","decomposemethodname":"allocate ","nowapisequence":""}
{"methodannotation":"calls System.arraycopy , included here so that we can avoid people needing to learn about the System object before they can just copy an array ","groudtruth":"java.lang.System.arraycopy ","nowflat":"","decomposemethodname":"array Copy ","nowapisequence":""}
{"methodannotation":"generates a random int ","groudtruth":"java.util.Random.nextInt ","nowflat":"_ ","decomposemethodname":"next Int ","nowapisequence":""}
{"methodannotation":"add an object and return its index ","groudtruth":"java.util.HashMap.get java.util.ArrayList.add java.util.ArrayList.add java.util.ArrayList.size java.util.HashMap.put ","nowflat":"java.util.HashMap.get 8 @ java.util.ArrayList.add ","decomposemethodname":"add Object ","nowapisequence":"java.util.HashMap.get java.util.ArrayList.add "}
{"methodannotation":"indent of some spaces ","groudtruth":"java.io.PrintStream.print ","nowflat":"7 ","decomposemethodname":"indent ","nowapisequence":""}
{"methodannotation":"replaces all instances of '' tofind '' with '' toReplace '' in the given input String , and returns the String after replacement has occured ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.StringBuffer.indexOf java.lang.StringBuffer.replace java.lang.StringBuffer.indexOf java.lang.StringBuffer.toString ","nowflat":"8 { java.lang.IllegalArgumentException 8 @ java.lang.String.length java.lang.String.length java.lang.StringBuffer java.lang.StringBuffer.indexOf ","decomposemethodname":"replace All ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.StringBuffer.indexOf "}
{"methodannotation":"checks if a string is null or empty ","groudtruth":"java.lang.String.equals ","nowflat":"@ ","decomposemethodname":"is Null Or Empty ","nowapisequence":""}
{"methodannotation":"utility method to left or right pad strings with arbitrary characters ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 7 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"pad ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"writes a single byte to this stream ","groudtruth":"java.io.OutputStream.write ","nowflat":"8 ","decomposemethodname":"write Byte ","nowapisequence":""}
{"methodannotation":"read a long from the log ","groudtruth":"java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get ","nowflat":"java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get ","decomposemethodname":"read Long ","nowapisequence":"java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get java.nio.ByteBuffer.get "}
{"methodannotation":"add a user to the specified channel in our memory ","groudtruth":"java.lang.String.toLowerCase java.util.Hashtable.get java.util.Hashtable.put java.util.Hashtable.put ","nowflat":"java.lang.String.toLowerCase _ N java.util.Hashtable.get ","decomposemethodname":"add User ","nowapisequence":"java.lang.String.toLowerCase java.util.Hashtable.get "}
{"methodannotation":"creates a new node given by the relative path ","groudtruth":"java.lang.Class.getName java.lang.Object.getClass ","nowflat":"{ java.lang.Class.getName ","decomposemethodname":"add Node ","nowapisequence":"java.lang.Class.getName "}
{"methodannotation":"returns true for equality ","groudtruth":"java.lang.String.equals java.lang.Object.toString ","nowflat":"8 @ 8 @ 8 @ 8 N 8 @ W ","decomposemethodname":"eq ","nowapisequence":""}
{"methodannotation":"fire a property change event in response to a cell selection ","groudtruth":"java.beans.PropertyChangeEvent.getOldValue java.beans.PropertyChangeEvent.getNewValue java.awt.Component.firePropertyChange ","nowflat":"java.beans.PropertyChangeEvent.getOldValue ","decomposemethodname":"fire Property Change ","nowapisequence":"java.beans.PropertyChangeEvent.getOldValue "}
{"methodannotation":"convert a task.Record to a Map ","groudtruth":"java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put ","nowflat":"java.util.HashMap<java.lang.String,java.lang.Object> java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put ","decomposemethodname":"to Map ","nowapisequence":"java.util.HashMap<java.lang.String,java.lang.Object> java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put "}
{"methodannotation":"formats the given date according to the specified pattern ","groudtruth":"java.text.DateFormat.setTimeZone java.text.DateFormat.format ","nowflat":"8 { java.lang.IllegalArgumentException 8 { java.lang.IllegalArgumentException ","decomposemethodname":"format Date ","nowapisequence":""}
{"methodannotation":"loads warp data from file into hashmap ","groudtruth":"java.io.File.exists java.util.logging.Logger.info java.io.File.createNewFile java.util.logging.Logger.warning java.lang.Throwable.printStackTrace java.io.BufferedReader.readLine java.lang.String.split java.lang.String.split java.lang.Double.parseDouble java.util.logging.Logger.warning java.lang.Float.parseFloat java.lang.Float.parseFloat java.util.logging.Logger.warning java.lang.String.toLowerCase java.lang.String.toLowerCase java.util.logging.Logger.warning java.io.BufferedReader.readLine java.io.BufferedReader.close java.util.logging.Logger.info java.util.logging.Logger.warning java.lang.Throwable.printStackTrace ","nowflat":"java.io.File 8 java.io.File.exists java.util.logging.Logger.info } java.io.File.createNewFile O java.util.logging.Logger.warning java.lang.Throwable.printStackTrace } java.io.FileReader java.io.BufferedReader java.io.BufferedReader.readLine ` W java.lang.String.split W java.lang.String.split Z W W 7 } java.lang.Double.parseDouble O java.util.logging.Logger.warning W W ","decomposemethodname":"load Data ","nowapisequence":"java.io.File.exists java.util.logging.Logger.info java.io.File.createNewFile java.util.logging.Logger.warning java.lang.Throwable.printStackTrace java.io.BufferedReader.readLine java.lang.String.split java.lang.String.split java.lang.Double.parseDouble java.util.logging.Logger.warning "}
{"methodannotation":"saves the storageContainer object in the database ","groudtruth":"java.lang.Integer.parseInt java.util.Map.get java.util.Map.get java.lang.String.equals java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get java.lang.Class.getName java.util.Map.put java.util.Map.put java.util.List.add java.util.Map.put ","nowflat":"N N java.util.ArrayList java.lang.Integer.parseInt } 7 N java.util.Map.get N java.util.Map.get 8 java.lang.String.equals 8 N java.util.Map.get N java.util.Map.get java.lang.Long N java.util.Map.get N java.util.Map.get N java.util.Map.get java.lang.Class.getName java.lang.Long 8 ","decomposemethodname":"insert ","nowapisequence":"java.lang.Integer.parseInt java.util.Map.get java.util.Map.get java.lang.String.equals java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get java.lang.Class.getName "}
{"methodannotation":"print an Emacs compliant line on the error stream ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.io.PrintWriter.println ","nowflat":"8 java.lang.String.length java.lang.String.length java.lang.StringBuffer java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.StringBuffer.append ","decomposemethodname":"add Error ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"adds a group filter ","groudtruth":"java.util.ArrayList.add ","nowflat":"","decomposemethodname":"add Group ","nowapisequence":""}
{"methodannotation":"converts the string to a value of the type ","groudtruth":"java.lang.String.equals java.lang.Class.getName ","nowflat":"8 @ 8 java.lang.String.equals 8 @ ","decomposemethodname":"value Of ","nowapisequence":"java.lang.String.equals "}
{"methodannotation":"clears the cache for all messages ","groudtruth":"java.lang.Class.getName java.lang.Class.getName ","nowflat":"java.lang.Class.getName ","decomposemethodname":"clear Cache ","nowapisequence":"java.lang.Class.getName "}
{"methodannotation":"clips the layer with the given shape ","groudtruth":"java.awt.Graphics2D.clip ","nowflat":"","decomposemethodname":"clip ","nowapisequence":""}
{"methodannotation":"analyzes this literal , determining its value ","groudtruth":"java.lang.String.contains java.lang.String.replaceAll java.lang.Double.valueOf ","nowflat":"} 8 java.lang.String.contains ","decomposemethodname":"analyze ","nowapisequence":"java.lang.String.contains "}
{"methodannotation":"logs a generic workspace inconsistency error ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"8 java.lang.Object java.lang.StringBuilder java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append ","decomposemethodname":"log Error ","nowapisequence":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append "}
{"methodannotation":"returns the reverse of the given string ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 7 java.lang.String.length java.lang.String.charAt ","decomposemethodname":"reverse ","nowapisequence":"java.lang.String.length java.lang.String.charAt "}
{"methodannotation":"returns the scalar norm ","groudtruth":"java.lang.Math.sqrt ","nowflat":"8 ","decomposemethodname":"norm ","nowapisequence":""}
{"methodannotation":"mark URLs ready for fetching ","groudtruth":"java.util.Random.nextInt ","nowflat":"8 java.lang.Object ","decomposemethodname":"generate ","nowapisequence":""}
{"methodannotation":"return an ArrayList ","groudtruth":"java.util.List.add ","nowflat":"W java.util.ArrayList<T> 7 ","decomposemethodname":"as List ","nowapisequence":"java.util.ArrayList<T> "}
{"methodannotation":"applies any scaling that is in effect for the chart drawing to the given rectangle ","groudtruth":"java.lang.Math.round java.lang.Math.round java.lang.Math.round java.lang.Math.round ","nowflat":"N java.lang.Math.round N java.lang.Math.round N ","decomposemethodname":"scale ","nowapisequence":"java.lang.Math.round java.lang.Math.round "}
{"methodannotation":"mapping Title = name Address = addressLine1 City = city State = state code Phone = phone Latitude = address.location.lat Longitude = address.location.lng Rating AverageRating TotalRatings TtotalReviews BusinessUrl = url ","groudtruth":"java.lang.String.length java.lang.String.equals ","nowflat":"S java.lang.String.length ","decomposemethodname":"start Element ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"breaks the contents of the given input stream into an array of strings ","groudtruth":"java.io.BufferedReader.read java.lang.StringBuilder.append java.io.BufferedReader.read java.lang.StringBuilder.append java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder.length java.lang.StringBuilder.toString java.util.List.add java.util.List.toArray java.io.BufferedReader.close ","nowflat":"W } java.io.InputStreamReader java.io.BufferedReader java.lang.StringBuilder ` java.io.BufferedReader.read 8 M java.lang.StringBuilder.append 8 java.io.BufferedReader.read 8 M java.lang.StringBuilder.append 8 java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder 8 java.lang.StringBuilder.toString ","decomposemethodname":"read Lines ","nowapisequence":"java.io.BufferedReader.read java.lang.StringBuilder.append java.io.BufferedReader.read java.lang.StringBuilder.append java.lang.StringBuilder.toString java.util.List.add java.lang.StringBuilder.toString "}
{"methodannotation":"called when text was inserted into the text area ","groudtruth":"javax.swing.event.DocumentEvent.getLength javax.swing.event.DocumentEvent.getOffset ","nowflat":"javax.swing.event.DocumentEvent.getLength ","decomposemethodname":"insert Update ","nowapisequence":"javax.swing.event.DocumentEvent.getLength "}
{"methodannotation":"this method is to provide override for non-JDBC or JDBC-like implementation of executing update ","groudtruth":"java.sql.PreparedStatement.executeUpdate ","nowflat":"@ ","decomposemethodname":"execute Update ","nowapisequence":""}
{"methodannotation":"convert the contents of the output stream to a byte array ","groudtruth":"java.io.ByteArrayOutputStream.toByteArray ","nowflat":"W ","decomposemethodname":"to Byte Array ","nowapisequence":""}
{"methodannotation":"creates new ByteArrayInputStream , it just wraps class binary data ","groudtruth":"java.io.ByteArrayOutputStream.toByteArray ","nowflat":"@ ","decomposemethodname":"open Input Stream ","nowapisequence":""}
{"methodannotation":"adds an element to this vector ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 W ","decomposemethodname":"add Element ","nowapisequence":""}
{"methodannotation":"takes in a PasswordAuthentication and returns an identical version ","groudtruth":"java.net.PasswordAuthentication.getPassword java.net.PasswordAuthentication.getUserName ","nowflat":"8 @ W java.net.PasswordAuthentication.getPassword ","decomposemethodname":"encrypt ","nowapisequence":"java.net.PasswordAuthentication.getPassword "}
{"methodannotation":"isActive method comment ","groudtruth":"java.util.Vector.isEmpty ","nowflat":"@ ","decomposemethodname":"is Active ","nowapisequence":""}
{"methodannotation":"writes data from the buffer into a temporary buffer , and then to disk ","groudtruth":"java.nio.Buffer.hasRemaining ","nowflat":"_ } X ","decomposemethodname":"write Data ","nowapisequence":""}
{"methodannotation":"overridden to return false , and if the event is a mouse event it is forwarded to the tree ","groudtruth":"javax.swing.JTable.getColumnCount javax.swing.JTable.getColumnClass java.awt.AWTEvent.getID java.awt.event.InputEvent.getWhen java.awt.event.InputEvent.getModifiers java.awt.event.MouseEvent.getY java.awt.event.MouseEvent.getClickCount java.awt.event.MouseEvent.isPopupTrigger java.awt.Component.dispatchEvent ","nowflat":"8 7 javax.swing.JTable.getColumnCount 8 javax.swing.JTable.getColumnClass N java.awt.AWTEvent.getID java.awt.event.InputEvent.getWhen java.awt.event.InputEvent.getModifiers ","decomposemethodname":"is Cell Editable ","nowapisequence":"javax.swing.JTable.getColumnCount javax.swing.JTable.getColumnClass java.awt.AWTEvent.getID java.awt.event.InputEvent.getWhen java.awt.event.InputEvent.getModifiers "}
{"methodannotation":"write a UTF encoded string I would delegate here ","groudtruth":"java.lang.String.getBytes java.io.RandomAccessFile.writeInt java.io.RandomAccessFile.write ","nowflat":"W java.lang.String.getBytes 8 { ","decomposemethodname":"write UTF ","nowapisequence":"java.lang.String.getBytes "}
{"methodannotation":"compile the installation ","groudtruth":"java.lang.Thread.start ","nowflat":"","decomposemethodname":"compile ","nowapisequence":""}
{"methodannotation":"returns the float conversion of the most negative integer value which is greater than the argument ","groudtruth":"java.lang.Math.ceil ","nowflat":"@ ","decomposemethodname":"ceil ","nowapisequence":""}
{"methodannotation":"returns the value of its argument rounded toward negative infinity to an integral value ","groudtruth":"java.lang.Double.doubleToLongBits java.lang.Double.longBitsToDouble ","nowflat":"8 @ java.lang.Double.doubleToLongBits N N 8 8 @ 8 @ @ ","decomposemethodname":"floor ","nowapisequence":"java.lang.Double.doubleToLongBits "}
{"methodannotation":"signs the data ","groudtruth":"java.security.MessageDigest.digest java.security.MessageDigest.reset java.security.MessageDigest.update java.security.MessageDigest.digest ","nowflat":"W W java.security.MessageDigest.digest java.security.MessageDigest.reset ","decomposemethodname":"sign ","nowapisequence":"java.security.MessageDigest.digest java.security.MessageDigest.reset "}
{"methodannotation":"called when the caret position is updated ","groudtruth":"java.lang.Object.equals java.util.Vector.lastElement java.lang.String.length ","nowflat":"8 8 java.lang.Object.equals ","decomposemethodname":"caret Update ","nowapisequence":"java.lang.Object.equals "}
{"methodannotation":"answers a deep copy of the toCopy array ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W W W W W W W W ","decomposemethodname":"deep Copy ","nowapisequence":""}
{"methodannotation":"verifies data using the verifier key ","groudtruth":"java.security.Signature.getInstance java.security.Signature.getInstance java.security.Signature.initVerify java.security.Signature.update java.security.Signature.verify ","nowflat":"W W 8 { java.lang.IllegalStateException 8 java.security.Signature.getInstance ","decomposemethodname":"verify ","nowapisequence":"java.security.Signature.getInstance "}
{"methodannotation":"return true if there are no more transactions associated with this object ","groudtruth":"java.util.HashSet.isEmpty ","nowflat":"8 @ 8 ","decomposemethodname":"empty ","nowapisequence":""}
{"methodannotation":"return value on the top of the stack ","groudtruth":"java.util.Stack.empty java.lang.Integer.intValue ","nowflat":"8 java.util.Stack.empty { ","decomposemethodname":"top ","nowapisequence":"java.util.Stack.empty "}
{"methodannotation":"pushes a new type onto the output frame stack ","groudtruth":"java.lang.Math.max java.lang.System.arraycopy ","nowflat":"8 W 8 W ","decomposemethodname":"push ","nowapisequence":""}
{"methodannotation":"returns an enumeration describing the available options ","groudtruth":"java.util.Vector.addElement java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.util.Vector.addElement java.util.Vector.elements ","nowflat":"java.util.Vector java.util.Vector.addElement ` java.util.Enumeration.hasMoreElements ","decomposemethodname":"list Options ","nowapisequence":"java.util.Vector.addElement java.util.Enumeration.hasMoreElements "}
{"methodannotation":"returns an enumeration of the additional measure names ","groudtruth":"java.util.Vector.addElement java.util.Vector.addElement java.util.Vector.addElement java.util.Enumeration.hasMoreElements java.util.Vector.addElement java.util.Vector.elements ","nowflat":"java.util.Vector<java.lang.String> java.util.Vector.addElement java.util.Vector.addElement java.util.Vector.addElement 8 7 ","decomposemethodname":"enumerate Measures ","nowapisequence":"java.util.Vector<java.lang.String> java.util.Vector.addElement java.util.Vector.addElement java.util.Vector.addElement "}
{"methodannotation":"allocate an array ","groudtruth":"java.lang.reflect.Array.newInstance ","nowflat":"W @ N ","decomposemethodname":"new Array ","nowapisequence":""}
{"methodannotation":"return the class for this name ","groudtruth":"java.security.PrivilegedActionException.getException ","nowflat":"} N java.lang.Object O 8 ","decomposemethodname":"for Name ","nowapisequence":""}
{"methodannotation":"write the string in the given sb into the given file ","groudtruth":"java.io.PrintWriter.print java.io.PrintWriter.close ","nowflat":"java.io.FileWriter java.io.PrintWriter ","decomposemethodname":"write To File ","nowapisequence":""}
{"methodannotation":"saves a String to file ","groudtruth":"java.io.File.mkdirs java.io.File.getParentFile java.io.Writer.write java.io.OutputStreamWriter.close java.lang.String.length java.io.Writer.write java.io.Writer.flush java.io.Writer.close ","nowflat":"java.io.File.mkdirs java.io.File.getParentFile 8 java.io.FileWriter java.io.Writer.write java.io.OutputStreamWriter.close java.io.FileOutputStream ","decomposemethodname":"save To File ","nowapisequence":"java.io.File.mkdirs java.io.File.getParentFile java.io.Writer.write java.io.OutputStreamWriter.close "}
{"methodannotation":"writes object ","groudtruth":"java.lang.Object.toString java.io.Writer.write ","nowflat":"java.lang.Object.toString ","decomposemethodname":"p ","nowapisequence":"java.lang.Object.toString "}
{"methodannotation":"returns the last element in the sorted set ","groudtruth":"java.util.SortedSet.last ","nowflat":"@ ","decomposemethodname":"last ","nowapisequence":""}
{"methodannotation":"pop item from a iterator ","groudtruth":"java.util.Iterator.hasNext java.util.Iterator.next ","nowflat":"8 java.util.Iterator.hasNext @ ","decomposemethodname":"pop ","nowapisequence":"java.util.Iterator.hasNext "}
{"methodannotation":"extract the specified zip file to the specified destination directory ","groudtruth":"java.util.zip.ZipFile.entries java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.util.zip.ZipEntry.isDirectory java.io.PrintStream.println java.io.PrintStream.println java.util.zip.ZipFile.getInputStream java.io.PrintStream.println java.util.zip.ZipFile.close java.io.PrintStream.println ","nowflat":"} java.util.zip.ZipFile java.util.zip.ZipFile.entries ` java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement 8 java.util.zip.ZipEntry.isDirectory 8 java.io.PrintStream.println java.io.PrintStream.println M ","decomposemethodname":"extract ","nowapisequence":"java.util.zip.ZipFile.entries java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.util.zip.ZipEntry.isDirectory java.io.PrintStream.println java.io.PrintStream.println "}
{"methodannotation":"transform an Match -LSB- -RSB- into an Element -LSB- -RSB- , removing duplicates ","groudtruth":"java.util.Set.addAll java.util.Set.toArray ","nowflat":"W java.util.LinkedHashSet<org.w3c.dom.Element> Z ","decomposemethodname":"elements ","nowapisequence":"java.util.LinkedHashSet<org.w3c.dom.Element> "}
{"methodannotation":"collects comment lines of the form ''  < name > = < value > '' until the first non-empty and non-comment line is found ","groudtruth":"java.lang.String.trim java.lang.String.startsWith java.lang.String.substring java.lang.String.indexOf java.lang.String.trim java.lang.String.substring java.lang.String.trim java.lang.String.substring java.util.Map.put java.lang.String.isEmpty ","nowflat":"` java.lang.String.trim 8 java.lang.String.startsWith java.lang.String.substring java.lang.String.indexOf 8 java.lang.String.trim java.lang.String.substring ","decomposemethodname":"read Properties ","nowapisequence":"java.lang.String.trim java.lang.String.startsWith java.lang.String.substring java.lang.String.indexOf java.lang.String.trim java.lang.String.substring "}
{"methodannotation":"check whether the given username is already used or not ","groudtruth":"java.lang.Throwable.getMessage ","nowflat":"N } 8 @ O ","decomposemethodname":"exists ","nowapisequence":""}
{"methodannotation":"returns true if the given character is allowed ","groudtruth":"java.lang.String.indexOf java.lang.String.indexOf ","nowflat":"@ ","decomposemethodname":"is Allowed ","nowapisequence":""}
{"methodannotation":"registers an object with this series , to receive notification whenever the series changes ","groudtruth":"javax.swing.event.EventListenerList.add ","nowflat":"","decomposemethodname":"add Change Listener ","nowapisequence":""}
{"methodannotation":"unregisters an object for notification of changes to the marker ","groudtruth":"javax.swing.event.EventListenerList.remove ","nowflat":"","decomposemethodname":"remove Change Listener ","nowapisequence":""}
{"methodannotation":"method that loads workload info ","groudtruth":"java.lang.String.endsWith java.lang.StringBuilder.append java.io.BufferedReader.readLine java.lang.String.replace java.lang.StringBuilder.toString java.io.BufferedReader.close java.io.FileInputStream.close java.util.logging.Logger.log java.lang.Class.getName java.util.logging.Logger.getLogger java.util.logging.Logger.log java.lang.Class.getName java.util.logging.Logger.getLogger java.io.FileInputStream.close java.util.logging.Logger.log java.lang.Class.getName java.util.logging.Logger.getLogger ","nowflat":"8 java.lang.String.endsWith } java.io.FileInputStream java.io.InputStreamReader java.io.BufferedReader java.lang.StringBuilder ` java.lang.StringBuilder.append java.io.BufferedReader.readLine java.lang.String.replace java.lang.StringBuilder.toString java.io.BufferedReader.close java.io.FileInputStream.close O java.util.logging.Logger.log ","decomposemethodname":"load File ","nowapisequence":"java.lang.String.endsWith java.lang.StringBuilder.append java.io.BufferedReader.readLine java.lang.String.replace java.lang.StringBuilder.toString java.io.BufferedReader.close java.io.FileInputStream.close java.util.logging.Logger.log "}
{"methodannotation":"blocks screenName from following the authenticating user ","groudtruth":"java.util.HashMap.put ","nowflat":"java.util.HashMap ","decomposemethodname":"block ","nowapisequence":""}
{"methodannotation":"loads the icons ","groudtruth":"java.lang.Class.getResourceAsStream java.lang.Object.getClass java.util.Vector.size java.util.Vector.get java.lang.Class.getResource java.lang.Object.getClass ","nowflat":"java.lang.Class.getResourceAsStream java.lang.Object.getClass N java.util.Vector.size 7 N ","decomposemethodname":"load Icons ","nowapisequence":"java.lang.Class.getResourceAsStream java.lang.Object.getClass java.util.Vector.size "}
{"methodannotation":"responds to ItemEvents handled by an ItemListener ; in this class , from JCheckBoxes ","groudtruth":"java.awt.event.ItemEvent.getItemSelectable ","nowflat":"","decomposemethodname":"item State Changed ","nowapisequence":""}
{"methodannotation":"close this dialog by sending the command to the server that orders the dialog to close ","groudtruth":"java.util.EnumSet.of ","nowflat":"","decomposemethodname":"close Dialog ","nowapisequence":""}
{"methodannotation":"shows this dialog ","groudtruth":"java.awt.Window.pack java.awt.Window.getOwner java.awt.Window.setLocationRelativeTo java.awt.Dialog.show ","nowflat":"java.awt.Window.pack java.awt.Window.getOwner java.awt.Window.setLocationRelativeTo ","decomposemethodname":"show Dialog ","nowapisequence":"java.awt.Window.pack java.awt.Window.getOwner java.awt.Window.setLocationRelativeTo "}
{"methodannotation":"cleans up the object when it 's destroyed ","groudtruth":"java.util.Vector.clear java.util.Vector.clear java.util.Vector.clear java.util.Vector.clear java.lang.Object.finalize ","nowflat":"java.util.Vector.clear java.util.Vector.clear java.util.Vector.clear ","decomposemethodname":"finalize ","nowapisequence":"java.util.Vector.clear java.util.Vector.clear java.util.Vector.clear "}
{"methodannotation":"returns a two hexadecimal representation of i , if shorter than 2 chars then an additional '' 0 '' is put in front ","groudtruth":"java.lang.Integer.toHexString java.lang.String.length ","nowflat":"java.lang.Integer.toHexString 8 ","decomposemethodname":"to Hex ","nowapisequence":"java.lang.Integer.toHexString "}
{"methodannotation":"create a new DomainEventStream with events obtained from the given stream ","groudtruth":"java.util.Objects.requireNonNull java.util.stream.BaseStream.iterator ","nowflat":"java.util.Objects.requireNonNull ","decomposemethodname":"of ","nowapisequence":"java.util.Objects.requireNonNull "}
{"methodannotation":"ensures the truth of an expression involving the state of the calling instance , but not involving any parameters to the calling method ","groudtruth":"java.lang.String.valueOf ","nowflat":"8 { ","decomposemethodname":"check State ","nowapisequence":""}
{"methodannotation":"filter a request looking for the '' accept-encoding '' HTTP header and if available , send compressed content ","groudtruth":"java.lang.String.indexOf java.lang.Throwable.getCause java.lang.Throwable.getCause ","nowflat":"} 8 N N 8 java.lang.String.indexOf java.lang.Object @ ","decomposemethodname":"do Filter ","nowapisequence":"java.lang.String.indexOf "}
{"methodannotation":"translate MultiRectArea object by ","groudtruth":"java.awt.Rectangle.isEmpty java.awt.Rectangle.translate java.awt.Rectangle.translate ","nowflat":"7 8 java.awt.Rectangle.isEmpty java.awt.Rectangle.translate ","decomposemethodname":"translate ","nowapisequence":"java.awt.Rectangle.isEmpty java.awt.Rectangle.translate "}
{"methodannotation":"checks if an option is defined ","groudtruth":"java.lang.String.toLowerCase java.util.Map.get ","nowflat":"8 @ @ ","decomposemethodname":"check ","nowapisequence":""}
{"methodannotation":"safely close a closeable ","groudtruth":"java.lang.AutoCloseable.close ","nowflat":"8 } ","decomposemethodname":"safe Close ","nowapisequence":""}
{"methodannotation":"check if a function is a primitive function ","groudtruth":"java.util.Set.contains ","nowflat":"@ ","decomposemethodname":"is Primitive ","nowapisequence":""}
{"methodannotation":"check whether we support a specified flavor ","groudtruth":"java.awt.datatransfer.DataFlavor.equals ","nowflat":"@ ","decomposemethodname":"is Data Flavor Supported ","nowapisequence":""}
{"methodannotation":"create a new item object to be added to the model ","groudtruth":"java.lang.String.split java.lang.String.equals java.lang.String.equals ","nowflat":"8 W java.lang.String.split 8 java.lang.String.equals 8 ","decomposemethodname":"create Item ","nowapisequence":"java.lang.String.split java.lang.String.equals "}
{"methodannotation":"start the Grizzly HTTP Container ","groudtruth":"java.util.Map.put java.io.PrintStream.println ","nowflat":"java.util.HashMap<java.lang.String,java.lang.String> java.util.Map.put ","decomposemethodname":"start Server ","nowapisequence":"java.util.HashMap<java.lang.String,java.lang.String> java.util.Map.put "}
{"methodannotation":"add the unique id to the given StringBuilder ","groudtruth":"java.text.Format.format ","nowflat":"@ ","decomposemethodname":"append To ","nowapisequence":""}
{"methodannotation":"adds the given Clazz to the class pool ","groudtruth":"java.util.Map.put ","nowflat":"","decomposemethodname":"add Class ","nowapisequence":""}
{"methodannotation":"adds a field to the end of the list of fields ","groudtruth":"java.util.HashMap.get java.util.HashMap.put java.util.List.add java.util.List.add ","nowflat":"N java.util.HashMap.get 8 java.util.LinkedList ","decomposemethodname":"add Field ","nowapisequence":"java.util.HashMap.get "}
{"methodannotation":"to have runner running on plugin system event dispatch thread ","groudtruth":"java.awt.EventQueue.isDispatchThread java.awt.Toolkit.getDefaultToolkit java.awt.EventQueue.postEvent java.lang.Object.wait java.awt.event.InvocationEvent.getException ","nowflat":"8 java.awt.EventQueue.isDispatchThread { java.lang.Error java.awt.Toolkit.getDefaultToolkit java.awt.event.InvocationEvent _ ","decomposemethodname":"invoke And Wait ","nowapisequence":"java.awt.EventQueue.isDispatchThread java.awt.Toolkit.getDefaultToolkit "}
{"methodannotation":"adds to an index 's properties ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer W 7 8 U 8 ","decomposemethodname":"do Post ","nowapisequence":""}
{"methodannotation":"create an instance of the given class ","groudtruth":"java.lang.Thread.getContextClassLoader java.lang.Thread.currentThread java.lang.Class.forName java.lang.Class.getDeclaredConstructor java.lang.reflect.AccessibleObject.setAccessible java.lang.reflect.Constructor.newInstance ","nowflat":"} java.lang.Thread.getContextClassLoader java.lang.Thread.currentThread java.lang.Class.forName java.lang.Class.getDeclaredConstructor java.lang.reflect.AccessibleObject.setAccessible ","decomposemethodname":"create Instance ","nowapisequence":"java.lang.Thread.getContextClassLoader java.lang.Thread.currentThread java.lang.Class.forName java.lang.Class.getDeclaredConstructor java.lang.reflect.AccessibleObject.setAccessible "}
{"methodannotation":"authorize a username and password for the given BlogUser ","groudtruth":"java.util.Map.containsKey java.lang.String.equals ","nowflat":"8 8 java.util.Map.containsKey 8 ","decomposemethodname":"authorize ","nowapisequence":"java.util.Map.containsKey "}
{"methodannotation":"convert a list of CPListElement s to an array of IClasspathEntry ","groudtruth":"java.util.List.size java.util.List.size java.util.List.get ","nowflat":"W W W java.util.List.size 7 ","decomposemethodname":"convert ","nowapisequence":"java.util.List.size "}
{"methodannotation":"allocates the semaphore , returns true on success ","groudtruth":"java.lang.Object.notifyAll java.lang.Object.wait ","nowflat":"_ 8 java.lang.Object.notifyAll ","decomposemethodname":"await ","nowapisequence":"java.lang.Object.notifyAll "}
{"methodannotation":"write the header section ","groudtruth":"java.io.DataOutput.writeInt java.io.DataOutput.write ","nowflat":"java.io.DataOutput.writeInt ","decomposemethodname":"write Header ","nowapisequence":"java.io.DataOutput.writeInt "}
{"methodannotation":"set a multiline message ","groudtruth":"java.lang.String.trim java.lang.String.equals ","nowflat":"8 java.lang.String.trim ","decomposemethodname":"add Text ","nowapisequence":"java.lang.String.trim "}
{"methodannotation":"this is only returning the correct result if the file already exists ","groudtruth":"java.io.File.isDirectory ","nowflat":"@ ","decomposemethodname":"is Directory ","nowapisequence":""}
{"methodannotation":"true if the registration is expired ","groudtruth":"java.lang.Integer.valueOf java.util.Calendar.add ","nowflat":"java.lang.Integer.valueOf ","decomposemethodname":"is Expired ","nowapisequence":"java.lang.Integer.valueOf "}
{"methodannotation":"load the server configuration , default is to load using an XML configuration file ","groudtruth":"java.lang.System.getProperty ","nowflat":"W 8 ","decomposemethodname":"load Configuration ","nowapisequence":""}
{"methodannotation":"parses the path from a Windows Registry value ","groudtruth":"java.lang.String.equals java.lang.String.startsWith java.lang.String.indexOf java.lang.String.indexOf java.lang.String.substring ","nowflat":"8 java.lang.String.equals @ 8 java.lang.String.startsWith java.lang.String.indexOf ","decomposemethodname":"parse Path ","nowapisequence":"java.lang.String.equals java.lang.String.startsWith java.lang.String.indexOf "}
{"methodannotation":"prints a message to standard error if debugging is enabled ","groudtruth":"java.io.PrintStream.println ","nowflat":"8 ","decomposemethodname":"debug Println ","nowapisequence":""}
{"methodannotation":"log a message ","groudtruth":"javax.swing.JTextArea.append ","nowflat":"","decomposemethodname":"log Output ","nowapisequence":""}
{"methodannotation":"request the worker thread to shutdown ","groudtruth":"java.lang.Thread.interrupt ","nowflat":"} ","decomposemethodname":"shutdown Request ","nowapisequence":""}
{"methodannotation":"removes entry ","groudtruth":"java.util.regex.Pattern.quote ","nowflat":"","decomposemethodname":"remove Entry ","nowapisequence":""}
{"methodannotation":"normalize a path by converting all the system-dependent separator characters to the standard ' / ' separator character ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 7 java.lang.String.length java.lang.String.charAt 8 java.lang.StringBuilder.append ","decomposemethodname":"normalize Path ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuilder.append "}
{"methodannotation":"adds a file to the data ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add File ","nowapisequence":""}
{"methodannotation":"return true if the specified component is read only ","groudtruth":"java.lang.Boolean.booleanValue java.lang.Boolean.valueOf java.lang.Object.equals ","nowflat":"8 @ 8 @ ","decomposemethodname":"is Read Only ","nowapisequence":""}
{"methodannotation":"writes out 16 bytes in standard network byte order ","groudtruth":"java.io.DataOutput.writeLong java.io.DataOutput.writeLong ","nowflat":"java.io.DataOutput.writeLong ","decomposemethodname":"write Bytes ","nowapisequence":"java.io.DataOutput.writeLong "}
{"methodannotation":"returns whether the element has children ","groudtruth":"java.util.Vector.isEmpty ","nowflat":"@ ","decomposemethodname":"has Children ","nowapisequence":""}
{"methodannotation":"waits for all threads to complete computation and aggregates the result ","groudtruth":"java.util.concurrent.Future.get java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace ","nowflat":"W W W } 7 N java.util.concurrent.Future.get ","decomposemethodname":"wait For Completion ","nowapisequence":"java.util.concurrent.Future.get "}
{"methodannotation":"removes a session value ","groudtruth":"java.util.Map.remove ","nowflat":"","decomposemethodname":"remove Value ","nowapisequence":""}
{"methodannotation":"adds the IFcContentMixMixed property content ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Content ","nowapisequence":""}
{"methodannotation":"reads the contents of the given stream and closes it ","groudtruth":"java.io.InputStream.read java.io.OutputStream.write java.io.ByteArrayOutputStream.write java.io.InputStream.close java.io.ByteArrayOutputStream.toByteArray ","nowflat":"W java.io.ByteArrayOutputStream W W ` java.io.InputStream.read java.io.OutputStream.write ","decomposemethodname":"read Stream ","nowapisequence":"java.io.InputStream.read java.io.OutputStream.write "}
{"methodannotation":"uncompress the image using the ZIP format ","groudtruth":"java.util.zip.Inflater.setInput java.util.zip.Inflater.inflate java.util.zip.Inflater.end java.lang.System.arraycopy ","nowflat":"W W W W java.util.zip.Inflater java.util.zip.Inflater.setInput java.util.zip.Inflater.inflate ","decomposemethodname":"unzip ","nowapisequence":"java.util.zip.Inflater.setInput java.util.zip.Inflater.inflate "}
{"methodannotation":"repeatedly dequeues references from the queue and invokes FinalizableReference finalizeReferent on them until the queueis empty ","groudtruth":"java.lang.ref.ReferenceQueue.poll java.lang.ref.Reference.clear java.util.logging.Logger.log ","nowflat":"8 @ ` java.lang.ref.ReferenceQueue.poll ","decomposemethodname":"clean Up ","nowapisequence":"java.lang.ref.ReferenceQueue.poll "}
{"methodannotation":"returns true if provider supports protocol version ","groudtruth":"java.util.Hashtable.containsKey ","nowflat":"@ ","decomposemethodname":"is Supported ","nowapisequence":""}
{"methodannotation":"copies all the data from the specified input stream to the specified output stream ","groudtruth":"java.io.InputStream.read java.io.OutputStream.write ","nowflat":"W W ` ","decomposemethodname":"copy Stream ","nowapisequence":""}
{"methodannotation":"write the database content to the disk ","groudtruth":"java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.close java.lang.Throwable.initCause ","nowflat":"} java.io.FileOutputStream java.io.BufferedOutputStream java.io.ObjectOutputStream java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.close ","decomposemethodname":"write Content ","nowapisequence":"java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.close "}
{"methodannotation":"populates chunk with ores etc etc ","groudtruth":"java.util.Random.setSeed java.util.Random.nextLong java.util.Random.nextLong java.util.Random.setSeed ","nowflat":"java.util.Random.setSeed java.util.Random.nextLong java.util.Random.nextLong ","decomposemethodname":"populate ","nowapisequence":"java.util.Random.setSeed java.util.Random.nextLong java.util.Random.nextLong "}
{"methodannotation":"converts a string into a boolean ","groudtruth":"java.lang.String.trim java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase ","nowflat":"8 @ java.lang.String.trim 8 java.lang.String.equalsIgnoreCase @ 8 ","decomposemethodname":"to Boolean ","nowapisequence":"java.lang.String.trim java.lang.String.equalsIgnoreCase "}
{"methodannotation":"disables the component ","groudtruth":"javax.swing.JComboBox.setEnabled javax.swing.JComponent.setEnabled javax.swing.JComponent.setEnabled ","nowflat":"javax.swing.JComboBox.setEnabled ","decomposemethodname":"disable ","nowapisequence":"javax.swing.JComboBox.setEnabled "}
{"methodannotation":"enables the filter for current thread , which will disable the automatic versioning ","groudtruth":"java.lang.ThreadLocal.set ","nowflat":"","decomposemethodname":"enable ","nowapisequence":""}
{"methodannotation":"returns true if this component 's plugin configuration tells us the JDBC tracing is to be enabled ","groudtruth":"java.lang.Boolean.parseBoolean ","nowflat":"@ ","decomposemethodname":"is Enabled ","nowapisequence":""}
{"methodannotation":"sends an exit command with the specified exit code to the client ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"exit ","nowapisequence":""}
{"methodannotation":"write the contents of the record back , so it can be written to disk ","groudtruth":"java.io.OutputStream.write java.io.OutputStream.write ","nowflat":"java.io.OutputStream.write ","decomposemethodname":"write Out ","nowapisequence":"java.io.OutputStream.write "}
{"methodannotation":"this is the main method of the servlet that will service all get requests ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.io.PrintWriter.println ","nowflat":"java.lang.StringBuffer } 7 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"do Get ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"helper functions ","groudtruth":"java.util.GregorianCalendar.add java.util.Calendar.get java.lang.String.valueOf java.lang.String.valueOf java.util.Calendar.get java.lang.String.valueOf java.util.Calendar.get java.lang.String.valueOf java.lang.String.valueOf java.util.Calendar.get java.lang.String.valueOf java.lang.String.valueOf ","nowflat":"java.util.GregorianCalendar java.util.GregorianCalendar java.util.GregorianCalendar.add java.util.Calendar.get java.lang.String.valueOf java.lang.String.valueOf java.util.Calendar.get java.lang.String.valueOf java.util.Calendar.get ","decomposemethodname":"execute Query ","nowapisequence":"java.util.GregorianCalendar.add java.util.Calendar.get java.lang.String.valueOf java.lang.String.valueOf java.util.Calendar.get java.lang.String.valueOf java.util.Calendar.get "}
{"methodannotation":"restore the node based on an older version ","groudtruth":"java.lang.Class.getName java.lang.Object.getClass ","nowflat":"{ java.lang.Class.getName ","decomposemethodname":"restore ","nowapisequence":"java.lang.Class.getName "}
{"methodannotation":"returns true if this tab is selected ","groudtruth":"javax.swing.AbstractButton.isSelected ","nowflat":"@ ","decomposemethodname":"is Selected ","nowapisequence":""}
{"methodannotation":"return true if mark is supported ","groudtruth":"java.io.InputStream.markSupported ","nowflat":"8 @ ","decomposemethodname":"mark Supported ","nowapisequence":""}
{"methodannotation":"read data bytes as a UTF stream ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"W java.lang.StringBuffer 7 = M 8 @ M 8 @ ","decomposemethodname":"read UTF ","nowapisequence":""}
{"methodannotation":"gets whether this type is an array type ","groudtruth":"java.lang.String.charAt ","nowflat":"@ ","decomposemethodname":"is Array ","nowapisequence":""}
{"methodannotation":"index resources ","groudtruth":"java.util.Set.add ","nowflat":"` ","decomposemethodname":"scan ","nowapisequence":""}
{"methodannotation":"same as String.substring , except that this version handles the case robustly when one or both of the indexes is out of bounds ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.String.substring ","nowflat":"8 @ 8 @ 8 8 ","decomposemethodname":"substring ","nowapisequence":""}
{"methodannotation":"adds the given RefactoringStatusEntry ","groudtruth":"java.util.List.add java.lang.Math.max ","nowflat":"java.util.List.add ","decomposemethodname":"add Entry ","nowapisequence":"java.util.List.add "}
{"methodannotation":"reads a single char from the stream ","groudtruth":"java.io.DataInputStream.readByte ","nowflat":"@ ","decomposemethodname":"read Char ","nowapisequence":""}
{"methodannotation":"parses a 16-bit int ","groudtruth":"java.io.InputStream.read java.io.InputStream.read ","nowflat":"java.io.InputStream.read ","decomposemethodname":"read Short ","nowapisequence":"java.io.InputStream.read "}
{"methodannotation":"crop an image ","groudtruth":"java.awt.image.BufferedImage.getSubimage ","nowflat":"@ ","decomposemethodname":"crop ","nowapisequence":""}
{"methodannotation":"write a signed short ","groudtruth":"java.io.DataOutput.write java.io.DataOutput.write java.io.DataOutput.write java.io.DataOutput.write ","nowflat":"8 java.io.DataOutput.write java.io.DataOutput.write ","decomposemethodname":"write Short ","nowapisequence":"java.io.DataOutput.write java.io.DataOutput.write "}
{"methodannotation":"copy the contents of a Bucket to a RandomAccessBuffer at a specific offset ","groudtruth":"java.lang.Math.min java.io.InputStream.read java.lang.Throwable.printStackTrace java.io.InputStream.close ","nowflat":"8 @ 8 } 8 N W W ` N java.lang.Math.min 8 { ","decomposemethodname":"copy To ","nowapisequence":"java.lang.Math.min "}
{"methodannotation":"description of the Method ","groudtruth":"java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setBoolean java.sql.PreparedStatement.setInt ","nowflat":"8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setInt 8 8 java.sql.PreparedStatement.setInt 8 java.sql.PreparedStatement.setBoolean 8 ","decomposemethodname":"prepare Filter ","nowapisequence":"java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setInt java.sql.PreparedStatement.setBoolean "}
{"methodannotation":"exit the Application ","groudtruth":"java.lang.System.exit ","nowflat":"","decomposemethodname":"exit Form ","nowapisequence":""}
{"methodannotation":"centers a window on screen ","groudtruth":"java.awt.GraphicsEnvironment.getCenterPoint java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment java.awt.Component.getSize java.awt.Window.setLocation ","nowflat":"java.awt.GraphicsEnvironment.getCenterPoint java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment ","decomposemethodname":"center Frame ","nowapisequence":"java.awt.GraphicsEnvironment.getCenterPoint java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment "}
{"methodannotation":"returns a Set view of the mappings contained in this matcher ","groudtruth":"java.util.Map.entrySet ","nowflat":"@ ","decomposemethodname":"entry Set ","nowapisequence":""}
{"methodannotation":"paints the etched line ","groudtruth":"java.awt.Graphics.translate java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.translate ","nowflat":"java.awt.Graphics.translate java.awt.Graphics.setColor java.awt.Graphics.drawLine ","decomposemethodname":"paint Border ","nowapisequence":"java.awt.Graphics.translate java.awt.Graphics.setColor java.awt.Graphics.drawLine "}
{"methodannotation":"adds current duration to a calendar object ","groudtruth":"java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.math.BigDecimal.setScale java.math.BigDecimal.subtract java.math.BigDecimal.intValue java.math.BigDecimal.movePointRight java.util.Calendar.add ","nowflat":"java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add 8 ","decomposemethodname":"add To ","nowapisequence":"java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add java.util.Calendar.add "}
{"methodannotation":"draws a line , using the current color , between the points and in this graphics context 's coordinate system ","groudtruth":"java.awt.Graphics.drawLine ","nowflat":"","decomposemethodname":"draw Line ","nowapisequence":""}
{"methodannotation":"return a no-longer-needed object back to the pool ","groudtruth":"java.util.concurrent.ConcurrentLinkedQueue.size java.util.concurrent.ConcurrentLinkedQueue.add ","nowflat":"8 ","decomposemethodname":"free ","nowapisequence":""}
{"methodannotation":"adds a dividing line to the list of UI elements act as separator ","groudtruth":"java.lang.String.equals javax.swing.BorderFactory.createMatteBorder javax.swing.JComponent.setBorder javax.swing.BorderFactory.createMatteBorder javax.swing.JComponent.setBorder javax.swing.BorderFactory.createMatteBorder javax.swing.JComponent.setBorder java.util.Vector.add ","nowflat":"javax.swing.JPanel 8 8 java.lang.String.equals javax.swing.BorderFactory.createMatteBorder javax.swing.JComponent.setBorder ","decomposemethodname":"add Divider ","nowapisequence":"java.lang.String.equals javax.swing.BorderFactory.createMatteBorder javax.swing.JComponent.setBorder "}
{"methodannotation":"compose ","groudtruth":"java.nio.ByteBuffer.wrap ","nowflat":"W ","decomposemethodname":"compose ","nowapisequence":""}
{"methodannotation":"sets a document boost field from the NodeDb and determines the best scoring url for pages that have rediects ","groudtruth":"java.lang.String.equals java.lang.String.equals ","nowflat":"java.util.ArrayList<org.apache.nutch.indexer.field.LinkDatum> ` 8 N 8 8 8 java.lang.Object java.lang.Object Z 8 ","decomposemethodname":"reduce ","nowapisequence":"java.util.ArrayList<org.apache.nutch.indexer.field.LinkDatum> "}
{"methodannotation":"emits PHP code for this transition parameter ","groudtruth":"java.lang.String.equals ","nowflat":"8 ","decomposemethodname":"visit ","nowapisequence":""}
{"methodannotation":"returns this buffer 's capacity ","groudtruth":"java.nio.Buffer.capacity ","nowflat":"@ ","decomposemethodname":"capacity ","nowapisequence":""}
{"methodannotation":"creates an index ImmutableListMultimap that contains the results ofapplying a specified function to each item in an Iterator ofvalues ","groudtruth":"java.util.Iterator.hasNext java.util.Iterator.next ","nowflat":"` java.util.Iterator.hasNext ","decomposemethodname":"index ","nowapisequence":"java.util.Iterator.hasNext "}
{"methodannotation":"safe equal methods for two object ","groudtruth":"java.lang.Object.equals ","nowflat":"8 @ 8 ","decomposemethodname":"equal ","nowapisequence":""}
{"methodannotation":"returns the value of the smallest entry in this counter ","groudtruth":"java.lang.Math.min ","nowflat":"Z ","decomposemethodname":"min ","nowapisequence":""}
{"methodannotation":"find and return the largest integer value in the IntCollection ","groudtruth":"java.lang.Math.max ","nowflat":"8 { java.lang.IllegalArgumentException ","decomposemethodname":"max ","nowapisequence":""}
{"methodannotation":"adds a handler ","groudtruth":"java.util.ArrayList.add ","nowflat":"8 { java.lang.NullPointerException ","decomposemethodname":"add Handler ","nowapisequence":""}
{"methodannotation":"read the data into the table ","groudtruth":"java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.substring java.lang.String.indexOf java.lang.String.indexOf java.lang.String.substring java.lang.String.length java.lang.String.equalsIgnoreCase ","nowflat":"8 N 8 8 java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.substring 8 java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.substring 8 java.lang.String.indexOf java.lang.String.indexOf ","decomposemethodname":"read Data ","nowapisequence":"java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.substring java.lang.String.indexOf java.lang.String.indexOf "}
{"methodannotation":"compacts the data array removing any null slots ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 @ 7 8 8 @ 8 ","decomposemethodname":"compact ","nowapisequence":""}
{"methodannotation":"java level API ","groudtruth":"java.io.PrintStream.println java.lang.Math.nextUp ","nowflat":"8 @ } O java.io.PrintStream.println @ ","decomposemethodname":"exec ","nowapisequence":"java.io.PrintStream.println "}
{"methodannotation":"cause all the balls to display ","groudtruth":"java.util.Vector.size java.util.Vector.elementAt ","nowflat":"7 java.util.Vector.size ","decomposemethodname":"display ","nowapisequence":"java.util.Vector.size "}
{"methodannotation":"escape XML special characters ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.String.length 7 java.lang.String.charAt = java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append ","decomposemethodname":"escape XML ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"quote JSON string ","groudtruth":"java.lang.StringBuffer.append java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.StringBuffer.append java.lang.String.length 7 java.lang.String.charAt = java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M ","decomposemethodname":"quote JSON ","nowapisequence":"java.lang.StringBuffer.append java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"add an argument to the list of arguments ","groudtruth":"java.util.Vector.add ","nowflat":"","decomposemethodname":"add Argument ","nowapisequence":""}
{"methodannotation":"publishes the record ","groudtruth":"java.util.logging.Handler.isLoggable java.util.logging.Handler.getFilter java.util.logging.Filter.isLoggable java.util.logging.Handler.getFormatter java.util.logging.Formatter.format java.util.logging.LogRecord.getMessage java.util.concurrent.BlockingQueue.offer ","nowflat":"8 java.util.logging.Handler.isLoggable @ java.util.logging.Handler.getFilter 8 java.util.logging.Filter.isLoggable @ } java.util.logging.Handler.getFormatter 8 java.util.logging.Formatter.format java.util.logging.LogRecord.getMessage ","decomposemethodname":"publish ","nowapisequence":"java.util.logging.Handler.isLoggable java.util.logging.Handler.getFilter java.util.logging.Filter.isLoggable java.util.logging.Handler.getFormatter java.util.logging.Formatter.format java.util.logging.LogRecord.getMessage "}
{"methodannotation":"finds all values matching the predicate , returns as a list ","groudtruth":"java.util.function.Predicate.test java.util.List.add ","nowflat":"Z 8 java.util.function.Predicate.test ","decomposemethodname":"find All ","nowapisequence":"java.util.function.Predicate.test "}
{"methodannotation":"a convenience method to bind to a given address and report better exceptions if the address is not a valid host ","groudtruth":"java.net.ServerSocket.bind java.lang.Throwable.initCause java.lang.Throwable.getMessage java.lang.String.equals ","nowflat":"} java.net.ServerSocket.bind O java.net.BindException java.lang.Throwable.initCause { O ","decomposemethodname":"bind ","nowapisequence":"java.net.ServerSocket.bind java.lang.Throwable.initCause "}
{"methodannotation":"invalidates this session then unbinds any objects bound to it ","groudtruth":"java.util.Map.clear ","nowflat":"8 { ","decomposemethodname":"invalidate ","nowapisequence":""}
{"methodannotation":"creates this entry as a directory in the associated AbstractArchiveFile ","groudtruth":"java.lang.System.currentTimeMillis ","nowflat":"8 { java.io.IOException ","decomposemethodname":"mkdir ","nowapisequence":""}
{"methodannotation":"returns true if this task was cancelled before it completed normally ","groudtruth":"java.util.concurrent.FutureTask.isCancelled ","nowflat":"@ ","decomposemethodname":"is Cancelled ","nowapisequence":""}
{"methodannotation":"parse parameters according to the parameter list passed ","groudtruth":"java.lang.String.indexOf java.lang.String.substring java.lang.String.indexOf java.lang.String.length java.lang.String.substring java.lang.String.length ","nowflat":"java.lang.String.indexOf 7 8 java.lang.String.substring java.lang.String.indexOf 8 { 8 8 ","decomposemethodname":"parse Parameters ","nowapisequence":"java.lang.String.indexOf java.lang.String.substring java.lang.String.indexOf "}
{"methodannotation":"removes the given header ","groudtruth":"java.util.List.remove ","nowflat":"8 ","decomposemethodname":"remove Header ","nowapisequence":""}
{"methodannotation":"copies the builder 's character array into a new character array ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W 8 @ W ","decomposemethodname":"to Char Array ","nowapisequence":""}
{"methodannotation":"consumes and digests data up to BUFFER_SIZE , then writes the final digest to the output buffer ","groudtruth":"java.nio.Buffer.position java.nio.Buffer.remaining java.lang.Math.min java.nio.Buffer.limit java.security.MessageDigest.update java.security.MessageDigest.digest java.nio.ByteBuffer.put java.security.MessageDigest.update ","nowflat":"java.nio.Buffer.position java.nio.Buffer.remaining ` N java.lang.Math.min java.nio.Buffer.limit ","decomposemethodname":"consume ","nowapisequence":"java.nio.Buffer.position java.nio.Buffer.remaining java.lang.Math.min java.nio.Buffer.limit "}
{"methodannotation":"used to convert raw characters to their escaped version when these raw version can not be used as part of an ASCII string literal ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.charAt java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 7 java.lang.String.length = java.lang.String.charAt U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U ","decomposemethodname":"add_escapes ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"replaces unprintable characters by their espaced equivalents in the given string ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.charAt java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 7 java.lang.String.length = java.lang.String.charAt U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U java.lang.StringBuffer.append U ","decomposemethodname":"add Escapes ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"expand options to one level by expanding eventual CompositeOption ","groudtruth":"java.util.Arrays.asList ","nowflat":"W java.util.ArrayList<com.toolazydogs.aunit.internal.Option> 8 Z ","decomposemethodname":"expand ","nowapisequence":"java.util.ArrayList<com.toolazydogs.aunit.internal.Option> "}
{"methodannotation":"centers the given window over its owner window ","groudtruth":"java.awt.Component.getLocation java.awt.Component.getSize java.awt.Component.getSize java.awt.Window.setLocation ","nowflat":"java.awt.Component.getLocation java.awt.Component.getSize ","decomposemethodname":"center ","nowapisequence":"java.awt.Component.getLocation java.awt.Component.getSize "}
{"methodannotation":"returns the preferred dimensions for this layout given the visible components in the specified target container ","groudtruth":"java.awt.Component.getTreeLock java.awt.Container.getComponentCount java.awt.Container.getComponent java.awt.Component.isVisible java.awt.Component.getPreferredSize ","nowflat":"_ java.awt.Component.getTreeLock java.awt.Dimension 8 java.awt.Container.getComponentCount java.awt.Container.getComponent ","decomposemethodname":"preferred Layout Size ","nowapisequence":"java.awt.Component.getTreeLock java.awt.Container.getComponentCount java.awt.Container.getComponent "}
{"methodannotation":"centers the elements in the specified row , if there is any slack ","groudtruth":"java.awt.Component.getTreeLock java.awt.Container.getComponent java.awt.Component.isVisible java.awt.Component.setLocation java.awt.Component.setLocation java.awt.Component.getSize ","nowflat":"_ java.awt.Component.getTreeLock = S M M S M M M ","decomposemethodname":"move Components ","nowapisequence":"java.awt.Component.getTreeLock "}
{"methodannotation":"handles the mouse move event ","groudtruth":"java.awt.event.MouseEvent.getY javax.swing.JScrollBar.getValue javax.swing.ImageIcon.getIconHeight javax.swing.JComponent.setToolTipText java.awt.Component.setCursor java.awt.Component.setCursor javax.swing.JComponent.setToolTipText ","nowflat":"8 @ java.awt.event.MouseEvent.getY javax.swing.JScrollBar.getValue javax.swing.ImageIcon.getIconHeight 7 8 javax.swing.JComponent.setToolTipText ","decomposemethodname":"mouse Moved ","nowapisequence":"java.awt.event.MouseEvent.getY javax.swing.JScrollBar.getValue javax.swing.ImageIcon.getIconHeight javax.swing.JComponent.setToolTipText "}
{"methodannotation":"when this node starts up , create a unique , but reproducible list of doc ids ","groudtruth":"java.util.Random.nextInt ","nowflat":"W W 7 ","decomposemethodname":"shuffle ","nowapisequence":""}
{"methodannotation":"read from the CDR stream ","groudtruth":"org.omg.CORBA.DefinitionKindHelper.read ","nowflat":"","decomposemethodname":"_read ","nowapisequence":""}
{"methodannotation":"for escaping strings printed by object and array literals ; not quite the same as ' escape ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.setLength java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 7 java.lang.String.length java.lang.String.charAt 8 8 java.lang.StringBuffer.append U 8 java.lang.StringBuffer java.lang.StringBuffer.append java.lang.StringBuffer.setLength = M M M M M M M M ","decomposemethodname":"escape String ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.setLength "}
{"methodannotation":"saves the given StoredData object to permanent storage ","groudtruth":"java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.io.ObjectOutputStream.close java.io.PrintStream.println ","nowflat":"} java.io.FileOutputStream java.io.ObjectOutputStream java.io.ObjectOutputStream.writeObject ","decomposemethodname":"save State ","nowapisequence":"java.io.ObjectOutputStream.writeObject "}
{"methodannotation":"determines the height of this view ","groudtruth":"java.lang.Math.min ","nowflat":"N 8 8 ","decomposemethodname":"measure Height ","nowapisequence":""}
{"methodannotation":"retrieves and removes the next Future representing the result of loading an RSS feed or null if none are present ","groudtruth":"java.util.Queue.poll ","nowflat":"@ ","decomposemethodname":"poll ","nowapisequence":""}
{"methodannotation":"adds an event to event-process queue with an argument ","groudtruth":"java.util.List.add ","nowflat":"8 ","decomposemethodname":"queue Event ","nowapisequence":""}
{"methodannotation":"copy bytes from a large InputStream to an OutputStream ","groudtruth":"java.io.InputStream.read java.io.OutputStream.write ","nowflat":"W W ` ","decomposemethodname":"copy Large ","nowapisequence":""}
{"methodannotation":"show a notification while this service is running ","groudtruth":"java.lang.System.currentTimeMillis ","nowflat":"8 ","decomposemethodname":"show Notification ","nowapisequence":""}
{"methodannotation":"searches array of arguments for the specified string ","groudtruth":"java.lang.String.equals ","nowflat":"W 8 Z 8 ","decomposemethodname":"scan Args ","nowapisequence":""}
{"methodannotation":"invokes the underlying Map putAll method ","groudtruth":"java.util.Map.putAll ","nowflat":"","decomposemethodname":"put All ","nowapisequence":""}
{"methodannotation":"add a new Intent action to match against ","groudtruth":"java.util.ArrayList.contains java.lang.String.intern java.util.ArrayList.add ","nowflat":"8 java.util.ArrayList.contains ","decomposemethodname":"add Action ","nowapisequence":"java.util.ArrayList.contains "}
{"methodannotation":"fill in this object based on the contents of an XML '' selector '' element ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W W W W W ` 8 U 8 U W W 7 8 M 8 8 S 8 8 { ","decomposemethodname":"inflate ","nowapisequence":""}
{"methodannotation":"send a block replace request to the output stream ","groudtruth":"java.io.DataOutputStream.writeShort java.io.DataOutputStream.writeByte java.io.DataOutputStream.writeLong java.io.DataOutputStream.writeLong java.io.DataOutputStream.flush ","nowflat":"java.io.DataOutputStream.writeShort java.io.DataOutputStream.writeByte java.io.DataOutputStream.writeLong ","decomposemethodname":"send Request ","nowapisequence":"java.io.DataOutputStream.writeShort java.io.DataOutputStream.writeByte java.io.DataOutputStream.writeLong "}
{"methodannotation":"returns true if the given property was seen in the JSON source bythis buffer ","groudtruth":"java.util.BitSet.get ","nowflat":"8 @ ","decomposemethodname":"has Parameter ","nowapisequence":""}
{"methodannotation":"removes the mapping at the given index ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"java.lang.System.arraycopy ","decomposemethodname":"remove At ","nowapisequence":"java.lang.System.arraycopy "}
{"methodannotation":"add trackball movement into the state ","groudtruth":"java.lang.Math.abs ","nowflat":"8 N 8 8 8 N 8 8 8 8 ","decomposemethodname":"collect ","nowapisequence":""}
{"methodannotation":"sets a single byte in the I2C sensor ","groudtruth":"java.lang.Throwable.getMessage java.io.PrintStream.println java.lang.Throwable.getMessage java.io.PrintStream.println ","nowflat":"W F N } @ O java.lang.Throwable.getMessage ","decomposemethodname":"send Data ","nowapisequence":"java.lang.Throwable.getMessage "}
{"methodannotation":"examine and consume command line arguments ","groudtruth":"java.lang.String.toLowerCase java.util.Hashtable.containsKey java.lang.String.equals java.lang.Integer.intValue ","nowflat":"W 7 8 java.lang.String.toLowerCase 8 java.util.Hashtable.containsKey ","decomposemethodname":"parse Args ","nowapisequence":"java.lang.String.toLowerCase java.util.Hashtable.containsKey "}
{"methodannotation":"creates a resizable ArrayList instance containing the givenelements ","groudtruth":"java.util.Collections.addAll ","nowflat":"java.util.ArrayList<E> ","decomposemethodname":"new Array List ","nowapisequence":"java.util.ArrayList<E> "}
{"methodannotation":"purges the cache ","groudtruth":"java.util.Map.clear ","nowflat":"","decomposemethodname":"purge ","nowapisequence":""}
{"methodannotation":"rolls back the transaction ","groudtruth":"java.util.logging.Logger.warning ","nowflat":"8 { java.lang.NullPointerException ","decomposemethodname":"rollback ","nowapisequence":""}
{"methodannotation":"resume observation ","groudtruth":"java.util.concurrent.locks.ReentrantLock.unlock ","nowflat":"8 { ","decomposemethodname":"resume ","nowapisequence":""}
{"methodannotation":"returns the closest float approximation of the sine of the argument ","groudtruth":"java.lang.Math.sin ","nowflat":"@ ","decomposemethodname":"sin ","nowapisequence":""}
{"methodannotation":"obtains the cosine of this angle ","groudtruth":"java.lang.Math.cos ","nowflat":"@ ","decomposemethodname":"cos ","nowapisequence":""}
{"methodannotation":"returns a Collection containing a - b ","groudtruth":"java.util.ArrayList.remove ","nowflat":"java.util.ArrayList<T> Z ","decomposemethodname":"subtract ","nowapisequence":"java.util.ArrayList<T> "}
{"methodannotation":"returns true if the L-infinite distance between this tuple and tuple t1 is less than or equal to the epsilon parameter , otherwise returns false ","groudtruth":"java.lang.Double.isNaN java.lang.Double.isNaN ","nowflat":"8 java.lang.Double.isNaN @ 8 S @ 8 ","decomposemethodname":"epsilon Equals ","nowapisequence":"java.lang.Double.isNaN "}
{"methodannotation":"opens a new session , specifying the security credentials and a workspace ","groudtruth":"java.lang.Class.getName java.lang.Object.getClass ","nowflat":"{ ","decomposemethodname":"login ","nowapisequence":""}
{"methodannotation":"similat to linux bash fuction toch , create file if not exist oherwise change last modified date ","groudtruth":"java.lang.System.currentTimeMillis ","nowflat":"8 ","decomposemethodname":"touch ","nowapisequence":""}
{"methodannotation":"updates MD5 hash ","groudtruth":"java.lang.String.length java.security.MessageDigest.update ","nowflat":"java.lang.String.length ","decomposemethodname":"md5 ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"convert stream to string ","groudtruth":"java.io.BufferedReader.readLine java.lang.StringBuilder.append java.lang.Throwable.printStackTrace java.io.InputStream.close java.lang.Throwable.printStackTrace java.lang.StringBuilder.toString ","nowflat":"java.io.InputStreamReader java.io.BufferedReader java.lang.StringBuilder } ` java.io.BufferedReader.readLine java.lang.StringBuilder.append O java.lang.Throwable.printStackTrace ","decomposemethodname":"convert Stream To String ","nowapisequence":"java.io.BufferedReader.readLine java.lang.StringBuilder.append java.lang.Throwable.printStackTrace "}
{"methodannotation":"invokes sync on the file descriptor for this log file ","groudtruth":"java.io.FileDescriptor.sync ","nowflat":"","decomposemethodname":"sync ","nowapisequence":""}
{"methodannotation":"transfer bytes from in to out until either length bytes have been transferred or in is exhausted ","groudtruth":"java.lang.Math.min java.io.InputStream.read java.io.OutputStream.write ","nowflat":"W W ` java.lang.Math.min ","decomposemethodname":"transfer ","nowapisequence":"java.lang.Math.min "}
{"methodannotation":"convert a 4-character string to a 32-bit type ","groudtruth":"java.lang.String.length java.lang.String.charAt ","nowflat":"8 java.lang.String.length { java.lang.RuntimeException ","decomposemethodname":"type ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"save a file to disk ","groudtruth":"java.io.File.exists java.io.BufferedInputStream.read java.io.BufferedOutputStream.write java.io.BufferedOutputStream.flush java.io.FilterOutputStream.close java.io.BufferedInputStream.close ","nowflat":"8 @ java.io.File 7 java.io.File.exists java.io.File java.io.FileOutputStream java.io.BufferedOutputStream java.io.BufferedInputStream ","decomposemethodname":"save File ","nowapisequence":"java.io.File.exists "}
{"methodannotation":"overloads the left shift operator to provide an easy way to append Map.Entry values to a Map ","groudtruth":"java.util.Map.Entry.getKey java.util.Map.Entry.getValue java.util.Map.put ","nowflat":"java.util.Map.Entry.getKey java.util.Map.Entry.getValue ","decomposemethodname":"left Shift ","nowapisequence":"java.util.Map.Entry.getKey java.util.Map.Entry.getValue "}
{"methodannotation":"creates a List of records that user wants to export in a csv file ","groudtruth":"java.util.List.add java.util.List.add ","nowflat":"java.util.ArrayList<java.util.List<java.lang.String>> java.util.List.add Z ","decomposemethodname":"export ","nowapisequence":"java.util.ArrayList<java.util.List<java.lang.String>> java.util.List.add "}
{"methodannotation":"pushes the configuration object onto the stack ","groudtruth":"java.util.Stack.push ","nowflat":"","decomposemethodname":"configure ","nowapisequence":""}
{"methodannotation":"write the value field to the given stream.For octet , the functionality is delegated to org.omg.CORBA.portable.OutputStream write_octet ","groudtruth":"org.omg.CORBA.portable.OutputStream.write_octet ","nowflat":"","decomposemethodname":"_write ","nowapisequence":""}
{"methodannotation":"assign the contents of the given DynAny to this DynAny ","groudtruth":"org.omg.DynamicAny.DynAnyOperations.type org.omg.CORBA.Any.extract_Streamable org.omg.DynamicAny.DynAnyOperations.to_any ","nowflat":"org.omg.DynamicAny.DynAnyOperations.type 8 N ","decomposemethodname":"assign ","nowapisequence":"org.omg.DynamicAny.DynAnyOperations.type "}
{"methodannotation":"pretty print the given states ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 8 java.lang.StringBuilder.append 8 8 java.lang.StringBuilder.append java.lang.StringBuilder.append ","decomposemethodname":"name ","nowapisequence":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append "}
{"methodannotation":"called by containers to tell them that they have a new parent ","groudtruth":"javax.swing.JComponent.addNotify java.awt.Window.removeWindowFocusListener java.awt.Component.getParent java.awt.Window.addWindowFocusListener ","nowflat":"javax.swing.JComponent.addNotify 8 java.awt.Window.removeWindowFocusListener X ","decomposemethodname":"add Notify ","nowapisequence":"javax.swing.JComponent.addNotify java.awt.Window.removeWindowFocusListener "}
{"methodannotation":"method declaration ","groudtruth":"java.util.List.add java.util.List.add java.util.List.add ","nowflat":"java.util.List.add ","decomposemethodname":"add Item ","nowapisequence":"java.util.List.add "}
{"methodannotation":"pop the FacesConfigBean off the top of the stack ","groudtruth":"java.lang.Class.getName java.lang.Object.getClass java.lang.String.equals ","nowflat":"8 8 8 java.lang.Class.getName java.lang.Object.getClass ","decomposemethodname":"end ","nowapisequence":"java.lang.Class.getName java.lang.Object.getClass "}
{"methodannotation":"waits for an Rayo message ","groudtruth":"java.util.concurrent.locks.ReentrantReadWriteLock.readLock java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.Lock.unlock ","nowflat":"java.util.concurrent.locks.ReentrantReadWriteLock.readLock java.util.concurrent.locks.Lock.lock } ","decomposemethodname":"wait For ","nowapisequence":"java.util.concurrent.locks.ReentrantReadWriteLock.readLock java.util.concurrent.locks.Lock.lock "}
{"methodannotation":"returns true if the given word starts with the given prefix ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.String.charAt java.lang.Character.toLowerCase java.lang.String.charAt java.lang.Character.toLowerCase ","nowflat":"java.lang.String.length java.lang.String.length 8 @ 7 8 java.lang.String.charAt ","decomposemethodname":"starts With ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.String.charAt "}
{"methodannotation":"sets cloud version ","groudtruth":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock java.util.concurrent.locks.Lock.unlock java.util.concurrent.locks.ReadWriteLock.writeLock ","nowflat":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock } ","decomposemethodname":"version ","nowapisequence":"java.util.concurrent.locks.Lock.lock java.util.concurrent.locks.ReadWriteLock.writeLock "}
{"methodannotation":"receive notification of the beginning of a prefix-URI Namespace mapping ","groudtruth":"java.util.Map.put ","nowflat":"","decomposemethodname":"start Prefix Mapping ","nowapisequence":""}
{"methodannotation":"end the scope of a prefix-URI mapping : remove entry from mapping tables ","groudtruth":"java.util.Map.containsKey java.util.Map.get java.util.Map.remove java.util.Map.remove java.util.List.lastIndexOf java.util.List.remove java.util.List.remove org.xml.sax.ContentHandler.endPrefixMapping ","nowflat":"8 java.util.Map.containsKey java.util.Map.get java.util.Map.remove java.util.Map.remove 8 ","decomposemethodname":"end Prefix Mapping ","nowapisequence":"java.util.Map.containsKey java.util.Map.get java.util.Map.remove java.util.Map.remove "}
{"methodannotation":"comennt to the flickr page of the photo ","groudtruth":"java.io.PrintStream.println java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println 8 java.lang.String.equals 8 java.lang.String.equals 8 java.lang.String.equals 8 java.lang.String.equals 8 ","decomposemethodname":"comment ","nowapisequence":"java.io.PrintStream.println java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals "}
{"methodannotation":"canonicalize a given URL , replacing relative path structures with the condensed path ","groudtruth":"java.lang.String.contains java.util.regex.Pattern.matcher java.util.regex.Matcher.find java.util.regex.Matcher.group java.lang.String.equals java.util.regex.Matcher.group java.util.regex.Matcher.group java.util.regex.Matcher.appendReplacement java.util.regex.Matcher.appendTail java.lang.StringBuffer.toString ","nowflat":"8 java.lang.String.contains java.lang.StringBuffer java.util.regex.Pattern.matcher ` java.util.regex.Matcher.find 8 java.util.regex.Matcher.group java.lang.String.equals ","decomposemethodname":"canonicalize ","nowapisequence":"java.lang.String.contains java.util.regex.Pattern.matcher java.util.regex.Matcher.find java.util.regex.Matcher.group java.lang.String.equals "}
{"methodannotation":"adds a comment just before the specified path ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.String.isEmpty java.lang.StringBuilder.length java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString java.util.HashMap.put ","nowflat":"java.lang.StringBuilder 7 java.lang.String.length 8 java.lang.String.charAt Z 8 java.lang.String.isEmpty ","decomposemethodname":"add Comment ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.String.isEmpty "}
{"methodannotation":"write a message with a priority of FATAL ","groudtruth":"java.lang.String.format ","nowflat":"} ","decomposemethodname":"fatal ","nowapisequence":""}
{"methodannotation":"determines whether two specified instances of IndexedPropertyDefinition are equal ","groudtruth":"java.lang.String.equalsIgnoreCase ","nowflat":"@ N ","decomposemethodname":"is Equal To ","nowapisequence":""}
{"methodannotation":"adds a forward reference to this label ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 W 8 ","decomposemethodname":"add Reference ","nowapisequence":""}
{"methodannotation":"parses whitespace separated file entries ","groudtruth":"java.lang.String.length java.lang.String.codePointAt java.lang.Character.isWhitespace java.lang.String.codePointAt java.lang.Character.isWhitespace java.lang.String.substring ","nowflat":"java.lang.String.length ` ` java.lang.String.codePointAt java.lang.Character.isWhitespace 8 ","decomposemethodname":"parse Line ","nowapisequence":"java.lang.String.length java.lang.String.codePointAt java.lang.Character.isWhitespace "}
{"methodannotation":"returns the connection state of the socket ","groudtruth":"java.net.Socket.isConnected java.net.Socket.isConnected ","nowflat":"8 @ java.net.Socket.isConnected ","decomposemethodname":"is Connected ","nowapisequence":"java.net.Socket.isConnected "}
{"methodannotation":"adds a line to the notifications table ","groudtruth":"javax.swing.table.DefaultTableModel.getColumnCount javax.swing.table.DefaultTableModel.addRow ","nowflat":"W 8 javax.swing.table.DefaultTableModel.getColumnCount ","decomposemethodname":"add Line ","nowapisequence":"javax.swing.table.DefaultTableModel.getColumnCount "}
{"methodannotation":"returns the character at the specified index ","groudtruth":"java.lang.String.charAt ","nowflat":"@ ","decomposemethodname":"char At ","nowapisequence":""}
{"methodannotation":"transmits the body of this request as a sequence of bytes ","groudtruth":"java.io.OutputStream.write java.io.InputStream.read java.io.InputStream.close ","nowflat":"W W X ","decomposemethodname":"write To ","nowapisequence":""}
{"methodannotation":"compare two strings for equality , ignoring case distinctions ","groudtruth":"java.lang.String.length java.lang.String.length java.lang.String.charAt java.lang.String.charAt java.lang.Character.toLowerCase java.lang.Character.toLowerCase ","nowflat":"8 8 java.lang.String.length java.lang.String.length 8 7 java.lang.String.charAt java.lang.String.charAt 8 ","decomposemethodname":"equals Ignore Case ","nowapisequence":"java.lang.String.length java.lang.String.length java.lang.String.charAt java.lang.String.charAt "}
{"methodannotation":"create a new temporary file ","groudtruth":"java.io.File.createTempFile ","nowflat":"@ ","decomposemethodname":"create Temp File ","nowapisequence":""}
{"methodannotation":"returns the timestamp of the last modification to the file ","groudtruth":"java.io.File.lastModified ","nowflat":"@ ","decomposemethodname":"last Modified ","nowapisequence":""}
{"methodannotation":"create an empty instance of MapEntryBean and push it on to the object stack ","groudtruth":"java.lang.Class.newInstance ","nowflat":"8 ","decomposemethodname":"begin ","nowapisequence":""}
{"methodannotation":"adds message to this holder ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Message ","nowapisequence":""}
{"methodannotation":"adds a series to the collection and sends a DatasetChangeEvent to all registered listeners ","groudtruth":"java.util.List.add ","nowflat":"8 { ","decomposemethodname":"add Series ","nowapisequence":""}
{"methodannotation":"method generated by IntelliJ IDEA GUI Designer >> > IMPORTANT !! << < DO NOT edit this method OR call it in your code ","groudtruth":"java.awt.Container.setLayout java.awt.Container.setLayout java.awt.Container.add java.awt.Container.add java.awt.Container.setLayout java.awt.Container.add javax.swing.AbstractButton.setText java.awt.Container.add javax.swing.AbstractButton.setText java.awt.Container.add java.awt.Container.setLayout java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add javax.swing.JList.setSelectionMode javax.swing.JScrollPane.setViewportView ","nowflat":"javax.swing.JPanel java.awt.Insets java.awt.Container.setLayout javax.swing.JPanel java.awt.Insets java.awt.Container.setLayout java.lang.Object java.awt.Container.add java.lang.Object java.awt.Container.add javax.swing.JPanel java.awt.Insets java.awt.Container.setLayout java.lang.Object java.awt.Container.add javax.swing.JButton javax.swing.AbstractButton.setText java.lang.Object java.awt.Container.add javax.swing.JButton javax.swing.AbstractButton.setText java.lang.Object java.awt.Container.add javax.swing.JPanel java.awt.Insets java.awt.Container.setLayout ","decomposemethodname":"$$$setup UI$$$ ","nowapisequence":"java.awt.Container.setLayout java.awt.Container.setLayout java.awt.Container.add java.awt.Container.add java.awt.Container.setLayout java.awt.Container.add javax.swing.AbstractButton.setText java.awt.Container.add javax.swing.AbstractButton.setText java.awt.Container.add java.awt.Container.setLayout "}
{"methodannotation":"use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page ","groudtruth":"java.lang.Boolean.booleanValue ","nowflat":"8 @ 8 8 ","decomposemethodname":"is Visible ","nowapisequence":""}
{"methodannotation":"add a given extension field for the standard extensions tag The value parameter becomes the contents of the octet string associated with the extension ","groudtruth":"java.util.Hashtable.put java.util.Vector.addElement ","nowflat":"W 8 java.util.Hashtable java.util.Vector ","decomposemethodname":"add Extension ","nowapisequence":""}
{"methodannotation":"simply selects the home view to render by returning its name ","groudtruth":"java.text.DateFormat.getDateTimeInstance java.text.DateFormat.format ","nowflat":"java.util.Date java.text.DateFormat.getDateTimeInstance ","decomposemethodname":"home ","nowapisequence":"java.text.DateFormat.getDateTimeInstance "}
{"methodannotation":"converts the String to a char using the first character , defaulting the value on empty Strings ","groudtruth":"java.lang.String.charAt ","nowflat":"8 @ ","decomposemethodname":"to Char ","nowapisequence":""}
{"methodannotation":"return a new List with elements both in first and second passed collection ","groudtruth":"java.util.List.addAll java.util.List.retainAll ","nowflat":"java.util.ArrayList<T> 8 java.util.List.addAll ","decomposemethodname":"intersection ","nowapisequence":"java.util.ArrayList<T> java.util.List.addAll "}
{"methodannotation":"process one block of input from the array in and write it to the out array ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W 8 { 8 { ","decomposemethodname":"process Block ","nowapisequence":""}
{"methodannotation":"closes the socket ","groudtruth":"java.io.BufferedReader.close java.io.BufferedWriter.close java.io.FilterOutputStream.close java.net.Socket.isClosed java.net.Socket.close java.io.PrintStream.println ","nowflat":"} 8 java.io.BufferedReader.close 8 java.io.BufferedWriter.close 8 java.io.FilterOutputStream.close ","decomposemethodname":"close Socket ","nowapisequence":"java.io.BufferedReader.close java.io.BufferedWriter.close java.io.FilterOutputStream.close "}
{"methodannotation":"places the string representation of extension value into the StringBuffer object ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","nowflat":"java.lang.StringBuffer.append java.lang.StringBuffer.append 8 8 8 java.lang.StringBuffer.append ","decomposemethodname":"dump Value ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"todo ","groudtruth":"java.util.List.add ","nowflat":"8 ","decomposemethodname":"add Name ","nowapisequence":""}
{"methodannotation":"process the last block in the buffer ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W 8 8 8 { 8 ","decomposemethodname":"do Final ","nowapisequence":""}
{"methodannotation":"find a Class using the specified ClassLoader ","groudtruth":"java.lang.System.getSecurityManager java.lang.String.lastIndexOf java.lang.String.substring java.lang.SecurityManager.checkPackageAccess java.lang.Class.forName java.lang.ClassLoader.loadClass java.lang.Class.getClassLoader java.lang.Class.forName java.lang.ClassLoader.loadClass ","nowflat":"java.lang.System.getSecurityManager } 8 java.lang.String.lastIndexOf 8 java.lang.String.substring java.lang.SecurityManager.checkPackageAccess O { 8 java.lang.Class.forName } java.lang.ClassLoader.loadClass ","decomposemethodname":"find Provider Class ","nowapisequence":"java.lang.System.getSecurityManager java.lang.String.lastIndexOf java.lang.String.substring java.lang.SecurityManager.checkPackageAccess java.lang.Class.forName java.lang.ClassLoader.loadClass "}
{"methodannotation":"sends a player a message ","groudtruth":"java.net.URLDecoder.decode java.lang.Throwable.printStackTrace java.lang.String.isEmpty ","nowflat":"F 8 } java.net.URLDecoder.decode O java.lang.Throwable.printStackTrace ","decomposemethodname":"message ","nowapisequence":"java.net.URLDecoder.decode java.lang.Throwable.printStackTrace "}
{"methodannotation":"report a fatal error and exit ","groudtruth":"java.io.PrintStream.printf java.lang.System.exit ","nowflat":"java.io.PrintStream.printf ","decomposemethodname":"fatal Error ","nowapisequence":"java.io.PrintStream.printf "}
{"methodannotation":"this creates an empty Document object based on a specific parser implementation ","groudtruth":"java.lang.Class.newInstance java.lang.Class.forName ","nowflat":"} @ N java.lang.Class.newInstance ","decomposemethodname":"create Document ","nowapisequence":"java.lang.Class.newInstance "}
{"methodannotation":"convert a string to a double -- Allowed input is in fixed notation ddd.fff ","groudtruth":"java.lang.Double.doubleValue java.lang.Double.valueOf ","nowflat":"} @ java.lang.Double.doubleValue ","decomposemethodname":"to Double ","nowapisequence":"java.lang.Double.doubleValue "}
{"methodannotation":"expands the set to accommodate new values ","groudtruth":"java.util.Set.size java.util.Arrays.fill java.util.Set.size ","nowflat":"F java.util.Set.size W W java.util.Arrays.fill 7 ","decomposemethodname":"rehash ","nowapisequence":"java.util.Set.size java.util.Arrays.fill "}
{"methodannotation":"return the MD5 HEX sum of a hashed MD5 byte array ","groudtruth":"java.lang.String.substring java.lang.Integer.toString ","nowflat":"W Z java.lang.String.substring ","decomposemethodname":"sum ","nowapisequence":"java.lang.String.substring "}
{"methodannotation":"concatenate two byte arrays ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W W W ","decomposemethodname":"concatenate ","nowapisequence":""}
{"methodannotation":"this gets called from the parser when a parse error is generated ","groudtruth":"java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals ","nowflat":"8 8 java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals ","decomposemethodname":"handle Exception ","nowapisequence":"java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals java.lang.Object.equals "}
{"methodannotation":"return canonical form ","groudtruth":"java.lang.Integer.toString ","nowflat":"@ ","decomposemethodname":"encode Body ","nowapisequence":""}
{"methodannotation":"to determine if the given string equals to the start of the current string ","groudtruth":"java.lang.String.length java.lang.String.equalsIgnoreCase java.lang.String.substring java.lang.String.startsWith java.lang.String.length ","nowflat":"8 @ 8 java.lang.String.length } 8 java.lang.String.equalsIgnoreCase java.lang.String.substring @ ","decomposemethodname":"parse String ","nowapisequence":"java.lang.String.length java.lang.String.equalsIgnoreCase java.lang.String.substring "}
{"methodannotation":"this starts the different pumper threads , and opens all the piping connections ","groudtruth":"java.nio.channels.Selector.open java.lang.Runtime.getRuntime java.lang.Runtime.exec java.lang.Process.getInputStream java.lang.Process.getErrorStream java.lang.Process.getOutputStream java.nio.channels.SelectableChannel.register java.nio.channels.SelectableChannel.register java.nio.channels.SelectableChannel.register java.lang.Runtime.addShutdownHook ","nowflat":"java.nio.channels.Selector.open java.lang.Runtime.getRuntime java.lang.Runtime.exec java.lang.Process.getInputStream java.lang.Process.getErrorStream 8 java.lang.Process.getOutputStream java.io.PrintStream 8 ","decomposemethodname":"startup ","nowapisequence":"java.nio.channels.Selector.open java.lang.Runtime.getRuntime java.lang.Runtime.exec java.lang.Process.getInputStream java.lang.Process.getErrorStream java.lang.Process.getOutputStream "}
{"methodannotation":"returns true if any coordinate of this vector is NaN ; false otherwise ","groudtruth":"java.lang.Double.isNaN java.lang.Double.isNaN java.lang.Double.isNaN ","nowflat":"@ java.lang.Double.isNaN ","decomposemethodname":"is Na N ","nowapisequence":"java.lang.Double.isNaN "}
{"methodannotation":"logging ===================== ","groudtruth":"java.util.logging.Logger.log java.lang.Class.getName java.util.logging.Logger.getLogger ","nowflat":"java.util.logging.Logger.log ","decomposemethodname":"err ","nowapisequence":"java.util.logging.Logger.log "}
{"methodannotation":"packs a CSS resource while replacing every occurring background image path to an absolute one ","groudtruth":"java.io.StringWriter.flush java.io.StringWriter.toString ","nowflat":"} java.io.InputStreamReader java.io.StringWriter java.io.StringWriter.flush ","decomposemethodname":"pack ","nowapisequence":"java.io.StringWriter.flush "}
{"methodannotation":"compare the contents of two Readers to determine if they are equal or not ","groudtruth":"java.io.Reader.read java.io.Reader.read java.io.Reader.read java.io.Reader.read ","nowflat":"8 java.io.BufferedReader 8 java.io.BufferedReader java.io.Reader.read ` java.io.Reader.read ","decomposemethodname":"content Equals ","nowapisequence":"java.io.Reader.read java.io.Reader.read "}
{"methodannotation":"convert the specified string to an input stream , encoded as bytes using the specified character encoding ","groudtruth":"java.lang.String.getBytes java.lang.String.getBytes ","nowflat":"W S java.lang.String.getBytes ","decomposemethodname":"to Input Stream ","nowapisequence":"java.lang.String.getBytes "}
{"methodannotation":"write lines to a file ","groudtruth":"java.io.Writer.write java.io.Writer.write ","nowflat":"W } Z ","decomposemethodname":"write Lines ","nowapisequence":""}
{"methodannotation":"starts timer if it is not already started ","groudtruth":"java.util.Timer.scheduleAtFixedRate ","nowflat":"8 java.util.Timer ","decomposemethodname":"start Timer ","nowapisequence":""}
{"methodannotation":"returns true if field timestamp is set and false otherwise ","groudtruth":"java.util.BitSet.get ","nowflat":"@ ","decomposemethodname":"is Set Timestamp ","nowapisequence":""}
{"methodannotation":"strips the extension of the library name , if it has one ","groudtruth":"java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.length java.lang.String.substring ","nowflat":"java.lang.String.lastIndexOf java.lang.String.lastIndexOf 8 java.lang.String.lastIndexOf 8 ","decomposemethodname":"strip ","nowapisequence":"java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf "}
{"methodannotation":"converts an array of object Character to primitives handling null ","groudtruth":"java.lang.Character.charValue ","nowflat":"W W 8 @ 8 @ W ","decomposemethodname":"to Primitive ","nowapisequence":""}
{"methodannotation":"adds the given target to the target list which should be performed at installation time ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Target ","nowapisequence":""}
{"methodannotation":"instantiating log4j logger ","groudtruth":"java.lang.Object.getClass ","nowflat":"@ ","decomposemethodname":"create Logger ","nowapisequence":""}
{"methodannotation":"prints the JCommander usage for this command ","groudtruth":"java.lang.Class.getAnnotation java.lang.Object.getClass ","nowflat":"java.lang.Class.getAnnotation ","decomposemethodname":"print Usage ","nowapisequence":"java.lang.Class.getAnnotation "}
{"methodannotation":"add a task for one of the threads to execute ","groudtruth":"java.util.concurrent.ThreadPoolExecutor.execute ","nowflat":"","decomposemethodname":"add Task ","nowapisequence":""}
{"methodannotation":"translate a urlString and a port definition to a URL Object ","groudtruth":"java.net.URL.getProtocol java.net.URL.getHost java.net.URL.getFile ","nowflat":"8 @ @ java.net.URL.getProtocol ","decomposemethodname":"to URL ","nowapisequence":"java.net.URL.getProtocol "}
{"methodannotation":"ensures that the given directory exists ","groudtruth":"java.io.File.mkdirs java.io.File.exists java.lang.Thread.sleep java.io.File.mkdirs java.io.File.exists ","nowflat":"8 java.io.File.mkdirs java.io.File.exists @ } java.lang.Thread.sleep O ","decomposemethodname":"mkdirs ","nowapisequence":"java.io.File.mkdirs java.io.File.exists java.lang.Thread.sleep "}
{"methodannotation":"checks that a String contains some content ","groudtruth":"java.lang.String.equals ","nowflat":"@ ","decomposemethodname":"is Set ","nowapisequence":""}
{"methodannotation":"add a string value that is passed to the R script ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Param ","nowapisequence":""}
{"methodannotation":"decodes an image strip using JPEG compression algorithm ","groudtruth":"javax.imageio.ImageIO.read java.lang.System.arraycopy ","nowflat":"W W } ` N N N java.io.ByteArrayInputStream java.io.BufferedInputStream javax.imageio.ImageIO.read O @ ","decomposemethodname":"decompress ","nowapisequence":"javax.imageio.ImageIO.read "}
{"methodannotation":"returns the integer value of this literal ","groudtruth":"java.math.BigDecimal.intValueExact java.math.BigDecimal.toString java.math.BigDecimal.intValue ","nowflat":"= N 8 } @ java.math.BigDecimal.intValueExact O ","decomposemethodname":"int Value ","nowapisequence":"java.math.BigDecimal.intValueExact "}
{"methodannotation":"helper method for type conversion ","groudtruth":"java.lang.Class.cast ","nowflat":"8 @ ","decomposemethodname":"as ","nowapisequence":""}
{"methodannotation":"this version of equals returns true if the local parts match ","groudtruth":"javax.xml.namespace.QName.getNamespaceURI java.lang.String.equals javax.xml.namespace.QName.getNamespaceURI ","nowflat":"@ javax.xml.namespace.QName.getNamespaceURI ","decomposemethodname":"is Equal ","nowapisequence":"javax.xml.namespace.QName.getNamespaceURI "}
{"methodannotation":"translates a relative path to a local system path ","groudtruth":"java.lang.String.replace ","nowflat":"@ ","decomposemethodname":"translate Path ","nowapisequence":""}
{"methodannotation":"override BigInteger multiply in order to coerce if arg isfloat64 ","groudtruth":"java.math.BigInteger.doubleValue java.lang.Number.doubleValue java.math.BigInteger.multiply ","nowflat":"8 @ java.math.BigInteger.doubleValue java.lang.Number.doubleValue ","decomposemethodname":"multiply ","nowapisequence":"java.math.BigInteger.doubleValue java.lang.Number.doubleValue "}
{"methodannotation":"write a line into the CSV File ","groudtruth":"java.util.List.add java.util.List.add ","nowflat":"java.util.ArrayList<java.lang.String> Z 8 ","decomposemethodname":"write Line ","nowapisequence":"java.util.ArrayList<java.lang.String> "}
{"methodannotation":"generate ParseException ","groudtruth":"java.util.List.clear java.util.List.add java.util.List.size java.util.List.size java.util.List.get ","nowflat":"java.util.List.clear W W 8 7 8 7 8 8 7 8 W java.util.List.add ","decomposemethodname":"generate Parse Exception ","nowapisequence":"java.util.List.clear java.util.List.add "}
{"methodannotation":"add a plotter to the graph , which will be used to plot entries ","groudtruth":"java.util.Set.add ","nowflat":"","decomposemethodname":"add Plotter ","nowapisequence":""}
{"methodannotation":"remove a plotter from the graph ","groudtruth":"java.util.Set.remove ","nowflat":"","decomposemethodname":"remove Plotter ","nowapisequence":""}
{"methodannotation":"add a Graph object to BukkitMetrics that represents data for the plugin that should be sent to the backend ","groudtruth":"java.util.Set.add ","nowflat":"8 { ","decomposemethodname":"add Graph ","nowapisequence":""}
{"methodannotation":"this is called when the tree needs to be reloaded because of advanced button clicked ","groudtruth":"javax.swing.JTree.getSelectionPath javax.swing.JTree.getRowForPath javax.swing.JTree.getLastSelectedPathComponent javax.swing.tree.DefaultMutableTreeNode.getUserObject javax.swing.JTree.getModel javax.swing.JTree.updateUI javax.swing.JTree.getPathForRow javax.swing.tree.TreePath.getPathComponent javax.swing.tree.DefaultMutableTreeNode.getUserObject java.lang.String.equals javax.swing.JTree.setSelectionRow javax.swing.tree.DefaultMutableTreeNode.getChildCount javax.swing.tree.DefaultMutableTreeNode.getChildAt javax.swing.tree.DefaultMutableTreeNode.getUserObject java.lang.String.equals javax.swing.JTree.setSelectionRow javax.swing.JTree.setSelectionRow ","nowflat":"javax.swing.JTree.getSelectionPath javax.swing.JTree.getRowForPath javax.swing.JTree.getLastSelectedPathComponent 8 N javax.swing.tree.DefaultMutableTreeNode.getUserObject 8 N javax.swing.JTree.getModel 8 N javax.swing.JTree.updateUI javax.swing.JTree.getPathForRow javax.swing.tree.TreePath.getPathComponent 8 N javax.swing.tree.DefaultMutableTreeNode.getUserObject 8 N 8 java.lang.String.equals ","decomposemethodname":"reload ","nowapisequence":"javax.swing.JTree.getSelectionPath javax.swing.JTree.getRowForPath javax.swing.JTree.getLastSelectedPathComponent javax.swing.tree.DefaultMutableTreeNode.getUserObject javax.swing.JTree.getModel javax.swing.JTree.updateUI javax.swing.JTree.getPathForRow javax.swing.tree.TreePath.getPathComponent javax.swing.tree.DefaultMutableTreeNode.getUserObject java.lang.String.equals "}
{"methodannotation":"reports progress on System.out ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"start Processing ","nowapisequence":""}
{"methodannotation":"build a message for the given base message and root cause ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 java.lang.StringBuffer 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"build Message ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"returns a XML representation of the given argument ","groudtruth":"java.lang.System.getProperty java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.System.getProperty java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append 7 7 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"to XML ","nowapisequence":"java.lang.System.getProperty java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"return a list of objects from varargs ","groudtruth":"java.util.List.add ","nowflat":"8 @ 8 @ N ","decomposemethodname":"to List ","nowapisequence":""}
{"methodannotation":"get the absolute value ","groudtruth":"java.lang.Math.abs ","nowflat":"@ ","decomposemethodname":"abs ","nowapisequence":""}
{"methodannotation":"do execution of given command file ","groudtruth":"java.io.File.getAbsolutePath java.io.File.getParentFile java.lang.ProcessBuilder.directory java.lang.ProcessBuilder.redirectErrorStream java.lang.ProcessBuilder.start java.lang.Process.waitFor java.lang.Process.getInputStream ","nowflat":"java.io.File.getAbsolutePath java.lang.ProcessBuilder java.io.File.getParentFile java.lang.ProcessBuilder.directory java.lang.ProcessBuilder.redirectErrorStream ","decomposemethodname":"do Execute ","nowapisequence":"java.io.File.getAbsolutePath java.io.File.getParentFile java.lang.ProcessBuilder.directory java.lang.ProcessBuilder.redirectErrorStream "}
{"methodannotation":"register the FSNamesystem MBean using the name '' hadoop : service = NameNode , name = FSNamesystemState '' ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} java.lang.Object javax.management.StandardMBean ","decomposemethodname":"register MBean ","nowapisequence":""}
{"methodannotation":"returns the value of an option ","groudtruth":"java.lang.String.toLowerCase java.util.Map.get ","nowflat":"8 @ @ ","decomposemethodname":"value ","nowapisequence":""}
{"methodannotation":"collects only characters which do not satisfy Character isWhitespace ","groudtruth":"java.lang.Character.isWhitespace ","nowflat":"@ ","decomposemethodname":"is Token Char ","nowapisequence":""}
{"methodannotation":"creates an temp file in to the substitutor the substituted contents of input writes ; close it and open it as FileInputStream ","groudtruth":"java.io.File.createTempFile java.io.File.deleteOnExit java.io.FileOutputStream.close ","nowflat":"java.io.File.createTempFile java.io.File.deleteOnExit } java.io.FileOutputStream ","decomposemethodname":"substitute Variables ","nowapisequence":"java.io.File.createTempFile java.io.File.deleteOnExit "}
{"methodannotation":"resizes the bit array - try to avoid using this method !!! ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 W ","decomposemethodname":"resize ","nowapisequence":""}
{"methodannotation":"format elapsed time as -LSB- -LSB- h + -RSB- : -LSB- mm -RSB- -RSB- : ss ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"java.lang.StringBuilder 8 java.lang.StringBuilder.append 8 8 @ java.lang.StringBuilder.append java.lang.StringBuilder.append 8 java.lang.StringBuilder.append java.lang.StringBuilder.append ","decomposemethodname":"format Time ","nowapisequence":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append "}
{"methodannotation":"returns the minimum dimensions needed to lay out the components contained in the specified target container ","groudtruth":"java.awt.Container.countComponents java.awt.Container.getComponent java.awt.Component.isVisible java.awt.Component.minimumSize java.lang.Math.max java.awt.Container.insets ","nowflat":"java.awt.Dimension 7 java.awt.Container.countComponents java.awt.Container.getComponent 8 java.awt.Component.isVisible ","decomposemethodname":"minimum Layout Size ","nowapisequence":"java.awt.Container.countComponents java.awt.Container.getComponent java.awt.Component.isVisible "}
{"methodannotation":"lays out the components ","groudtruth":"java.awt.Component.getTreeLock java.awt.Container.getComponentCount java.awt.Container.getInsets java.awt.Component.getSize java.awt.Container.getComponent java.awt.Component.getPreferredSize java.lang.Math.max java.lang.Math.max java.awt.Component.setBounds ","nowflat":"_ java.awt.Component.getTreeLock 8 java.awt.Container.getComponentCount java.awt.Container.getInsets java.awt.Component.getSize ","decomposemethodname":"layout Container ","nowapisequence":"java.awt.Component.getTreeLock java.awt.Container.getComponentCount java.awt.Container.getInsets java.awt.Component.getSize "}
{"methodannotation":"returns whether the element is a leaf element ","groudtruth":"java.util.Vector.isEmpty ","nowflat":"@ ","decomposemethodname":"is Leaf ","nowapisequence":""}
{"methodannotation":"update the current selected install group index ","groudtruth":"javax.swing.event.ListSelectionEvent.getValueIsAdjusting java.util.EventObject.getSource javax.swing.ListSelectionModel.isSelectionEmpty javax.swing.JEditorPane.setText javax.swing.ListSelectionModel.getMinSelectionIndex javax.swing.JEditorPane.setText javax.swing.AbstractButton.setSelected ","nowflat":"8 javax.swing.event.ListSelectionEvent.getValueIsAdjusting N java.util.EventObject.getSource 8 javax.swing.ListSelectionModel.isSelectionEmpty ","decomposemethodname":"value Changed ","nowapisequence":"javax.swing.event.ListSelectionEvent.getValueIsAdjusting java.util.EventObject.getSource javax.swing.ListSelectionModel.isSelectionEmpty "}
{"methodannotation":"performs the clone operation ","groudtruth":"java.lang.Object.getClass java.lang.Class.isAssignableFrom java.lang.Object.clone java.lang.Object.getClass java.lang.Class.isAssignableFrom java.lang.Object.clone java.lang.Class.getMethod java.lang.Object.getClass java.lang.reflect.AccessibleObject.setAccessible java.lang.reflect.Method.invoke java.lang.reflect.InvocationTargetException.getTargetException ","nowflat":"8 8 @ java.lang.Object.getClass 8 java.lang.Class.isAssignableFrom } @ java.lang.Object.clone O { java.lang.IllegalStateException 8 java.lang.Object.getClass java.lang.Class.isAssignableFrom } @ java.lang.Object.clone O { ","decomposemethodname":"perform ","nowapisequence":"java.lang.Object.getClass java.lang.Class.isAssignableFrom java.lang.Object.clone java.lang.Object.getClass java.lang.Class.isAssignableFrom java.lang.Object.clone "}
{"methodannotation":"return the value of the named attribute ","groudtruth":"org.w3c.dom.Element.hasAttribute org.w3c.dom.Element.getAttribute ","nowflat":"@ S ","decomposemethodname":"attribute ","nowapisequence":""}
{"methodannotation":"generate C++ code ","groudtruth":"java.io.File.getAbsolutePath java.io.File.getName java.io.File.getName java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.OutputStreamWriter.close java.io.OutputStreamWriter.close ","nowflat":"java.io.File.getAbsolutePath java.io.File.getName java.io.File java.io.FileWriter } java.io.FileWriter } java.io.File.getName java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write ","decomposemethodname":"gen Code ","nowapisequence":"java.io.File.getAbsolutePath java.io.File.getName java.io.File.getName java.io.Writer.write java.io.Writer.write java.io.Writer.write java.io.Writer.write "}
{"methodannotation":"this method determines whether the chosen dir is writeable or not ","groudtruth":"java.io.File.createTempFile java.io.File.deleteOnExit java.lang.Throwable.toString java.io.File.canWrite ","nowflat":"java.io.File 8 @ 8 } java.io.File.createTempFile java.io.File.deleteOnExit ","decomposemethodname":"is Writeable ","nowapisequence":"java.io.File.createTempFile java.io.File.deleteOnExit "}
{"methodannotation":"add listeners to the class 's GUI components ","groudtruth":"javax.swing.JList.addListSelectionListener javax.swing.JComboBox.addActionListener javax.swing.AbstractButton.addItemListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener ","nowflat":"java.lang.Object javax.swing.JList.addListSelectionListener java.lang.Object javax.swing.JComboBox.addActionListener java.lang.Object javax.swing.AbstractButton.addItemListener java.lang.Object javax.swing.AbstractButton.addActionListener java.lang.Object javax.swing.AbstractButton.addActionListener java.lang.Object javax.swing.AbstractButton.addActionListener java.lang.Object ","decomposemethodname":"add Listeners ","nowapisequence":"javax.swing.JList.addListSelectionListener javax.swing.JComboBox.addActionListener javax.swing.AbstractButton.addItemListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener "}
{"methodannotation":"document ME ","groudtruth":"java.util.HashSet.iterator java.util.Iterator.hasNext javax.swing.event.ChangeListener.stateChanged ","nowflat":"_ java.util.HashSet.iterator java.util.HashSet javax.swing.event.ChangeEvent ","decomposemethodname":"fire Change Event ","nowapisequence":"java.util.HashSet.iterator "}
{"methodannotation":"layout helper method : ","groudtruth":"java.awt.GridBagLayout.addLayoutComponent ","nowflat":"8 ","decomposemethodname":"create Label ","nowapisequence":""}
{"methodannotation":"print error message ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"print Error ","nowapisequence":""}
{"methodannotation":"called by OSGi DS to activate the service after the router provider has been bound ","groudtruth":"java.util.Dictionary.get ","nowflat":"N ","decomposemethodname":"activate ","nowapisequence":""}
{"methodannotation":"prints a float in accordance with the supplied PrintfFormat object ","groudtruth":"java.io.PrintStream.print ","nowflat":"","decomposemethodname":"printf ","nowapisequence":""}
{"methodannotation":"runs the wizard in a dialog ","groudtruth":"java.lang.Math.max ","nowflat":"8 ","decomposemethodname":"run Wizard ","nowapisequence":""}
{"methodannotation":"description of the Method ","groudtruth":"javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground javax.swing.JComponent.setOpaque java.awt.Container.setLayout javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setMargin javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setMargin javax.swing.AbstractButton.addActionListener javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.Component.addMouseListener javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.Component.addMouseListener java.awt.Container.setLayout javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.BorderFactory.createLineBorder javax.swing.JComponent.setBorder javax.swing.JComponent.setBackground javax.swing.BorderFactory.createLoweredBevelBorder javax.swing.JComponent.setBorder java.awt.Container.setLayout javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JTextField.setFont javax.swing.JComponent.setToolTipText javax.swing.text.JTextComponent.setDisabledTextColor java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setText javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.setMargin javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setFont javax.swing.JComponent.setBackground javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.addActionListener java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add javax.swing.JScrollPane.getViewport java.awt.Container.add javax.swing.JTabbedPane.addTab javax.swing.JTabbedPane.addTab ","nowflat":"java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground javax.swing.JComponent.setOpaque java.awt.Container.setLayout java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font java.awt.Font java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setBorder java.awt.Dimension javax.swing.JComponent.setMaximumSize java.awt.Dimension javax.swing.JComponent.setMinimumSize java.awt.Dimension javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon java.awt.Insets javax.swing.AbstractButton.setMargin java.lang.Object javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setBorder java.awt.Dimension javax.swing.JComponent.setMaximumSize java.awt.Dimension javax.swing.JComponent.setMinimumSize java.awt.Dimension javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon java.awt.Insets javax.swing.AbstractButton.setMargin java.lang.Object javax.swing.AbstractButton.addActionListener java.awt.Font javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.event.MouseAdapter java.awt.Component.addMouseListener java.awt.Font javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.event.MouseAdapter java.awt.Component.addMouseListener java.awt.Container.setLayout javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont javax.swing.BorderFactory.createLineBorder javax.swing.JComponent.setBorder javax.swing.JComponent.setBackground javax.swing.BorderFactory.createLoweredBevelBorder javax.swing.JComponent.setBorder java.awt.Container.setLayout javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText java.awt.Font javax.swing.JTextField.setFont javax.swing.JComponent.setToolTipText javax.swing.text.JTextComponent.setDisabledTextColor java.awt.event.MouseAdapter java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setText java.lang.Object javax.swing.AbstractButton.addActionListener java.lang.Object javax.swing.AbstractButton.addActionListener java.awt.Insets javax.swing.AbstractButton.setMargin javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon java.awt.Dimension javax.swing.JComponent.setPreferredSize java.awt.Dimension javax.swing.JComponent.setMinimumSize java.awt.Dimension javax.swing.JComponent.setMaximumSize java.awt.Font javax.swing.JComponent.setFont javax.swing.JComponent.setBackground java.awt.Font javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor java.awt.event.MouseAdapter java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground java.awt.Font javax.swing.JComponent.setFont java.awt.Dimension javax.swing.JComponent.setMaximumSize java.awt.Dimension javax.swing.JComponent.setMinimumSize java.awt.Dimension javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon java.lang.Object javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBorder java.awt.Dimension javax.swing.JComponent.setMaximumSize java.awt.Dimension javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon java.lang.Object javax.swing.AbstractButton.addActionListener java.awt.Font java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add java.awt.Insets java.awt.GridBagConstraints java.awt.Container.add ","decomposemethodname":"jb Init ","nowapisequence":"javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground javax.swing.JComponent.setOpaque java.awt.Container.setLayout javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setMargin javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setMargin javax.swing.AbstractButton.addActionListener javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.Component.addMouseListener javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor javax.swing.JComponent.setEnabled java.awt.Component.addMouseListener java.awt.Container.setLayout javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.BorderFactory.createLineBorder javax.swing.JComponent.setBorder javax.swing.JComponent.setBackground javax.swing.BorderFactory.createLoweredBevelBorder javax.swing.JComponent.setBorder java.awt.Container.setLayout javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JComponent.setFont javax.swing.JComponent.setToolTipText javax.swing.JLabel.setText javax.swing.JTextField.setFont javax.swing.JComponent.setToolTipText javax.swing.text.JTextComponent.setDisabledTextColor java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.setText javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.addActionListener javax.swing.AbstractButton.setMargin javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setFont javax.swing.JComponent.setBackground javax.swing.JTextField.setFont javax.swing.text.JTextComponent.setDisabledTextColor java.awt.Component.addMouseListener javax.swing.JComponent.setEnabled javax.swing.JComponent.setBackground javax.swing.JComponent.setFont javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setPreferredSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.addActionListener javax.swing.JComponent.setBorder javax.swing.JComponent.setMaximumSize javax.swing.JComponent.setMinimumSize javax.swing.JComponent.setToolTipText javax.swing.AbstractButton.setIcon javax.swing.AbstractButton.addActionListener java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add java.awt.Container.add "}
{"methodannotation":"give a line saying that something is '' done '' ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"done ","nowapisequence":""}
{"methodannotation":"this code is from http://www.rgagnon.com/javadetails/java-0306.html ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.String.length 7 java.lang.String.charAt = java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M java.lang.StringBuffer.append M ","decomposemethodname":"escape HTML ","nowapisequence":"java.lang.String.length java.lang.String.charAt java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"returns true if the specified object is registered with the dataset as a listener ","groudtruth":"javax.swing.event.EventListenerList.getListenerList java.util.Arrays.asList java.util.List.contains ","nowflat":"javax.swing.event.EventListenerList.getListenerList java.util.Arrays.asList ","decomposemethodname":"has Listener ","nowapisequence":"javax.swing.event.EventListenerList.getListenerList java.util.Arrays.asList "}
{"methodannotation":"make a JSON text of an Object value ","groudtruth":"java.lang.Object.equals java.lang.Object.toString java.lang.Class.isArray java.lang.Object.getClass java.lang.Enum.name java.lang.Object.toString ","nowflat":"8 java.lang.Object.equals @ 8 } O { 8 @ { 8 8 @ @ 8 @ java.lang.Object.toString 8 N ","decomposemethodname":"value To String ","nowapisequence":"java.lang.Object.equals java.lang.Object.toString "}
{"methodannotation":"returns a string representation of a date conforming to the following database format : ' YYYY-MM-DD hh : mm : ss ' ","groudtruth":"java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get ","nowflat":"java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get ","decomposemethodname":"date To String ","nowapisequence":"java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get java.util.Calendar.get "}
{"methodannotation":"arranges the blocks without any constraints ","groudtruth":"java.util.List.size java.util.List.size java.util.List.size java.util.List.get java.lang.Math.max java.awt.geom.Rectangle2D.Double java.util.List.size ","nowflat":"java.util.List.size 8 W W java.util.List.size 7 java.util.List.size N java.util.List.get java.lang.Math.max ","decomposemethodname":"arrange NN ","nowapisequence":"java.util.List.size java.util.List.size java.util.List.size java.util.List.get java.lang.Math.max "}
{"methodannotation":"creates the array of items that can be passed to the MessageFormat class for creating labels ","groudtruth":"java.text.Format.format java.text.Format.format java.lang.Number.doubleValue java.text.NumberFormat.format ","nowflat":"W W W 8 8 java.text.Format.format 8 ","decomposemethodname":"create Item Array ","nowapisequence":"java.text.Format.format "}
{"methodannotation":"handles a ' click ' on the plot ","groudtruth":"java.awt.geom.Rectangle2D.contains java.util.List.size java.util.List.get ","nowflat":"8 java.awt.geom.Rectangle2D.contains 7 ","decomposemethodname":"handle Click ","nowapisequence":"java.awt.geom.Rectangle2D.contains "}
{"methodannotation":"draws the visual representation of a single data item ","groudtruth":"java.lang.Double.isNaN java.lang.Double.isNaN java.lang.Math.abs java.lang.Math.min java.lang.Math.min java.lang.Math.abs java.awt.geom.Rectangle2D.Double java.lang.Math.min java.lang.Math.abs java.lang.Math.min java.awt.geom.Rectangle2D.Double java.awt.geom.RectangularShape.getCenterX java.awt.geom.RectangularShape.getCenterY ","nowflat":"N 8 8 java.lang.Double.isNaN java.lang.Double.isNaN @ 8 8 java.lang.Math.abs 8 java.lang.Math.min java.lang.Math.min java.lang.Math.abs java.awt.geom.Rectangle2D.Double 8 java.lang.Math.min java.lang.Math.abs ","decomposemethodname":"draw Item ","nowapisequence":"java.lang.Double.isNaN java.lang.Double.isNaN java.lang.Math.abs java.lang.Math.min java.lang.Math.min java.lang.Math.abs java.awt.geom.Rectangle2D.Double java.lang.Math.min java.lang.Math.abs "}
{"methodannotation":"creates a shadow for the bar ","groudtruth":"java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getMaxX java.awt.geom.RectangularShape.getMinY java.awt.geom.RectangularShape.getMaxY java.awt.geom.Rectangle2D.Double ","nowflat":"java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getMaxX java.awt.geom.RectangularShape.getMinY java.awt.geom.RectangularShape.getMaxY 8 8 8 8 ","decomposemethodname":"create Shadow ","nowapisequence":"java.awt.geom.RectangularShape.getMinX java.awt.geom.RectangularShape.getMaxX java.awt.geom.RectangularShape.getMinY java.awt.geom.RectangularShape.getMaxY "}
{"methodannotation":"removes a series from the collection ","groudtruth":"java.util.List.contains java.util.List.remove ","nowflat":"8 { java.lang.IllegalArgumentException ","decomposemethodname":"remove Series ","nowapisequence":""}
{"methodannotation":"removes all the series from the collection and sends a DatasetChangeEvent to all registered listeners ","groudtruth":"java.util.List.size java.util.List.get java.util.List.clear ","nowflat":"7 java.util.List.size N ","decomposemethodname":"remove All Series ","nowapisequence":"java.util.List.size "}
{"methodannotation":"service a request to blojsom ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.lang.String.equals java.util.Map.get java.util.Map.get java.util.Map.get java.lang.String.equals java.util.Map.containsKey java.util.Map.get java.lang.Boolean.getBoolean java.lang.Long.longValue java.lang.Long.longValue java.util.Date.getTime java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.HashMap.put java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get java.util.Map.get ","nowflat":"} O 8 java.lang.StringBuffer java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString @ 8 java.lang.String.equals 8 8 8 @ N 8 8 java.util.HashMap W W } O W 8 W N W java.util.Map.get 8 N W java.util.Map.get N W java.util.Map.get 8 java.lang.String.equals 7 8 java.util.Map.containsKey N java.util.Map.get } O 8 ","decomposemethodname":"service ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.lang.String.equals java.util.Map.get java.util.Map.get java.util.Map.get java.lang.String.equals java.util.Map.containsKey java.util.Map.get "}
{"methodannotation":"please refer to ProductData readFrom ","groudtruth":"javax.imageio.stream.ImageInputStream.readFully ","nowflat":"","decomposemethodname":"read From ","nowapisequence":""}
{"methodannotation":"convenience method that checks whether this member has been statically defined in queues.conf ","groudtruth":"java.lang.String.equals ","nowflat":"@ ","decomposemethodname":"is Static ","nowapisequence":""}
{"methodannotation":"returns whether the LHS is '' LIKE '' the RHS ","groudtruth":"java.lang.Object.toString java.lang.String.toLowerCase java.lang.String.valueOf ","nowflat":"8 @ 8 8 @ @ 8 8 @ ","decomposemethodname":"is True ","nowapisequence":""}
{"methodannotation":"returns this buffer 's limit ","groudtruth":"java.nio.Buffer.limit ","nowflat":"@ ","decomposemethodname":"limit ","nowapisequence":""}
{"methodannotation":"addd a resource file in the list , and check if the file is inside the project path or not ","groudtruth":"java.io.File.getCanonicalPath java.lang.String.startsWith java.util.Set.add java.util.Set.add java.lang.Throwable.getMessage ","nowflat":"} java.io.File.getCanonicalPath java.io.File 8 java.lang.String.startsWith ","decomposemethodname":"add Resource ","nowapisequence":"java.io.File.getCanonicalPath java.lang.String.startsWith "}
{"methodannotation":"tell about progress ","groudtruth":"java.lang.Integer.toString java.lang.String.length java.io.PrintStream.print java.io.PrintStream.print ","nowflat":"N N java.lang.Integer.toString java.lang.String.length ","decomposemethodname":"progress ","nowapisequence":"java.lang.Integer.toString java.lang.String.length "}
{"methodannotation":"performs any actions appropriate in response to the user having pressed the Finish button , or refuse if finishing now is not permitted ","groudtruth":"java.io.File.createTempFile java.io.File.delete java.io.File.mkdirs java.io.File.isDirectory java.lang.Throwable.printStackTrace java.io.File.getAbsolutePath java.io.FileOutputStream.close java.lang.Throwable.printStackTrace java.io.File.getAbsolutePath java.util.List.add ","nowflat":"8 8 N 8 @ 8 @ } java.io.File.createTempFile java.io.File.delete java.io.File.mkdirs 8 java.io.File.isDirectory @ O java.lang.Throwable.printStackTrace @ java.lang.Object java.io.File.getAbsolutePath ","decomposemethodname":"perform Finish ","nowapisequence":"java.io.File.createTempFile java.io.File.delete java.io.File.mkdirs java.io.File.isDirectory java.lang.Throwable.printStackTrace java.io.File.getAbsolutePath "}
{"methodannotation":"add a Method to be used as a Function at Compilation ","groudtruth":"java.util.Map.put ","nowflat":"","decomposemethodname":"add Function ","nowapisequence":""}
{"methodannotation":"call went ok , handle result ","groudtruth":"java.lang.Object.toString ","nowflat":"","decomposemethodname":"handle Result ","nowapisequence":""}
{"methodannotation":"restore the state of this component ","groudtruth":"java.lang.Boolean.booleanValue java.lang.Boolean.booleanValue java.lang.Boolean.booleanValue java.lang.Boolean.booleanValue java.lang.Boolean.booleanValue java.lang.Boolean.booleanValue ","nowflat":"W N W N N java.lang.Boolean.booleanValue ","decomposemethodname":"restore State ","nowapisequence":"java.lang.Boolean.booleanValue "}
{"methodannotation":"converts a JSON InputStream into a SyncMap object using the provided ObjectMapper ","groudtruth":"java.lang.Throwable.getMessage ","nowflat":"} @ O { ","decomposemethodname":"from Json ","nowapisequence":""}
{"methodannotation":"get a copy of the bytes that is exactly the length of the data ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W W W ","decomposemethodname":"copy Bytes ","nowapisequence":""}
{"methodannotation":"create a default message ","groudtruth":"java.util.Properties.getProperty java.util.Properties.getProperty java.lang.Class.getResource java.lang.Object.getClass java.net.URL.openStream java.lang.Throwable.printStackTrace java.util.Properties.getProperty java.io.PrintStream.println java.lang.Class.forName java.lang.Throwable.printStackTrace ","nowflat":"8 8 java.util.Properties.getProperty java.util.Properties.getProperty java.lang.Class.getResource java.lang.Object.getClass } 8 java.net.URL.openStream O 8 } java.io.FileInputStream O java.lang.Throwable.printStackTrace ","decomposemethodname":"create Message ","nowapisequence":"java.util.Properties.getProperty java.util.Properties.getProperty java.lang.Class.getResource java.lang.Object.getClass java.net.URL.openStream java.lang.Throwable.printStackTrace "}
{"methodannotation":"gets the User-Agent header for the client ","groudtruth":"java.lang.String.format ","nowflat":"@ ","decomposemethodname":"user Agent ","nowapisequence":""}
{"methodannotation":"checks if this predicate holds for the given object ","groudtruth":"java.util.Objects.equals ","nowflat":"8 @ ","decomposemethodname":"test ","nowapisequence":""}
{"methodannotation":"add option - sample to the ImageMagick commandline ","groudtruth":"java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.Integer.doubleValue java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.length java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.Integer.toString java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.Integer.toString java.lang.StringBuffer.append 8 8 java.lang.Integer.doubleValue ","decomposemethodname":"sample ","nowapisequence":"java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.Integer.doubleValue "}
{"methodannotation":"indicate when the call is complete and the value or error are available ","groudtruth":"java.lang.Object.notify ","nowflat":"","decomposemethodname":"call Complete ","nowapisequence":""}
{"methodannotation":"get all valid locations of the block & add the block to results return the length of the added block ; 0 if the block is not added ","groudtruth":"java.util.ArrayList.add java.util.ArrayList.size java.util.ArrayList.toArray ","nowflat":"java.util.ArrayList<java.lang.String> 7 8 java.util.ArrayList.add 8 java.util.ArrayList.size ","decomposemethodname":"add Block ","nowapisequence":"java.util.ArrayList<java.lang.String> java.util.ArrayList.add java.util.ArrayList.size "}
{"methodannotation":"localize the specified message ","groudtruth":"java.util.ResourceBundle.getString java.util.ResourceBundle.getBundle ","nowflat":"8 } java.util.ResourceBundle.getString ","decomposemethodname":"localize ","nowapisequence":"java.util.ResourceBundle.getString "}
{"methodannotation":"add a value to the aggregator ","groudtruth":"java.lang.Object.toString java.lang.Long.parseLong ","nowflat":"java.lang.Object.toString ","decomposemethodname":"add Next Value ","nowapisequence":"java.lang.Object.toString "}
{"methodannotation":"return true if there are any errors ","groudtruth":"java.util.List.isEmpty ","nowflat":"@ ","decomposemethodname":"has Errors ","nowapisequence":""}
{"methodannotation":"returns when the current number of seconds from the epoch equals the command line argument given by - startTime ","groudtruth":"java.lang.System.currentTimeMillis java.lang.Thread.sleep ","nowflat":"` java.lang.System.currentTimeMillis } ","decomposemethodname":"barrier ","nowapisequence":"java.lang.System.currentTimeMillis "}
{"methodannotation":"display usage ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"display Usage ","nowapisequence":""}
{"methodannotation":"do file open ","groudtruth":"java.lang.System.currentTimeMillis java.lang.System.currentTimeMillis ","nowflat":"java.lang.System.currentTimeMillis ","decomposemethodname":"execute Op ","nowapisequence":"java.lang.System.currentTimeMillis "}
{"methodannotation":"returns whether the given method will be supported with the given environment ","groudtruth":"java.lang.String.equals java.lang.String.indexOf java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals ","nowflat":"8 java.lang.String.equals 8 @ 8 8 java.lang.String.indexOf java.lang.String.toLowerCase java.lang.System.getProperty @ @ 8 java.lang.String.equals 8 @ 8 ","decomposemethodname":"supported ","nowapisequence":"java.lang.String.equals java.lang.String.indexOf java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.equals "}
{"methodannotation":"sets each component of the tuple parameter to its absolute value and places the modified values into this tuple ","groudtruth":"java.lang.Math.abs java.lang.Math.abs java.lang.Math.abs java.lang.Math.abs ","nowflat":"java.lang.Math.abs java.lang.Math.abs ","decomposemethodname":"absolute ","nowapisequence":"java.lang.Math.abs java.lang.Math.abs "}
{"methodannotation":"transform a Number into a Long ","groudtruth":"java.lang.Number.longValue java.lang.Long.valueOf ","nowflat":"@ ","decomposemethodname":"to Long ","nowapisequence":""}
{"methodannotation":"execute an interation ","groudtruth":"java.sql.PreparedStatement.setInt java.lang.Object.toString java.sql.PreparedStatement.executeUpdate java.lang.Throwable.printStackTrace java.lang.Throwable.toString ","nowflat":"} 7 8 java.sql.PreparedStatement.setInt 8 java.lang.Object.toString java.sql.PreparedStatement.executeUpdate ","decomposemethodname":"iterate ","nowapisequence":"java.sql.PreparedStatement.setInt java.lang.Object.toString java.sql.PreparedStatement.executeUpdate "}
{"methodannotation":"stop the COM Thread ","groudtruth":"java.util.concurrent.Future.get java.util.concurrent.ExecutorService.submit java.util.concurrent.ExecutorService.shutdown java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace java.util.concurrent.ExecutorService.shutdownNow ","nowflat":"} java.util.concurrent.Future.get java.lang.Object java.util.concurrent.ExecutorService.submit java.util.concurrent.ExecutorService.shutdown O ","decomposemethodname":"terminate ","nowapisequence":"java.util.concurrent.Future.get java.util.concurrent.ExecutorService.submit java.util.concurrent.ExecutorService.shutdown "}
{"methodannotation":"returns a double value for the specified number ","groudtruth":"java.lang.Number.doubleValue ","nowflat":"@ ","decomposemethodname":"double Value ","nowapisequence":""}
{"methodannotation":"draws as much of the specified image as has already been scaled to fit inside the specified rectangle ","groudtruth":"java.awt.Graphics.drawImage ","nowflat":"@ ","decomposemethodname":"draw Image ","nowapisequence":""}
{"methodannotation":"description of the Method ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","nowflat":"8 java.lang.StringBuffer 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 java.lang.StringBuffer.append 8 8 java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"create Filter ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"returns the current thread 's ThreadLocalRandom ","groudtruth":"java.lang.ThreadLocal.get ","nowflat":"@ ","decomposemethodname":"current ","nowapisequence":""}
{"methodannotation":"builds the GUI ","groudtruth":"javax.swing.JDialog.getGlassPane java.awt.Component.addMouseListener java.awt.Component.addMouseMotionListener java.awt.Component.addKeyListener javax.swing.JDialog.getContentPane java.awt.Container.setLayout java.awt.GridBagLayout.addLayoutComponent java.awt.Container.add javax.swing.text.JTextComponent.setEditable javax.swing.JComponent.setPreferredSize java.awt.GridBagLayout.addLayoutComponent java.awt.Container.add javax.swing.JScrollPane.getVerticalScrollBar javax.swing.AbstractButton.addActionListener java.awt.GridBagLayout.addLayoutComponent java.awt.Container.add ","nowflat":"N javax.swing.JDialog.getGlassPane java.awt.event.MouseAdapter java.awt.Component.addMouseListener java.awt.event.MouseMotionAdapter java.awt.Component.addMouseMotionListener java.awt.event.KeyAdapter java.awt.Component.addKeyListener java.awt.GridBagLayout java.awt.GridBagConstraints java.awt.Insets N javax.swing.JDialog.getContentPane java.awt.Container.setLayout javax.swing.JLabel java.awt.GridBagLayout.addLayoutComponent ","decomposemethodname":"build GUI ","nowapisequence":"javax.swing.JDialog.getGlassPane java.awt.Component.addMouseListener java.awt.Component.addMouseMotionListener java.awt.Component.addKeyListener javax.swing.JDialog.getContentPane java.awt.Container.setLayout java.awt.GridBagLayout.addLayoutComponent "}
{"methodannotation":"add option - view to the GraphicsMagick commandline ","groudtruth":"java.lang.StringBuffer.length java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.StringBuffer.length ","decomposemethodname":"view ","nowapisequence":"java.lang.StringBuffer.length "}
{"methodannotation":"returns the cumulative distribution function ","groudtruth":"java.lang.Math.exp java.lang.Math.pow java.lang.Math.pow ","nowflat":"8 @ @ ","decomposemethodname":"pdf ","nowapisequence":""}
{"methodannotation":"returns a random number from the distribution ; bypasses the internal state ","groudtruth":"java.lang.Math.log java.lang.Math.log java.lang.Math.exp java.lang.Math.log java.lang.Math.log ","nowflat":"8 8 java.lang.Math.log java.lang.Math.log 8 ` N @ 8 @ java.lang.Math.exp ","decomposemethodname":"next Double ","nowapisequence":"java.lang.Math.log java.lang.Math.log java.lang.Math.exp "}
{"methodannotation":"copy the given Enumeration into a String array ","groudtruth":"java.util.Collections.list java.util.List.toArray ","nowflat":"W 8 @ ","decomposemethodname":"to String Array ","nowapisequence":""}
{"methodannotation":"return a String representation of the contents of the specified array ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.toString ","nowflat":"W 8 @ 8 @ java.lang.StringBuilder 7 8 ","decomposemethodname":"null Safe To String ","nowapisequence":""}
{"methodannotation":"returns the next node in the selection order ","groudtruth":"org.w3c.dom.Node.getNextSibling ","nowflat":"@ ","decomposemethodname":"next Node ","nowapisequence":""}
{"methodannotation":"adds the value to all contained TupleSets that return a true value for TupleSet isAddColumnSupported ","groudtruth":"java.util.Set.iterator java.util.Map.entrySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.Entry.getValue java.util.logging.Logger.fine ","nowflat":"java.util.Set.iterator java.util.Map.entrySet ` java.util.Iterator.hasNext N java.util.Iterator.next ","decomposemethodname":"add Column ","nowapisequence":"java.util.Set.iterator java.util.Map.entrySet java.util.Iterator.hasNext java.util.Iterator.next "}
{"methodannotation":"this method returns an OS and OS flavor specific instance of the requested class ","groudtruth":"java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.length java.lang.String.substring java.lang.Class.forName java.lang.Class.newInstance java.lang.Class.forName java.lang.Class.newInstance java.lang.Class.forName java.lang.Class.newInstance ","nowflat":"java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.length java.lang.String.substring } java.lang.Class.forName @ java.lang.Class.newInstance O } java.lang.Class.forName @ ","decomposemethodname":"make Object ","nowapisequence":"java.lang.String.lastIndexOf java.lang.String.substring java.lang.String.length java.lang.String.substring java.lang.Class.forName java.lang.Class.newInstance java.lang.Class.forName "}
{"methodannotation":"add option - chop to the ImageMagick commandline ","groudtruth":"java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.Integer.doubleValue java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.Integer.doubleValue java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.length java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.Integer.toString java.lang.StringBuffer.append 8 java.lang.Integer.doubleValue java.lang.StringBuffer.append 8 java.lang.Integer.toString java.lang.StringBuffer.append ","decomposemethodname":"chop ","nowapisequence":"java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append java.lang.Integer.doubleValue java.lang.StringBuffer.append java.lang.Integer.toString java.lang.StringBuffer.append "}
{"methodannotation":"transforms the specified coordinates and stores the result in ptDst ","groudtruth":"java.awt.geom.Point2D.setLocation java.awt.geom.Point2D.Double ","nowflat":"8 S 8 java.awt.geom.Point2D.setLocation ","decomposemethodname":"transform Normalized ","nowapisequence":"java.awt.geom.Point2D.setLocation "}
{"methodannotation":"transforms the specified coordinates and stores the result in ptDst ","groudtruth":"java.awt.geom.Point2D.Double java.awt.geom.Point2D.setLocation ","nowflat":"8 java.awt.geom.Point2D.Double ","decomposemethodname":"inverse Transform Normalized ","nowapisequence":"java.awt.geom.Point2D.Double "}
{"methodannotation":"checks if the String contains only unicode digits ","groudtruth":"java.lang.String.length java.lang.String.charAt java.lang.Character.isDigit ","nowflat":"8 @ java.lang.String.length 7 8 ","decomposemethodname":"is Numeric ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"computes charge at given pH ","groudtruth":"java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.get java.lang.Double.doubleValue java.lang.Integer.intValue java.lang.Math.pow java.lang.Math.pow java.util.Map.get java.lang.Double.doubleValue java.lang.Math.pow java.util.Map.get java.lang.Double.doubleValue java.lang.Math.pow ","nowflat":"java.util.Set.iterator java.util.Map.keySet ` java.util.Iterator.hasNext N java.util.Iterator.next N java.util.Map.get 8 java.lang.Double.doubleValue java.lang.Integer.intValue 8 java.lang.Math.pow java.lang.Math.pow 8 N ","decomposemethodname":"compute ","nowapisequence":"java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.get java.lang.Double.doubleValue java.lang.Integer.intValue java.lang.Math.pow java.lang.Math.pow "}
{"methodannotation":"creates and returns an instance of the class defined by '' classNameProperty '' in the properties file ","groudtruth":"java.util.Properties.getProperty java.lang.Class.forName java.lang.Class.forName java.lang.Class.newInstance java.lang.Class.isInstance ","nowflat":"} java.util.Properties.getProperty java.lang.Class.forName java.lang.Class.forName java.lang.Class.newInstance O { O { ","decomposemethodname":"create Object ","nowapisequence":"java.util.Properties.getProperty java.lang.Class.forName java.lang.Class.forName java.lang.Class.newInstance "}
{"methodannotation":"removes the specified component from the layout ","groudtruth":"java.awt.GridBagLayout.removeLayoutComponent ","nowflat":"","decomposemethodname":"remove Layout Component ","nowapisequence":""}
{"methodannotation":"installs the default colors , border , and painter of the task pane container ","groudtruth":"javax.swing.LookAndFeel.installColors javax.swing.LookAndFeel.installBorder javax.swing.LookAndFeel.installProperty ","nowflat":"javax.swing.LookAndFeel.installColors ","decomposemethodname":"install Defaults ","nowapisequence":"javax.swing.LookAndFeel.installColors "}
{"methodannotation":"next job starts ","groudtruth":"javax.swing.JLabel.setText javax.swing.JProgressBar.setValue javax.swing.JProgressBar.setString ","nowflat":"javax.swing.JLabel.setText ","decomposemethodname":"start Process ","nowapisequence":"javax.swing.JLabel.setText "}
{"methodannotation":"method to support listener events ","groudtruth":"java.util.Vector.size java.util.Vector.elementAt javax.swing.event.ChangeListener.stateChanged ","nowflat":"8 @ java.util.Vector.size 7 ","decomposemethodname":"fire State Changed ","nowapisequence":"java.util.Vector.size "}
{"methodannotation":"invoked when a component gains the keyboard focus ","groudtruth":"java.util.EventObject.getSource ","nowflat":"N ","decomposemethodname":"focus Gained ","nowapisequence":""}
{"methodannotation":"transform this node into its human readable representation ","groudtruth":"java.lang.StringBuilder.append java.lang.StringBuilder.append java.lang.StringBuilder.append ","nowflat":"java.lang.StringBuilder.append ","decomposemethodname":"to String Builder ","nowapisequence":"java.lang.StringBuilder.append "}
{"methodannotation":"retrieves an Issuing Transaction object ","groudtruth":"java.lang.String.format java.lang.String.format ","nowflat":"java.lang.String.format ","decomposemethodname":"retrieve ","nowapisequence":"java.lang.String.format "}
{"methodannotation":"format the message to display ","groudtruth":"java.lang.String.length java.lang.String.substring ","nowflat":"S java.lang.String.length ","decomposemethodname":"format Message ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"method called at end of Tag ","groudtruth":"java.lang.Object.toString java.text.SimpleDateFormat.toPattern java.text.DateFormat.setTimeZone java.text.DateFormat.format ","nowflat":"8 8 8 java.lang.Object.toString 8 java.text.SimpleDateFormat java.text.SimpleDateFormat.toPattern 8 N 8 { 8 N 8 { java.text.SimpleDateFormat 8 java.text.SimpleDateFormat ","decomposemethodname":"do End Tag ","nowapisequence":"java.lang.Object.toString java.text.SimpleDateFormat.toPattern "}
{"methodannotation":"converts rdata to a String ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer java.lang.StringBuffer.append 8 java.lang.StringBuffer.append java.lang.StringBuffer.append 8 ","decomposemethodname":"rr To String ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"sets the constraints for the specified component in this layout ","groudtruth":"java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.add java.util.Vector.add java.util.Vector.add java.util.Vector.add java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.add java.util.Vector.add java.util.Vector.size java.util.Vector.size java.util.Vector.add ","nowflat":"8 @ } N N O @ 8 8 8 ` java.util.Vector.size java.util.Vector.size java.util.Vector.add ` java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.add java.util.Vector.add 8 ","decomposemethodname":"add Layout Component ","nowapisequence":"java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.size java.util.Vector.size java.util.Vector.add java.util.Vector.add java.util.Vector.add "}
{"methodannotation":"makes a new post to a designated blog ","groudtruth":"java.io.File.exists java.io.File.isDirectory java.io.File.getAbsolutePath java.util.Map.put java.util.Map.put java.lang.Long.toString java.util.Date.getTime java.util.Map.put ","nowflat":"8 8 java.io.File.exists java.io.File.isDirectory java.io.File.getAbsolutePath } java.io.File java.util.HashMap java.util.HashMap java.util.Map.put java.util.Map.put java.lang.Long.toString java.util.Date.getTime ","decomposemethodname":"new Post ","nowapisequence":"java.io.File.exists java.io.File.isDirectory java.io.File.getAbsolutePath java.util.Map.put java.util.Map.put java.lang.Long.toString java.util.Date.getTime "}
{"methodannotation":"hyperlink events handler ","groudtruth":"javax.swing.event.HyperlinkEvent.getEventType java.net.URL.toExternalForm javax.swing.event.HyperlinkEvent.getURL java.lang.String.contains javax.swing.event.HyperlinkEvent.getURL javax.swing.JEditorPane.setPage java.lang.Runtime.exec java.lang.Runtime.getRuntime java.lang.String.replaceAll java.lang.Runtime.exec java.lang.Runtime.getRuntime java.io.PrintStream.println java.io.PrintStream.println java.lang.Runtime.exec java.lang.Runtime.getRuntime ","nowflat":"} 8 javax.swing.event.HyperlinkEvent.getEventType java.net.URL.toExternalForm javax.swing.event.HyperlinkEvent.getURL 8 java.lang.String.contains javax.swing.event.HyperlinkEvent.getURL javax.swing.JEditorPane.setPage 8 java.lang.Runtime.exec java.lang.Runtime.getRuntime 8 W F Z ","decomposemethodname":"hyperlink Update ","nowapisequence":"javax.swing.event.HyperlinkEvent.getEventType java.net.URL.toExternalForm javax.swing.event.HyperlinkEvent.getURL java.lang.String.contains javax.swing.event.HyperlinkEvent.getURL javax.swing.JEditorPane.setPage java.lang.Runtime.exec java.lang.Runtime.getRuntime "}
{"methodannotation":"creates a text area with standard settings and the title given by the msgId ","groudtruth":"javax.swing.JComponent.setAlignmentX javax.swing.text.JTextComponent.setCaretPosition javax.swing.text.JTextComponent.setEditable javax.swing.text.JTextComponent.setEditable javax.swing.JComponent.setOpaque javax.swing.JTextArea.setLineWrap javax.swing.JTextArea.setWrapStyleWord javax.swing.BorderFactory.createTitledBorder javax.swing.JComponent.setBorder javax.swing.JTextArea.setFont java.awt.GridBagLayout.addLayoutComponent java.awt.GridBagLayout.addLayoutComponent javax.swing.JScrollPane.setViewportView ","nowflat":"javax.swing.JTextArea javax.swing.JComponent.setAlignmentX javax.swing.text.JTextComponent.setCaretPosition javax.swing.text.JTextComponent.setEditable javax.swing.text.JTextComponent.setEditable javax.swing.JComponent.setOpaque javax.swing.JTextArea.setLineWrap javax.swing.JTextArea.setWrapStyleWord javax.swing.BorderFactory.createTitledBorder javax.swing.JComponent.setBorder ","decomposemethodname":"create Text Area ","nowapisequence":"javax.swing.JComponent.setAlignmentX javax.swing.text.JTextComponent.setCaretPosition javax.swing.text.JTextComponent.setEditable javax.swing.text.JTextComponent.setEditable javax.swing.JComponent.setOpaque javax.swing.JTextArea.setLineWrap javax.swing.JTextArea.setWrapStyleWord javax.swing.BorderFactory.createTitledBorder javax.swing.JComponent.setBorder "}
{"methodannotation":"blocks until an event notifying us of the awaited state change is received or until waitFor miliseconds pass ","groudtruth":"java.lang.Object.wait java.util.ArrayList.size ","nowflat":"_ 8 @ } ","decomposemethodname":"wait For Event ","nowapisequence":""}
{"methodannotation":"determines if a day of the month has entries ","groudtruth":"java.lang.Boolean.booleanValue ","nowflat":"8 ","decomposemethodname":"day Has Entry ","nowapisequence":""}
{"methodannotation":"builds the visual calendar model ","groudtruth":"java.lang.Integer.toString java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 7 7 8 8 java.lang.Integer.toString java.lang.Integer java.lang.StringBuffer ","decomposemethodname":"build Calendar ","nowapisequence":"java.lang.Integer.toString "}
{"methodannotation":"checks the context , if null will issue a warning ","groudtruth":"java.util.logging.Logger.severe ","nowflat":"8 ","decomposemethodname":"check Context ","nowapisequence":""}
{"methodannotation":"expand macro tokens in an entry ","groudtruth":"java.util.regex.Pattern.compile java.util.regex.Pattern.matcher java.util.Map.get java.util.regex.Matcher.find java.util.regex.Matcher.group java.lang.String.substring java.util.HashMap.containsKey ","nowflat":"java.util.regex.Pattern.compile java.util.regex.Pattern.matcher N java.util.Map.get ` java.util.regex.Matcher.find ","decomposemethodname":"replace Macros ","nowapisequence":"java.util.regex.Pattern.compile java.util.regex.Pattern.matcher java.util.Map.get java.util.regex.Matcher.find "}
{"methodannotation":"add a referer to this referer group ","groudtruth":"java.util.Map.containsKey java.util.Map.get java.util.Map.put ","nowflat":"8 java.util.Map.containsKey N ","decomposemethodname":"add Referer ","nowapisequence":"java.util.Map.containsKey "}
{"methodannotation":"reload the blog entry from disk The first line of the blog entry will be used as the title of the blog ","groudtruth":"java.lang.System.getProperty java.io.BufferedReader.readLine java.lang.StringBuffer.append java.lang.StringBuffer.append java.io.BufferedReader.close java.lang.StringBuffer.toString java.io.File.lastModified java.io.File.lastModified ","nowflat":"java.lang.System.getProperty } java.io.FileInputStream java.io.InputStreamReader java.io.BufferedReader java.lang.StringBuffer ` java.io.BufferedReader.readLine 8 java.lang.StringBuffer.append ","decomposemethodname":"reload Source ","nowapisequence":"java.lang.System.getProperty java.io.BufferedReader.readLine java.lang.StringBuffer.append "}
{"methodannotation":"configure the dispatchers that blojsom will use when passing a request/response on to a particular template ","groudtruth":"java.util.Properties.load java.io.InputStream.close java.util.Set.iterator java.util.Hashtable.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Properties.getProperty java.lang.Class.forName java.lang.Class.newInstance java.util.Map.put ","nowflat":"java.util.HashMap java.util.Properties } java.util.Properties.load java.io.InputStream.close java.util.Set.iterator java.util.Hashtable.keySet ` java.util.Iterator.hasNext N java.util.Iterator.next java.util.Properties.getProperty java.lang.Class.forName N ","decomposemethodname":"configure Dispatchers ","nowapisequence":"java.util.Properties.load java.io.InputStream.close java.util.Set.iterator java.util.Hashtable.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Properties.getProperty java.lang.Class.forName "}
{"methodannotation":"load the plugins ","groudtruth":"java.util.Set.iterator java.util.Hashtable.keySet java.util.Iterator.hasNext java.util.Iterator.next java.lang.String.indexOf java.util.Properties.getProperty java.lang.Class.forName java.lang.Class.newInstance java.util.Map.put ","nowflat":"8 { java.util.HashMap java.util.Properties } O { java.lang.Object java.util.Set.iterator java.util.Hashtable.keySet ` java.util.Iterator.hasNext N java.util.Iterator.next 8 ","decomposemethodname":"configure Plugins ","nowapisequence":"java.util.Set.iterator java.util.Hashtable.keySet java.util.Iterator.hasNext java.util.Iterator.next "}
{"methodannotation":"parse a delimited list of values ","groudtruth":"java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken java.util.ArrayList.add java.util.ArrayList.size java.util.ArrayList.toArray ","nowflat":"W 8 @ java.util.StringTokenizer java.util.ArrayList ` java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken java.util.ArrayList.add 8 ","decomposemethodname":"parse Delimited List ","nowapisequence":"java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken java.util.ArrayList.add "}
{"methodannotation":"convert the request parameters to a string ","groudtruth":"java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.net.URLEncoder.encode java.lang.StringBuffer.append java.lang.StringBuffer.append java.net.URLEncoder.encode java.lang.StringBuffer.append java.util.Enumeration.hasMoreElements java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer ` java.util.Enumeration.hasMoreElements N java.util.Enumeration.nextElement } java.net.URLEncoder.encode java.lang.StringBuffer.append java.lang.StringBuffer.append java.net.URLEncoder.encode ","decomposemethodname":"convert Request Params ","nowapisequence":"java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.net.URLEncoder.encode java.lang.StringBuffer.append java.lang.StringBuffer.append java.net.URLEncoder.encode "}
{"methodannotation":"return an escaped string where < meta , < link tags are escaped ","groudtruth":"java.lang.String.replaceAll java.lang.String.replaceAll ","nowflat":"8 @ java.lang.String.replaceAll ","decomposemethodname":"escape Meta And Link ","nowapisequence":"java.lang.String.replaceAll "}
{"methodannotation":"remove the initial '' / '' from a string ","groudtruth":"java.lang.String.startsWith java.lang.String.substring ","nowflat":"8 @ 8 java.lang.String.startsWith ","decomposemethodname":"remove Initial Slash ","nowapisequence":"java.lang.String.startsWith "}
{"methodannotation":"load the meta data for the category ","groudtruth":"java.io.File.listFiles java.util.Properties.load java.io.FileInputStream.close ","nowflat":"W java.io.File W java.io.File.listFiles 8 7 ","decomposemethodname":"load Meta Data ","nowapisequence":"java.io.File.listFiles "}
{"methodannotation":"replace the references in the description with the URL to the image for the emoticon ","groudtruth":"java.util.Map.get java.lang.String.equals java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"N java.util.Map.get 8 java.lang.String.equals java.lang.StringBuffer java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append ","decomposemethodname":"replace Emoticon ","nowapisequence":"java.util.Map.get java.lang.String.equals java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append "}
{"methodannotation":"process an event from another component ","groudtruth":"java.util.Map.isEmpty java.lang.Class.getName java.lang.Object.getClass java.util.Map.put java.util.Collections.unmodifiableMap java.lang.String.equals java.util.Collection.iterator java.util.Map.values java.util.Iterator.hasNext java.lang.Object.toString java.util.Iterator.next java.lang.Boolean.toString ","nowflat":"8 8 java.util.Map.isEmpty N N 8 java.util.TreeMap java.lang.Class.getName java.lang.Object.getClass java.util.Map.put java.util.Collections.unmodifiableMap W 8 ","decomposemethodname":"process Event ","nowapisequence":"java.util.Map.isEmpty java.lang.Class.getName java.lang.Object.getClass java.util.Map.put java.util.Collections.unmodifiableMap "}
{"methodannotation":"creates the layout for this sub panel ","groudtruth":"java.awt.Container.setLayout javax.swing.JTextField.addActionListener java.awt.GridBagLayout.addLayoutComponent java.awt.Container.add javax.swing.AbstractButton.addActionListener java.awt.GridBagLayout.addLayoutComponent java.awt.Container.add ","nowflat":"java.awt.GridBagLayout java.awt.Container.setLayout javax.swing.JTextField javax.swing.JTextField.addActionListener java.awt.GridBagConstraints java.awt.Insets java.awt.GridBagLayout.addLayoutComponent ","decomposemethodname":"create Layout ","nowapisequence":"java.awt.Container.setLayout javax.swing.JTextField.addActionListener java.awt.GridBagLayout.addLayoutComponent "}
{"methodannotation":"java 1.5 does not support Arrays.copyOf ","groudtruth":"java.lang.Math.min java.lang.System.arraycopy ","nowflat":"W W W W ","decomposemethodname":"copy Of ","nowapisequence":""}
{"methodannotation":"description of the Method ","groudtruth":"java.sql.ResultSet.getInt java.sql.ResultSet.getString java.sql.ResultSet.getTimestamp ","nowflat":"java.sql.ResultSet.getInt ","decomposemethodname":"build Record ","nowapisequence":"java.sql.ResultSet.getInt "}
{"methodannotation":"deletes an element , and invalidates the related index ","groudtruth":"java.lang.System.arraycopy ","nowflat":"8 @ 8 N @ N N ","decomposemethodname":"del ","nowapisequence":""}
{"methodannotation":"creates org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents used to tokenize all the text in the provided Reader ","groudtruth":"java.util.Set.isEmpty ","nowflat":"S java.lang.Object java.lang.Object java.lang.Object java.lang.Object java.lang.Object 8 ","decomposemethodname":"create Components ","nowapisequence":""}
{"methodannotation":"consume at most one array from the input port and produce two arrays containing the indices and values of the identified peaks ","groudtruth":"java.lang.String.equals java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.util.ArrayList.add java.util.ArrayList.add java.util.ArrayList.size java.lang.Math.pow java.lang.Math.pow java.util.ArrayList.isEmpty java.util.ArrayList.add java.util.ArrayList.add java.util.ArrayList.toArray java.util.ArrayList.toArray ","nowflat":"8 N 8 @ 8 8 8 8 8 8 java.lang.String.equals 7 8 8 java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow 8 java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow 8 java.lang.String.equals java.util.ArrayList java.util.ArrayList 7 8 8 8 = java.lang.Math.pow M java.lang.Math.pow M M 8 8 = java.lang.Math.pow M java.lang.Math.pow M M 8 8 = ","decomposemethodname":"fire ","nowapisequence":"java.lang.String.equals java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.String.equals java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow java.lang.Math.pow "}
{"methodannotation":"answers the concatenation of the two arrays ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W W W W W 8 @ 8 @ ","decomposemethodname":"array Concat ","nowapisequence":""}
{"methodannotation":"return a new array which is the split of the given array using the given divider ","groudtruth":"java.lang.System.arraycopy java.lang.System.arraycopy ","nowflat":"W W W 8 @ 8 @ 7 8 W W W ","decomposemethodname":"split On ","nowapisequence":""}
{"methodannotation":"produces a new boolean array containing the elementsbetween the start and end indices ","groudtruth":"java.lang.System.arraycopy ","nowflat":"W W 8 @ 8 8 8 ","decomposemethodname":"subarray ","nowapisequence":""}
{"methodannotation":"creates a ' table ' Element from the given data.Any null values in header or rows will be ignored ","groudtruth":"java.lang.Object.toString java.lang.Object.toString ","nowflat":"W W java.lang.Object 8 Z 8 U 8 java.lang.Object.toString 8 Z W ","decomposemethodname":"table ","nowapisequence":"java.lang.Object.toString "}
{"methodannotation":"load value from property string value ","groudtruth":"java.io.File.getAbsolutePath ","nowflat":"java.io.File ","decomposemethodname":"load Value ","nowapisequence":""}
{"methodannotation":"adds fill components to empty cells in the first row and first column of the grid ","groudtruth":"javax.swing.Box.createRigidArea java.awt.Container.add javax.swing.Box.createRigidArea java.awt.Container.add javax.swing.Box.createRigidArea java.awt.Container.add ","nowflat":"W W java.awt.Dimension 8 8 javax.swing.Box.createRigidArea java.awt.Container.add 7 8 U ","decomposemethodname":"add Fill Components ","nowapisequence":"javax.swing.Box.createRigidArea java.awt.Container.add "}
{"methodannotation":"this method is called when a PCDATA element is encountered ","groudtruth":"java.lang.StringBuffer.ensureCapacity java.io.Reader.read java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer W W 7 8 java.lang.StringBuffer.ensureCapacity java.io.Reader.read ","decomposemethodname":"add PCData ","nowapisequence":"java.lang.StringBuffer.ensureCapacity java.io.Reader.read "}
{"methodannotation":"processes a '' processing instruction '' ","groudtruth":"java.lang.String.equalsIgnoreCase java.io.Reader.close ","nowflat":"java.lang.Object 8 ","decomposemethodname":"process PI ","nowapisequence":""}
{"methodannotation":"processes a CDATA section ","groudtruth":"java.io.Reader.close ","nowflat":"8 @ ","decomposemethodname":"process CDATA ","nowapisequence":""}
{"methodannotation":"processes a document type declaration ","groudtruth":"java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString java.lang.StringBuffer.toString ","nowflat":"8 @ java.lang.StringBuffer 8 8 8 java.lang.StringBuffer.toString ","decomposemethodname":"process Doc Type ","nowapisequence":"java.lang.StringBuffer.toString "}
{"methodannotation":"returns true if the current stream has no more characters left to be read ","groudtruth":"java.io.PushbackReader.read java.io.PushbackReader.unread ","nowflat":"java.io.PushbackReader.read 8 @ ","decomposemethodname":"at EOFOf Current Stream ","nowapisequence":"java.io.PushbackReader.read "}
{"methodannotation":"returns true if there are no more characters left to be read ","groudtruth":"java.io.PushbackReader.read java.util.Stack.empty java.io.PushbackReader.close java.util.Stack.pop java.util.Stack.pop java.util.Stack.pop java.util.Stack.pop java.io.PushbackReader.read java.io.PushbackReader.unread ","nowflat":"java.io.PushbackReader.read ` 8 java.util.Stack.empty @ java.io.PushbackReader.close N java.util.Stack.pop N java.util.Stack.pop ","decomposemethodname":"at EOF ","nowapisequence":"java.io.PushbackReader.read java.util.Stack.empty java.io.PushbackReader.close java.util.Stack.pop java.util.Stack.pop "}
{"methodannotation":"removes the child located at a certain index ","groudtruth":"java.util.Vector.removeElementAt ","nowflat":"","decomposemethodname":"remove Child At Index ","nowapisequence":""}
{"methodannotation":"adds an internal entity ","groudtruth":"java.util.Hashtable.containsKey java.util.Hashtable.put ","nowflat":"8 ","decomposemethodname":"add Internal Entity ","nowapisequence":""}
{"methodannotation":"adds an external entity ","groudtruth":"java.util.Hashtable.containsKey java.util.Hashtable.put ","nowflat":"8 ","decomposemethodname":"add External Entity ","nowapisequence":""}
{"methodannotation":"processes an ignore section ","groudtruth":"java.io.Reader.close ","nowflat":"8 @ 8 ","decomposemethodname":"process Ignore Section ","nowapisequence":""}
{"methodannotation":"processes an ATTLIST element ","groudtruth":"java.lang.String.equals java.util.Hashtable.put java.util.Hashtable.isEmpty java.util.Hashtable.put ","nowflat":"8 @ java.util.Properties ` 8 ` 8 8 ","decomposemethodname":"process Att List ","nowapisequence":""}
{"methodannotation":"indicates that an element has been started ","groudtruth":"java.util.Hashtable.get java.util.Hashtable.clone java.util.Stack.push ","nowflat":"N java.util.Hashtable.get 8 java.util.Properties ","decomposemethodname":"element Started ","nowapisequence":"java.util.Hashtable.get "}
{"methodannotation":"this method is called when the attributes of an XML element have been processed ","groudtruth":"java.util.Stack.pop java.util.Hashtable.keys java.util.Enumeration.hasMoreElements java.util.Enumeration.nextElement java.util.Hashtable.get java.util.Hashtable.put ","nowflat":"N java.util.Stack.pop java.util.Hashtable.keys ` java.util.Enumeration.hasMoreElements ","decomposemethodname":"element Attributes Processed ","nowapisequence":"java.util.Stack.pop java.util.Hashtable.keys java.util.Enumeration.hasMoreElements "}
{"methodannotation":"indicates that an attribute has been added to the current element ","groudtruth":"java.util.Stack.peek java.util.Hashtable.containsKey java.util.Hashtable.remove ","nowflat":"N java.util.Stack.peek 8 ","decomposemethodname":"attribute Added ","nowapisequence":"java.util.Stack.peek "}
{"methodannotation":"remove the IFfLinkContentMixMixed property content by object ","groudtruth":"java.util.List.remove ","nowflat":"","decomposemethodname":"remove Content ","nowapisequence":""}
{"methodannotation":"returns the text matched by the current regular expression ","groudtruth":"java.lang.CharSequence.subSequence ","nowflat":"@ ","decomposemethodname":"yytext ","nowapisequence":""}
{"methodannotation":"returns the character at position pos from the matched text ","groudtruth":"java.lang.CharSequence.charAt ","nowflat":"@ ","decomposemethodname":"yycharat ","nowapisequence":""}
{"methodannotation":"initializes tag so it can loop through the months of the year ","groudtruth":"java.util.Locale.getDefault java.text.DateFormatSymbols.getShortMonths java.text.DateFormatSymbols.getMonths java.lang.String.length ","nowflat":"N 8 java.util.Locale.getDefault java.text.DateFormatSymbols java.text.DateFormatSymbols.getShortMonths java.text.DateFormatSymbols.getMonths ","decomposemethodname":"do Start Tag ","nowapisequence":"java.util.Locale.getDefault java.text.DateFormatSymbols.getShortMonths java.text.DateFormatSymbols.getMonths "}
{"methodannotation":"adds a new member to the layer ","groudtruth":"java.util.HashSet.contains java.util.HashSet.add ","nowflat":"8 ","decomposemethodname":"add Member ","nowapisequence":""}
{"methodannotation":"converts to an object ","groudtruth":"java.lang.String.valueOf ","nowflat":"@ ","decomposemethodname":"to Object ","nowapisequence":""}
{"methodannotation":"append to the toString a float value ","groudtruth":"java.lang.StringBuffer.append ","nowflat":"","decomposemethodname":"append Detail ","nowapisequence":""}
{"methodannotation":"measures and returns the minimum height required to render the component in the indicated row and column ","groudtruth":"java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.awt.Dimension.getHeight java.awt.Component.getMinimumSize java.awt.Component.setBounds java.awt.Component.setBounds java.awt.Component.setBounds java.awt.Dimension.getHeight java.awt.Component.getMinimumSize ","nowflat":"} N java.util.Vector.elementAt 8 N java.awt.Dimension.getWidth java.awt.Component.getMinimumSize N java.awt.Dimension.getHeight java.awt.Component.getMinimumSize 8 8 java.awt.Component.setBounds 8 ","decomposemethodname":"height ","nowapisequence":"java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.awt.Dimension.getHeight java.awt.Component.getMinimumSize java.awt.Component.setBounds "}
{"methodannotation":"adds an author to the authors list ","groudtruth":"java.util.ArrayList.add ","nowflat":"","decomposemethodname":"add Author ","nowapisequence":""}
{"methodannotation":"clear the IFtContentMixMixed property content ","groudtruth":"java.util.List.clear ","nowflat":"","decomposemethodname":"clear Content ","nowapisequence":""}
{"methodannotation":"returns the number of journal article resources ","groudtruth":"java.lang.Long.intValue ","nowflat":"N 8 } N ","decomposemethodname":"count All ","nowapisequence":""}
{"methodannotation":"creates a DOM representation of the object ","groudtruth":"org.w3c.dom.Node.getOwnerDocument org.w3c.dom.Document.createElement java.util.List.size java.util.List.get org.w3c.dom.Node.appendChild ","nowflat":"8 N org.w3c.dom.Node.getOwnerDocument org.w3c.dom.Document.createElement 8 8 ","decomposemethodname":"make Element ","nowapisequence":"org.w3c.dom.Node.getOwnerDocument org.w3c.dom.Document.createElement "}
{"methodannotation":"updates the components ","groudtruth":"java.util.Vector.size java.util.Vector.get java.util.Vector.add javax.swing.JList.setListData javax.swing.JList.setSelectedIndex javax.swing.JList.setListData javax.swing.JList.setSelectedIndex javax.swing.AbstractButton.setSelected javax.swing.AbstractButton.setEnabled ","nowflat":"java.util.Vector java.util.Vector java.util.Vector.size 7 N java.util.Vector.get java.lang.Object java.util.Vector.add javax.swing.JList.setListData ","decomposemethodname":"update Components ","nowapisequence":"java.util.Vector.size java.util.Vector.get java.util.Vector.add javax.swing.JList.setListData "}
{"methodannotation":"escapes the special characters in the specified string using file type specific rules ","groudtruth":"java.lang.String.length java.lang.StringBuffer.charAt java.lang.StringBuffer.replace java.lang.StringBuffer.insert java.lang.StringBuffer.toString java.lang.String.length java.lang.StringBuffer.charAt java.lang.StringBuffer.replace java.lang.StringBuffer.length java.lang.String.length java.lang.StringBuffer.toString ","nowflat":"= @ java.lang.StringBuffer java.lang.String.length 7 java.lang.StringBuffer.charAt 8 8 8 java.lang.StringBuffer.replace 8 java.lang.StringBuffer.insert @ java.lang.StringBuffer.toString java.lang.StringBuffer java.lang.String.length 7 java.lang.StringBuffer.charAt = ","decomposemethodname":"escape Special Chars ","nowapisequence":"java.lang.String.length java.lang.StringBuffer.charAt java.lang.StringBuffer.replace java.lang.StringBuffer.insert java.lang.StringBuffer.toString java.lang.String.length java.lang.StringBuffer.charAt "}
{"methodannotation":"creates all shortcuts based on the information in shortcuts ","groudtruth":"java.util.Vector.size java.util.Vector.elementAt javax.swing.AbstractButton.isSelected java.util.Vector.add java.util.Vector.add java.util.Vector.add java.io.File.getParentFile java.io.File.equals java.util.Vector.add java.util.Vector.elements java.util.Enumeration.hasMoreElements java.lang.Object.toString java.util.Enumeration.nextElement java.util.Vector.add java.lang.Throwable.printStackTrace java.lang.Throwable.printStackTrace ","nowflat":"8 @ 7 java.util.Vector.size N java.util.Vector.elementAt } 8 } 8 javax.swing.AbstractButton.isSelected java.util.Vector.add java.io.File java.io.File java.util.Vector java.util.ArrayList java.lang.Object java.util.Vector.add java.util.Vector.add ` java.io.File.getParentFile 8 java.io.File.equals M ","decomposemethodname":"create Shortcuts ","nowapisequence":"java.util.Vector.size java.util.Vector.elementAt javax.swing.AbstractButton.isSelected java.util.Vector.add java.util.Vector.add java.util.Vector.add java.io.File.getParentFile java.io.File.equals "}
{"methodannotation":"constructs a file path from a file : URI ","groudtruth":"java.lang.String.startsWith java.lang.String.startsWith java.lang.String.substring java.lang.String.substring java.lang.String.replace java.lang.String.startsWith java.lang.String.length java.lang.String.charAt java.lang.Character.isLetter java.lang.String.lastIndexOf java.lang.String.substring java.text.CharacterIterator.first java.text.CharacterIterator.next java.text.CharacterIterator.next java.lang.Character.digit java.text.CharacterIterator.next java.lang.Character.digit java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"8 java.lang.String.startsWith { java.lang.IllegalArgumentException 8 java.lang.String.startsWith java.lang.String.substring java.lang.String.substring java.lang.String.replace 8 java.lang.String.startsWith java.lang.String.length java.lang.String.charAt java.lang.Character.isLetter java.lang.String.lastIndexOf java.lang.String.substring java.lang.StringBuffer java.text.StringCharacterIterator 7 ","decomposemethodname":"from URI ","nowapisequence":"java.lang.String.startsWith java.lang.String.startsWith java.lang.String.substring java.lang.String.substring java.lang.String.replace java.lang.String.startsWith java.lang.String.length java.lang.String.charAt java.lang.Character.isLetter java.lang.String.lastIndexOf java.lang.String.substring "}
{"methodannotation":"make sure Quercus is running on JDK 1.5 + ","groudtruth":"java.lang.System.getProperty java.lang.String.startsWith java.lang.String.startsWith ","nowflat":"java.lang.System.getProperty 8 java.lang.String.startsWith ","decomposemethodname":"check Java Version ","nowapisequence":"java.lang.System.getProperty java.lang.String.startsWith "}
{"methodannotation":"returns true for the next token in the stream , or false at EOS ","groudtruth":"java.lang.Character.UnicodeBlock.of java.lang.Character.toLowerCase java.lang.Character.isLetter java.lang.Character.isWhitespace java.lang.Character.isLetter java.lang.Character.isLetter ","nowflat":"` ` 8 8 8 8 M @ java.lang.Character.UnicodeBlock.of 8 8 8 8 M M java.lang.Character.toLowerCase 8 M 8 java.lang.Character.isLetter java.lang.Character.isWhitespace 8 N 8 N 8 8 8 M M ","decomposemethodname":"increment Token ","nowapisequence":"java.lang.Character.UnicodeBlock.of java.lang.Character.toLowerCase java.lang.Character.isLetter java.lang.Character.isWhitespace "}
{"methodannotation":"renders the clause in textual representation ","groudtruth":"java.io.StringWriter.write java.io.StringWriter.write java.io.StringWriter.write java.io.StringWriter.write java.io.StringWriter.write java.io.StringWriter.write ","nowflat":"java.io.StringWriter.write 8 java.io.StringWriter.write 8 8 java.io.StringWriter.write 8 ","decomposemethodname":"to EPL ","nowapisequence":"java.io.StringWriter.write java.io.StringWriter.write java.io.StringWriter.write "}
{"methodannotation":"returns the number of app builder apps where groupId = &#63; ","groudtruth":"java.lang.Long.intValue ","nowflat":"W W F N 8 } ","decomposemethodname":"count By Group Id ","nowapisequence":""}
{"methodannotation":"print the result of API call ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","decomposemethodname":"print Result ","nowapisequence":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println "}
{"methodannotation":"wraps a value ","groudtruth":"java.lang.Double.valueOf ","nowflat":"@ ","decomposemethodname":"wrap Value ","nowapisequence":""}
{"methodannotation":"add the pixel values of a rectangle with a given constant ","groudtruth":"java.lang.Class.getName java.lang.Object.getClass ","nowflat":"W W W = W W 7 7 W M ","decomposemethodname":"compute Rect ","nowapisequence":""}
{"methodannotation":"ensure that the order parameter is positive and recompute the size of internal buffers ","groudtruth":"java.lang.Math.pow ","nowflat":"8 8 { N ","decomposemethodname":"attribute Changed ","nowapisequence":""}
{"methodannotation":"reports progress to System.out ","groudtruth":"java.io.PrintStream.print java.io.PrintStream.print java.io.PrintStream.print java.io.PrintStream.print java.io.PrintStream.println ","nowflat":"java.io.PrintStream.print java.io.PrintStream.print java.io.PrintStream.print ","decomposemethodname":"next Step ","nowapisequence":"java.io.PrintStream.print java.io.PrintStream.print java.io.PrintStream.print "}
{"methodannotation":"loads the info ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} @ O ","decomposemethodname":"load Info ","nowapisequence":""}
{"methodannotation":"computes the margin value based on the container width and the margin setting ","groudtruth":"java.awt.Dimension.getWidth java.awt.Component.getSize ","nowflat":"N java.awt.Dimension.getWidth ","decomposemethodname":"margin ","nowapisequence":"java.awt.Dimension.getWidth "}
{"methodannotation":"defines the abstract method in AbstractPaneItem ","groudtruth":"javax.swing.AbstractButton.setSelected ","nowflat":"","decomposemethodname":"init Options ","nowapisequence":""}
{"methodannotation":"loads the suitable L&F ","groudtruth":"java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equals javax.swing.UIManager.getSystemLookAndFeelClassName javax.swing.UIManager.setLookAndFeel javax.swing.UIManager.getLookAndFeel javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme java.lang.String.equals java.lang.Class.forName java.lang.Class.forName java.lang.Class.forName java.lang.Class.getMethod java.lang.Class.newInstance java.lang.Class.newInstance javax.swing.UIManager.setLookAndFeel java.lang.reflect.Method.invoke java.lang.String.equals javax.swing.UIManager.setLookAndFeel java.util.Map.containsKey java.util.Map.get java.lang.String.equals javax.swing.JFrame.setDefaultLookAndFeelDecorated java.util.Map.containsKey java.util.Map.get java.lang.String.equals javax.swing.JDialog.setDefaultLookAndFeelDecorated java.lang.String.equals javax.swing.UIManager.setLookAndFeel java.lang.String.equals java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.put java.util.Map.get java.util.Map.containsKey java.util.Map.get java.util.Map.containsKey java.util.Map.get javax.swing.UIManager.setLookAndFeel ","nowflat":"8 8 8 N 8 java.lang.String.equalsIgnoreCase 8 java.lang.String.equalsIgnoreCase 8 8 java.lang.String.equals javax.swing.UIManager.getSystemLookAndFeelClassName javax.swing.UIManager.setLookAndFeel 8 javax.swing.UIManager.getLookAndFeel javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme java.awt.Color @ 8 java.lang.String.equals java.awt.Color java.lang.Class.forName java.lang.Class.forName W F java.lang.Class.forName java.lang.Class.getMethod N java.lang.Class.newInstance N java.lang.Class.newInstance W F javax.swing.UIManager.setLookAndFeel java.lang.reflect.Method.invoke @ 8 java.lang.String.equals javax.swing.UIManager.setLookAndFeel N 8 java.util.Map.containsKey N java.util.Map.get 8 java.lang.String.equals ","decomposemethodname":"load Look And Feel ","nowapisequence":"java.lang.String.equalsIgnoreCase java.lang.String.equalsIgnoreCase java.lang.String.equals javax.swing.UIManager.getSystemLookAndFeelClassName javax.swing.UIManager.setLookAndFeel javax.swing.UIManager.getLookAndFeel javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme java.lang.String.equals java.lang.Class.forName java.lang.Class.forName java.lang.Class.forName java.lang.Class.getMethod java.lang.Class.newInstance java.lang.Class.newInstance javax.swing.UIManager.setLookAndFeel java.lang.reflect.Method.invoke java.lang.String.equals javax.swing.UIManager.setLookAndFeel java.util.Map.containsKey java.util.Map.get java.lang.String.equals "}
{"methodannotation":"reports progress on System.out ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"start Action ","nowapisequence":""}
{"methodannotation":"returns the PDF representation of this PdfObject ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.delete java.lang.StringBuffer.append java.lang.StringBuffer.delete java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString java.io.OutputStream.write ","nowflat":"java.lang.StringBuffer.append java.lang.StringBuffer java.lang.StringBuffer.delete java.lang.StringBuffer.append java.lang.StringBuffer java.lang.StringBuffer.delete ","decomposemethodname":"to Pdf ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.delete java.lang.StringBuffer.append java.lang.StringBuffer.delete "}
{"methodannotation":"called when the packaging starts ","groudtruth":"java.util.ResourceBundle.getString java.util.ResourceBundle.getBundle ","nowflat":"java.util.ResourceBundle.getString ","decomposemethodname":"packager Start ","nowapisequence":"java.util.ResourceBundle.getString "}
{"methodannotation":"called when the packager stops ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println ","decomposemethodname":"packager Stop ","nowapisequence":"java.io.PrintStream.println "}
{"methodannotation":"this function checks for the existence of back edges ","groudtruth":"java.util.Map.keySet java.util.Set.iterator java.util.Iterator.hasNext java.util.Iterator.next java.lang.Integer.intValue ","nowflat":"java.util.Map.keySet 7 java.util.Set.iterator java.util.Iterator.hasNext java.util.Iterator.next ","decomposemethodname":"check Back Edges ","nowapisequence":"java.util.Map.keySet java.util.Set.iterator java.util.Iterator.hasNext java.util.Iterator.next "}
{"methodannotation":"print a message to the console at the specified priority ","groudtruth":"java.io.PrintStream.println ","nowflat":"= M M ","decomposemethodname":"packager Msg ","nowapisequence":""}
{"methodannotation":"create a parse warning with consistent messages ","groudtruth":"java.io.PrintStream.println ","nowflat":"","decomposemethodname":"parse Warn ","nowapisequence":""}
{"methodannotation":"adds a pack ","groudtruth":"java.util.jar.JarOutputStream.putNextEntry ","nowflat":"java.util.zip.ZipEntry ","decomposemethodname":"add Pack ","nowapisequence":""}
{"methodannotation":"write an arbitrary object to primary jar ","groudtruth":"java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush ","nowflat":"java.io.ObjectOutputStream ","decomposemethodname":"write Installer Object ","nowapisequence":""}
{"methodannotation":"parsable files have variables substituted after installation ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Parsable ","nowapisequence":""}
{"methodannotation":"adds an executable to the data ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Executable ","nowapisequence":""}
{"methodannotation":"executables files have their executable flag set , may be executed , and optionally , deleted when finished executing ","groudtruth":"java.util.List.add ","nowflat":"","decomposemethodname":"add Update Check ","nowapisequence":""}
{"methodannotation":"enable or disable icons for buttons This setting has no effect on OSX ","groudtruth":"java.lang.System.getProperty ","nowflat":"8 ","decomposemethodname":"use Button Icons ","nowapisequence":""}
{"methodannotation":"positions the title component and sets the variable titleHeight ","groudtruth":"java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.awt.Dimension.getHeight java.awt.Component.getMinimumSize java.awt.Component.setBounds java.awt.Component.setBounds java.awt.Component.setBounds java.awt.Component.setBounds ","nowflat":"8 N java.awt.Dimension.getWidth java.awt.Component.getMinimumSize N java.awt.Dimension.getHeight java.awt.Component.getMinimumSize 8 8 ","decomposemethodname":"position Title ","nowapisequence":"java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.awt.Dimension.getHeight java.awt.Component.getMinimumSize "}
{"methodannotation":"positiones one component as instructed ","groudtruth":"java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getPreferredSize java.awt.Dimension.getHeight java.awt.Component.getPreferredSize java.awt.Component.setBounds ","nowflat":"} N java.util.Vector.elementAt O @ 8 N java.awt.Dimension.getWidth java.awt.Component.getPreferredSize N java.awt.Dimension.getHeight java.awt.Component.getPreferredSize ","decomposemethodname":"position Component ","nowapisequence":"java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getPreferredSize java.awt.Dimension.getHeight java.awt.Component.getPreferredSize "}
{"methodannotation":"returns the minimum width of the column requested ","groudtruth":"java.util.Vector.size java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getMinimumSize ","nowflat":"7 java.util.Vector.size N java.util.Vector.elementAt 8 N ","decomposemethodname":"minimum Column Width ","nowapisequence":"java.util.Vector.size java.util.Vector.elementAt "}
{"methodannotation":"retrunds the minimum width both columns together should have based on the minimum widths of all the components that straddle both columns and the minimum width of the title component ","groudtruth":"java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.util.Vector.size java.util.Vector.elementAt java.awt.Dimension.getWidth java.awt.Component.getMinimumSize ","nowflat":"8 N java.awt.Dimension.getWidth java.awt.Component.getMinimumSize 7 java.util.Vector.size N java.util.Vector.elementAt 8 ","decomposemethodname":"minimum Both Columns Width ","nowapisequence":"java.awt.Dimension.getWidth java.awt.Component.getMinimumSize java.util.Vector.size java.util.Vector.elementAt "}
{"methodannotation":"this method is provided for conveninence of debugging layout problems ","groudtruth":"java.awt.Graphics.getClipBounds java.awt.Graphics2D.getStroke java.awt.Graphics.getColor java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics2D.setStroke java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics2D.setStroke java.awt.Graphics.setColor ","nowflat":"java.awt.Graphics.getClipBounds java.awt.Graphics2D.getStroke java.awt.Graphics.getColor java.awt.BasicStroke java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics.drawLine ","decomposemethodname":"show Rules ","nowapisequence":"java.awt.Graphics.getClipBounds java.awt.Graphics2D.getStroke java.awt.Graphics.getColor java.awt.Graphics.setColor java.awt.Graphics.drawLine java.awt.Graphics.drawLine java.awt.Graphics.drawLine "}
{"methodannotation":"writes the uninstalldata ","groudtruth":"java.lang.String.startsWith java.lang.String.toLowerCase java.io.File.exists java.io.File.getParentFile java.io.File.mkdirs java.io.File.getParentFile java.util.zip.ZipOutputStream.putNextEntry java.io.Writer.write java.io.BufferedWriter.newLine java.util.List.iterator java.util.Iterator.hasNext java.util.Iterator.next java.io.Writer.write java.io.Writer.write java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.io.BufferedWriter.flush java.io.BufferedWriter.close java.util.Iterator.hasNext java.io.Writer.write java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.Writer.write java.io.BufferedWriter.newLine java.io.Writer.write java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ObjectOutputStream.writeInt java.util.Iterator.hasNext java.util.Iterator.next java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry java.util.Map.isEmpty java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.get java.lang.String.equals java.util.List.iterator java.util.Iterator.hasNext java.util.List.get java.util.zip.ZipOutputStream.putNextEntry java.lang.Class.getResourceAsStream java.lang.Object.getClass java.io.InputStream.read java.util.zip.ZipOutputStream.write java.util.zip.ZipOutputStream.closeEntry java.lang.String.equals java.lang.String.equals java.util.List.iterator java.util.Iterator.hasNext java.util.Iterator.next java.util.ArrayList.add java.util.Iterator.hasNext java.util.Iterator.next java.util.HashSet.contains java.util.HashSet.add java.util.zip.ZipOutputStream.putNextEntry java.lang.Class.getResourceAsStream java.lang.Object.getClass java.io.InputStream.read java.util.zip.ZipOutputStream.write java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ByteArrayOutputStream.writeTo java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ObjectOutputStream.writeUTF java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.DeflaterOutputStream.flush java.util.zip.ZipOutputStream.close java.lang.Throwable.printStackTrace ","nowflat":"8 8 java.lang.String.startsWith java.lang.String.toLowerCase java.lang.Object java.io.File 8 java.io.File.exists java.io.File.getParentFile java.io.File.mkdirs java.io.File.getParentFile } java.io.FileOutputStream O 8 java.io.OutputStreamWriter java.io.BufferedWriter } 8 @ java.util.zip.ZipEntry java.util.zip.ZipOutputStream.putNextEntry java.io.OutputStreamWriter java.io.BufferedWriter java.io.Writer.write java.io.BufferedWriter.newLine java.util.List.iterator 8 ` java.util.Iterator.hasNext N java.util.Iterator.next java.io.Writer.write java.io.Writer.write 8 java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.io.BufferedWriter.flush java.io.BufferedWriter.close ` java.util.Iterator.hasNext java.io.Writer.write 8 java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipEntry java.util.zip.ZipOutputStream.putNextEntry java.io.OutputStreamWriter java.io.BufferedWriter java.io.Writer.write java.io.BufferedWriter.newLine java.io.Writer.write java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ObjectOutputStream java.io.ObjectOutputStream.writeInt ` java.util.Iterator.hasNext N java.util.Iterator.next java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry 8 java.util.Map.isEmpty java.util.Set.iterator java.util.Map.keySet java.util.HashSet ` java.util.Iterator.hasNext N java.util.Iterator.next java.util.Map.get 8 java.lang.String.equals java.util.List.iterator ` java.util.Iterator.hasNext N java.util.List.get W W java.util.zip.ZipEntry java.util.zip.ZipOutputStream.putNextEntry java.lang.Class.getResourceAsStream ","decomposemethodname":"write Uninstall Data ","nowapisequence":"java.lang.String.startsWith java.lang.String.toLowerCase java.io.File.exists java.io.File.getParentFile java.io.File.mkdirs java.io.File.getParentFile java.util.zip.ZipOutputStream.putNextEntry java.io.Writer.write java.io.BufferedWriter.newLine java.util.List.iterator java.util.Iterator.hasNext java.util.Iterator.next java.io.Writer.write java.io.Writer.write java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.io.BufferedWriter.flush java.io.BufferedWriter.close java.util.Iterator.hasNext java.io.Writer.write java.util.Iterator.hasNext java.io.BufferedWriter.newLine java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.Writer.write java.io.BufferedWriter.newLine java.io.Writer.write java.io.BufferedWriter.flush java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipOutputStream.putNextEntry java.io.ObjectOutputStream.writeInt java.util.Iterator.hasNext java.util.Iterator.next java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.util.zip.ZipOutputStream.closeEntry java.util.Map.isEmpty java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.get java.lang.String.equals java.util.List.iterator java.util.Iterator.hasNext java.util.List.get java.util.zip.ZipOutputStream.putNextEntry java.lang.Class.getResourceAsStream "}
{"methodannotation":"process a < classpath > tag ","groudtruth":"java.io.File.exists java.util.ArrayList.add java.util.ArrayList.indexOf java.util.ArrayList.remove ","nowflat":"8 8 java.io.File.exists java.io.File 8 { java.lang.Exception ","decomposemethodname":"change Class Path ","nowapisequence":"java.io.File.exists "}
{"methodannotation":"load GUI preference information ","groudtruth":"java.lang.Class.getResourceAsStream java.io.ObjectInputStream.readObject java.io.ObjectInputStream.close ","nowflat":"java.lang.Class.getResourceAsStream java.io.ObjectInputStream N ","decomposemethodname":"load GUIInstall Data ","nowapisequence":"java.lang.Class.getResourceAsStream "}
{"methodannotation":"loads the GUI ","groudtruth":"javax.swing.UIManager.put javax.swing.UIManager.put javax.swing.UIManager.put java.lang.String.indexOf ","nowflat":"javax.swing.UIManager.put javax.swing.UIManager.put javax.swing.UIManager.put 8 ","decomposemethodname":"load GUI ","nowapisequence":"javax.swing.UIManager.put javax.swing.UIManager.put javax.swing.UIManager.put "}
{"methodannotation":"loads the panels ","groudtruth":"java.util.List.size java.lang.Class.forName java.lang.Class.forName java.util.List.get java.lang.String.indexOf java.lang.Class.forName java.lang.Class.getDeclaredConstructor java.lang.reflect.Constructor.newInstance java.util.ArrayList.add java.util.ArrayList.add java.util.ArrayList.add ","nowflat":"java.util.List.size W W java.lang.Class.forName java.lang.Class.forName W F 7 N java.util.List.get 8 U 8 java.lang.String.indexOf java.lang.Class.forName ","decomposemethodname":"load Panels ","nowapisequence":"java.util.List.size java.lang.Class.forName java.lang.Class.forName java.util.List.get java.lang.String.indexOf java.lang.Class.forName "}
{"methodannotation":"locks the ' previous ' button ","groudtruth":"javax.swing.AbstractButton.setEnabled ","nowflat":"","decomposemethodname":"lock Prev Button ","nowapisequence":""}
{"methodannotation":"locks the ' next ' button ","groudtruth":"javax.swing.AbstractButton.setEnabled ","nowflat":"","decomposemethodname":"lock Next Button ","nowapisequence":""}
{"methodannotation":"unlocks the ' previous ' button ","groudtruth":"javax.swing.AbstractButton.setEnabled ","nowflat":"","decomposemethodname":"unlock Prev Button ","nowapisequence":""}
{"methodannotation":"unlocks the ' next ' button ","groudtruth":"javax.swing.AbstractButton.setEnabled javax.swing.JComponent.requestFocus ","nowflat":"javax.swing.AbstractButton.setEnabled ","decomposemethodname":"unlock Next Button ","nowapisequence":"javax.swing.AbstractButton.setEnabled "}
{"methodannotation":"notify the user about something ","groudtruth":"javax.swing.JOptionPane.showMessageDialog ","nowflat":"","decomposemethodname":"emit Notification ","nowapisequence":""}
{"methodannotation":"output a warning ","groudtruth":"javax.swing.JOptionPane.showConfirmDialog ","nowflat":"@ ","decomposemethodname":"emit Warning ","nowapisequence":""}
{"methodannotation":"the destroyer encountered an error ","groudtruth":"javax.swing.JProgressBar.setString javax.swing.JOptionPane.showMessageDialog ","nowflat":"javax.swing.JProgressBar.setString ","decomposemethodname":"emit Error ","nowapisequence":"javax.swing.JProgressBar.setString "}
{"methodannotation":"puts the uninstaller ","groudtruth":"java.lang.Class.getResourceAsStream java.lang.Class.getResourceAsStream java.io.File.mkdirs java.util.zip.ZipOutputStream.setLevel java.util.zip.ZipInputStream.getNextEntry java.util.zip.ZipEntry.getName java.util.HashSet.contains java.util.zip.ZipEntry.getName java.util.HashSet.add java.util.zip.ZipEntry.getName java.util.zip.ZipOutputStream.putNextEntry java.util.zip.InflaterInputStream.read java.util.zip.DeflaterOutputStream.write java.util.zip.InflaterInputStream.read java.util.zip.ZipInputStream.closeEntry java.util.zip.ZipOutputStream.closeEntry java.util.zip.ZipInputStream.getNextEntry java.util.zip.ZipInputStream.close java.lang.Class.getResourceAsStream java.util.zip.ZipOutputStream.putNextEntry java.io.InputStream.read java.util.zip.DeflaterOutputStream.write java.io.InputStream.read java.util.zip.ZipOutputStream.closeEntry ","nowflat":"W W java.lang.Class.getResourceAsStream 8 @ java.lang.Class.getResourceAsStream java.io.File java.io.File.mkdirs java.io.FileOutputStream java.io.BufferedOutputStream java.util.zip.ZipOutputStream java.util.zip.ZipOutputStream.setLevel java.util.HashSet 7 8 U java.util.zip.ZipInputStream java.util.zip.ZipInputStream.getNextEntry ` 8 java.util.zip.ZipEntry.getName java.util.HashSet.contains java.util.zip.ZipEntry.getName java.util.HashSet.add java.util.zip.ZipEntry.getName ","decomposemethodname":"put Uninstaller ","nowapisequence":"java.lang.Class.getResourceAsStream java.lang.Class.getResourceAsStream java.io.File.mkdirs java.util.zip.ZipOutputStream.setLevel java.util.zip.ZipInputStream.getNextEntry java.util.zip.ZipEntry.getName java.util.HashSet.contains java.util.zip.ZipEntry.getName java.util.HashSet.add java.util.zip.ZipEntry.getName "}
{"methodannotation":"parses the files ","groudtruth":"java.util.Collection.iterator java.util.Iterator.hasNext java.util.Iterator.next java.io.File.getParentFile java.io.File.createTempFile java.io.BufferedInputStream.close java.io.FilterOutputStream.close java.io.File.delete java.io.File.renameTo ","nowflat":"java.util.Collection.iterator ` java.util.Iterator.hasNext 8 @ N java.util.Iterator.next 8 U java.io.File java.io.File.getParentFile java.io.File.createTempFile java.io.FileInputStream ","decomposemethodname":"parse Files ","nowapisequence":"java.util.Collection.iterator java.util.Iterator.hasNext java.util.Iterator.next java.io.File.getParentFile java.io.File.createTempFile "}
{"methodannotation":"convert bytes into appropiate mesaurements ","groudtruth":"java.lang.String.valueOf java.text.NumberFormat.format java.text.NumberFormat.format java.text.NumberFormat.format ","nowflat":"8 @ java.lang.String.valueOf 8 @ java.text.NumberFormat.format ","decomposemethodname":"to Byte Units String ","nowapisequence":"java.lang.String.valueOf java.text.NumberFormat.format "}
{"methodannotation":"block the GUI - disalow input ","groudtruth":"javax.swing.AbstractButton.setEnabled javax.swing.AbstractButton.setEnabled javax.swing.JComboBox.setEnabled javax.swing.JComboBox.setEnabled ","nowflat":"javax.swing.AbstractButton.setEnabled javax.swing.AbstractButton.setEnabled ","decomposemethodname":"block GUI ","nowapisequence":"javax.swing.AbstractButton.setEnabled javax.swing.AbstractButton.setEnabled "}
{"methodannotation":"releases GUI interaction ","groudtruth":"java.awt.Component.setEnabled javax.swing.JFrame.getGlassPane java.awt.Component.setVisible javax.swing.JFrame.getGlassPane java.awt.Cursor.getPredefinedCursor java.awt.Window.setCursor ","nowflat":"java.awt.Component.setEnabled javax.swing.JFrame.getGlassPane java.awt.Component.setVisible ","decomposemethodname":"release GUI ","nowapisequence":"java.awt.Component.setEnabled javax.swing.JFrame.getGlassPane java.awt.Component.setVisible "}
{"methodannotation":"called when the panel becomes active ","groudtruth":"javax.swing.AbstractButton.isSelected ","nowflat":"8 ","decomposemethodname":"panel Activate ","nowapisequence":""}
{"methodannotation":"perform the installation actions ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} java.lang.Object ","decomposemethodname":"run Automated ","nowapisequence":""}
{"methodannotation":"reports the error to System.err ","groudtruth":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","nowflat":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println ","decomposemethodname":"handle Compile Error ","nowapisequence":"java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println java.io.PrintStream.println "}
{"methodannotation":"the destroyer stops ","groudtruth":"javax.swing.SwingUtilities.invokeLater ","nowflat":"java.lang.Object ","decomposemethodname":"stop Action ","nowapisequence":""}
{"methodannotation":"loads the license text ","groudtruth":"java.lang.Throwable.printStackTrace ","nowflat":"} @ O ","decomposemethodname":"load Licence ","nowapisequence":""}
{"methodannotation":"indicates wether the panel has been validated or not ","groudtruth":"javax.swing.AbstractButton.isSelected javax.swing.AbstractButton.isSelected ","nowflat":"8 javax.swing.AbstractButton.isSelected @ ","decomposemethodname":"is Validated ","nowapisequence":"javax.swing.AbstractButton.isSelected "}
{"methodannotation":"pre-loads the images ","groudtruth":"java.util.ArrayList.add java.lang.Throwable.printStackTrace ","nowflat":"java.util.ArrayList 7 } javax.swing.ImageIcon ","decomposemethodname":"pre Load Images ","nowapisequence":""}
{"methodannotation":"serialize state to XML and insert under panelRoot ","groudtruth":"java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext java.util.Iterator.next java.util.Map.get ","nowflat":"java.util.Set.iterator java.util.Map.keySet ` java.util.Iterator.hasNext ","decomposemethodname":"make XMLData ","nowapisequence":"java.util.Set.iterator java.util.Map.keySet java.util.Iterator.hasNext "}
{"methodannotation":"creates a panel containing a anonymous label on the left with the message for the given msgId and a label on the right side with initial no text ","groudtruth":"javax.swing.JComponent.setAlignmentX java.awt.Container.setLayout java.awt.Container.add javax.swing.Box.createHorizontalGlue java.awt.Container.add java.awt.Container.add java.awt.GridBagLayout.addLayoutComponent java.lang.Boolean.parseBoolean javax.swing.JComponent.setVisible ","nowflat":"javax.swing.JPanel javax.swing.JLabel javax.swing.JComponent.setAlignmentX javax.swing.BoxLayout java.awt.Container.setLayout java.awt.Container.add javax.swing.Box.createHorizontalGlue java.awt.Container.add ","decomposemethodname":"create Panel With Label ","nowapisequence":"javax.swing.JComponent.setAlignmentX java.awt.Container.setLayout java.awt.Container.add javax.swing.Box.createHorizontalGlue java.awt.Container.add "}
{"methodannotation":"returns whether the chosen path is true or not ","groudtruth":"java.io.File.getAbsoluteFile java.io.File.exists ","nowflat":"8 @ 7 java.io.File.getAbsoluteFile java.io.File ","decomposemethodname":"path Is Valid ","nowapisequence":"java.io.File.getAbsoluteFile "}
{"methodannotation":"the compiler stops ","groudtruth":"javax.swing.JProgressBar.setIndeterminate java.lang.Integer.toString javax.swing.JProgressBar.setString javax.swing.JLabel.setText javax.swing.JComponent.setEnabled ","nowflat":"javax.swing.JProgressBar.setIndeterminate java.lang.Integer.toString javax.swing.JProgressBar.setString ","decomposemethodname":"finish Processing ","nowapisequence":"javax.swing.JProgressBar.setIndeterminate java.lang.Integer.toString javax.swing.JProgressBar.setString "}
{"methodannotation":"reads the XML specification for the shortcuts to create ","groudtruth":"java.io.InputStream.close ","nowflat":"} O @ 8 ","decomposemethodname":"read Shortcut Spec ","nowapisequence":""}
{"methodannotation":"verifies if the shortcut is required for any of the packs listed ","groudtruth":"java.lang.String.equals ","nowflat":"8 @ 7 N 7 ","decomposemethodname":"shortcut Required For ","nowapisequence":""}
{"methodannotation":"replaces any ocurrence of ' / ' or ' \\ ' in a path string with the correct version for the operating system ","groudtruth":"java.lang.String.replace java.lang.String.replace ","nowflat":"java.lang.String.replace ","decomposemethodname":"fix Separator Char ","nowapisequence":"java.lang.String.replace "}
{"methodannotation":"this method creates an alternative UI for this panel ","groudtruth":"java.awt.GridBagLayout.addLayoutComponent java.awt.GridBagLayout.addLayoutComponent java.util.Vector.size java.util.Vector.add java.awt.GridBagLayout.addLayoutComponent java.awt.GridBagLayout.addLayoutComponent javax.swing.AbstractButton.addActionListener java.awt.GridBagLayout.addLayoutComponent ","nowflat":"java.awt.GridBagLayout java.awt.GridBagConstraints java.lang.Object java.awt.Insets java.awt.GridBagLayout.addLayoutComponent java.lang.Object java.awt.GridBagLayout.addLayoutComponent java.util.Vector 7 java.util.Vector.size ","decomposemethodname":"build Alternate UI ","nowapisequence":"java.awt.GridBagLayout.addLayoutComponent java.awt.GridBagLayout.addLayoutComponent java.util.Vector.size "}
{"methodannotation":"adds all files and directories to the uninstaller ","groudtruth":"java.util.Vector.size ","nowflat":"7 ","decomposemethodname":"add To Uninstaller ","nowapisequence":""}
{"methodannotation":"reads the XML specification for the panel layout ","groudtruth":"java.lang.Integer.toString java.util.Vector.size java.util.Vector.elementAt java.lang.String.equals java.io.InputStream.close ","nowflat":"java.lang.Integer.toString } O @ 8 @ N 8 7 java.util.Vector.size ","decomposemethodname":"read Spec ","nowapisequence":"java.lang.Integer.toString java.util.Vector.size "}
{"methodannotation":"adds a dummy field to the list of UI elements to act as spacer ","groudtruth":"java.util.Vector.add ","nowflat":"javax.swing.JPanel ","decomposemethodname":"add Space ","nowapisequence":""}
{"methodannotation":"verifies if an item is required for the operating system the installer executed ","groudtruth":"java.util.Vector.size java.util.Vector.size java.lang.String.equals java.lang.String.equals java.lang.String.equals ","nowflat":"8 java.util.Vector.size @ 7 java.util.Vector.size 8 java.lang.String.equals ","decomposemethodname":"item Required For Os ","nowapisequence":"java.util.Vector.size java.util.Vector.size java.lang.String.equals "}
{"methodannotation":"verifies if an item is required for any of the packs listed ","groudtruth":"java.util.Vector.size java.util.Vector.size java.lang.String.equals ","nowflat":"8 java.util.Vector.size @ 7 N 7 java.util.Vector.size ","decomposemethodname":"item Required For ","nowapisequence":"java.util.Vector.size java.util.Vector.size "}
{"methodannotation":"check whether the given path matches ","groudtruth":"java.io.File.exists java.io.File.isDirectory java.io.File.isFile java.io.File.exists ","nowflat":"8 8 java.io.File java.io.File 8 java.io.File.exists 8 java.io.File.isDirectory java.io.File.isFile ","decomposemethodname":"path Matches ","nowapisequence":"java.io.File.exists java.io.File.isDirectory java.io.File.isFile "}
{"methodannotation":"check the method for the required properties -RRB- ","groudtruth":"java.lang.reflect.Method.getModifiers java.lang.reflect.Method.getParameterTypes java.lang.Class.isArray java.lang.Class.getName java.lang.Class.getComponentType java.lang.String.equals java.lang.reflect.Method.getDeclaringClass java.lang.Class.getModifiers ","nowflat":"java.lang.reflect.Method.getModifiers 8 { java.lang.IllegalArgumentException W java.lang.reflect.Method.getParameterTypes 8 java.lang.Class.isArray java.lang.Class.getName java.lang.Class.getComponentType ","decomposemethodname":"init Method ","nowapisequence":"java.lang.reflect.Method.getModifiers java.lang.reflect.Method.getParameterTypes java.lang.Class.isArray java.lang.Class.getName java.lang.Class.getComponentType "}
{"methodannotation":"use to register objects that need to perform cleanup operations before the application shuts down ","groudtruth":"java.util.Vector.add ","nowflat":"","decomposemethodname":"register For Cleanup ","nowapisequence":""}
{"methodannotation":"returns the first existing parent directory in a path ","groudtruth":"java.io.File.exists java.io.File.getParent java.io.File.getParentFile ","nowflat":"` java.io.File.exists 8 java.io.File.getParent ","decomposemethodname":"existing Parent ","nowapisequence":"java.io.File.exists java.io.File.getParent "}
{"methodannotation":"extracts a long value from a string in a special manner ","groudtruth":"java.util.StringTokenizer.countTokens java.util.StringTokenizer.nextToken java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken java.lang.String.indexOf java.lang.Long.parseLong ","nowflat":"java.util.StringTokenizer java.util.StringTokenizer.countTokens W W 7 java.util.StringTokenizer.nextToken 7 8 java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken 7 8 ","decomposemethodname":"extract Long ","nowapisequence":"java.util.StringTokenizer.countTokens java.util.StringTokenizer.nextToken java.util.StringTokenizer.hasMoreTokens java.util.StringTokenizer.nextToken "}
{"methodannotation":"verifies if the library has already been loaded and keeps track of all libraries that are verified ","groudtruth":"java.util.Vector.contains java.util.Vector.add ","nowflat":"8 java.util.Vector.contains @ ","decomposemethodname":"loaded ","nowapisequence":"java.util.Vector.contains "}
{"methodannotation":"this method scans the input string until the max allowed width is reached ","groudtruth":"java.lang.String.length java.lang.String.substring java.awt.FontMetrics.stringWidth ","nowflat":"java.lang.String.length 8 @ ` ","decomposemethodname":"break Word ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"constructs and returns the full path for the link file ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.length java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.StringBuffer.toString ","nowflat":"java.lang.StringBuffer 8 java.lang.StringBuffer.append java.lang.StringBuffer.append 8 java.lang.String.length ","decomposemethodname":"full Link Path ","nowapisequence":"java.lang.StringBuffer.append java.lang.StringBuffer.append java.lang.String.length "}
{"methodannotation":"returns true if the target OS supports current user and all users ","groudtruth":"java.lang.String.length java.lang.String.length ","nowflat":"8 java.lang.String.length ","decomposemethodname":"multiple Users ","nowapisequence":"java.lang.String.length "}
{"methodannotation":"matches OS specification in this class against current system properties ","groudtruth":"java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.equals java.lang.String.indexOf java.lang.String.equals java.lang.String.indexOf java.lang.String.endsWith java.lang.String.equals java.lang.System.getProperty java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.lastIndexOf java.lang.String.equals java.lang.String.startsWith java.lang.String.endsWith ","nowflat":"java.lang.String.toLowerCase java.lang.System.getProperty 8 java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty 8 java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty 8 java.lang.String.length java.lang.String.equals 8 8 java.lang.String.equals java.lang.String.indexOf 8 java.lang.String.equals java.lang.String.indexOf java.lang.String.endsWith ","decomposemethodname":"match Current System ","nowapisequence":"java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.toLowerCase java.lang.System.getProperty java.lang.String.length java.lang.String.equals java.lang.String.equals java.lang.String.indexOf java.lang.String.equals java.lang.String.indexOf java.lang.String.endsWith "}
{"methodannotation":"determines if the named attribute in true ","groudtruth":"java.lang.String.equals java.lang.String.equals java.lang.String.equals java.lang.String.equals ","nowflat":"8 java.lang.String.equals @ 8 java.lang.String.equals @ 8 ","decomposemethodname":"attribute Is True ","nowapisequence":"java.lang.String.equals java.lang.String.equals "}
{"methodannotation":"starts a new stream from a Java reader ","groudtruth":"java.util.Stack.push java.util.Stack.push java.util.Stack.push java.util.Stack.push ","nowflat":"java.util.Stack.push java.util.Stack.push java.util.Stack.push ","decomposemethodname":"start New Stream ","nowapisequence":"java.util.Stack.push java.util.Stack.push java.util.Stack.push "}
{"methodannotation":"creates a parser ","groudtruth":"java.lang.Class.forName ","nowflat":"N ","decomposemethodname":"create XMLParser ","nowapisequence":""}
{"methodannotation":"sets the label text of space requiered for installation / ","groudtruth":"java.lang.StringBuffer.append java.lang.StringBuffer.toString javax.swing.JLabel.setText ","nowflat":"java.lang.StringBuffer java.lang.StringBuffer.append ","decomposemethodname":"show Space Required ","nowapisequence":"java.lang.StringBuffer.append "}
{"methodannotation":"updates the central XML tree ","groudtruth":"java.util.Vector.size ","nowflat":"7 ","decomposemethodname":"update XMLTree ","nowapisequence":""}
{"methodannotation":"convert the given object to string with each line indented by 4 spaces ","groudtruth":"java.lang.String.replace java.lang.Object.toString ","nowflat":"8 @ @ ","decomposemethodname":"to Indented String ","nowapisequence":""}
{"methodannotation":"creates the child nodes of the node ","groudtruth":"java.lang.String.format ","nowflat":"Z ","decomposemethodname":"create Children ","nowapisequence":""}
{"methodannotation":"returns the number of calendars where uuid = &#63; ","groudtruth":"java.util.Objects.toString java.lang.String.isEmpty java.lang.Long.intValue ","nowflat":"java.util.Objects.toString W W F N 8 8 java.lang.String.isEmpty } ","decomposemethodname":"count By Uuid ","nowapisequence":"java.util.Objects.toString java.lang.String.isEmpty "}
{"methodannotation":"returns the number of fragment entry links where uuid = &#63; and groupId = &#63; ","groudtruth":"java.util.Objects.toString java.lang.String.isEmpty java.lang.Long.intValue ","nowflat":"java.util.Objects.toString W W F N 8 8 java.lang.String.isEmpty } ","decomposemethodname":"count By UUID_G ","nowapisequence":"java.util.Objects.toString java.lang.String.isEmpty "}
{"methodannotation":"defines the abstract method in AbstractPaneItem ","groudtruth":"javax.swing.AbstractButton.isSelected javax.swing.AbstractButton.isSelected javax.swing.AbstractButton.isSelected ","nowflat":"8 javax.swing.AbstractButton.isSelected 8 javax.swing.AbstractButton.isSelected ","decomposemethodname":"apply Options ","nowapisequence":"javax.swing.AbstractButton.isSelected javax.swing.AbstractButton.isSelected "}
{"methodannotation":"convert projection coordinates to a LatLonPoint ","groudtruth":"java.lang.Math.sqrt java.lang.Math.asin java.lang.Math.abs java.lang.Math.asin java.lang.Math.abs java.lang.Math.cos java.lang.Math.sin java.lang.Math.atan java.lang.Math.atan java.lang.Math.atan java.lang.Math.toDegrees java.lang.Math.toDegrees ","nowflat":"java.lang.Math.sqrt java.lang.Math.asin 8 java.lang.Math.abs java.lang.Math.asin 8 java.lang.Math.abs java.lang.Math.cos java.lang.Math.sin java.lang.Math.atan ","decomposemethodname":"proj To Lat Lon ","nowapisequence":"java.lang.Math.sqrt java.lang.Math.asin java.lang.Math.abs java.lang.Math.asin java.lang.Math.abs java.lang.Math.cos java.lang.Math.sin java.lang.Math.atan "}
{"methodannotation":"convert a LatLonPoint to projection coordinates ","groudtruth":"java.lang.Math.toRadians java.lang.Math.toRadians java.lang.Math.abs java.lang.Math.sin java.lang.Math.cos java.lang.Math.sin java.lang.Math.cos ","nowflat":"java.lang.Math.toRadians java.lang.Math.toRadians 8 java.lang.Math.abs java.lang.Math.sin ","decomposemethodname":"lat Lon To Proj ","nowapisequence":"java.lang.Math.toRadians java.lang.Math.toRadians java.lang.Math.abs java.lang.Math.sin "}
{"methodannotation":"returns the number of ddm form instance records where uuid = &#63; and companyId = &#63; ","groudtruth":"java.util.Objects.toString java.lang.String.isEmpty java.lang.Long.intValue ","nowflat":"java.util.Objects.toString W W F N 8 8 java.lang.String.isEmpty } ","decomposemethodname":"count By Uuid_C ","nowapisequence":"java.util.Objects.toString java.lang.String.isEmpty "}
{"methodannotation":"add the requested query string arguments to the Request ","groudtruth":"java.lang.Integer.toString ","nowflat":"8 ","decomposemethodname":"add Query Params ","nowapisequence":""}
{"methodannotation":"run benchmark for given number of batches , with given number of cycles for each batch ","groudtruth":"java.io.ObjectOutputStream.reset java.io.ObjectOutputStream.writeObject java.io.ObjectOutputStream.flush java.io.ObjectInputStream.readObject ","nowflat":"W W 7 java.io.ObjectOutputStream.reset 7 ","decomposemethodname":"do Reps ","nowapisequence":"java.io.ObjectOutputStream.reset "}
{"methodannotation":"abstract ","groudtruth":"java.io.DataInputStream.readInt java.io.DataInputStream.readByte ","nowflat":"java.io.DataInputStream.readInt ","decomposemethodname":"read Packet Data ","nowapisequence":"java.io.DataInputStream.readInt "}
{"methodannotation":"abstract ","groudtruth":"java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeByte java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt ","nowflat":"java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeByte ","decomposemethodname":"write Packet Data ","nowapisequence":"java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeInt java.io.DataOutputStream.writeByte "}
{"methodannotation":"add an element to ' expand ' list ","groudtruth":"java.util.List.add ","nowflat":"8 ","decomposemethodname":"add Expand ","nowapisequence":""}
{"methodannotation":"generate fire code ","groudtruth":"java.util.ArrayList.add java.lang.Integer.toString java.util.ArrayList.set ","nowflat":"N 8 java.util.ArrayList<java.lang.String> java.util.ArrayList.add 7 java.lang.Integer.toString java.util.ArrayList.set ","decomposemethodname":"_generate Fire Code ","nowapisequence":"java.util.ArrayList<java.lang.String> java.util.ArrayList.add java.lang.Integer.toString java.util.ArrayList.set "}
{"methodannotation":"add all elements to ' expand ' list ","groudtruth":"java.util.List.addAll ","nowflat":"8 ","decomposemethodname":"add All Expand ","nowapisequence":""}
{"methodannotation":"add a key/value pair to ' extraParams ' map ","groudtruth":"java.util.Map.put ","nowflat":"8 ","decomposemethodname":"put Extra Param ","nowapisequence":""}
{"methodannotation":"add all map key/value pairs to ' extraParams ' map ","groudtruth":"java.util.Map.putAll ","nowflat":"8 ","decomposemethodname":"put All Extra Param ","nowapisequence":""}
{"methodannotation":"add a key/value pair to ' metadata ' map ","groudtruth":"java.util.Map.put ","nowflat":"8 ","decomposemethodname":"put Metadata ","nowapisequence":""}
{"methodannotation":"add all map key/value pairs to ' metadata ' map ","groudtruth":"java.util.Map.putAll ","nowflat":"8 ","decomposemethodname":"put All Metadata ","nowapisequence":""}
{"methodannotation":"wraps a key ","groudtruth":"java.lang.Character.valueOf ","nowflat":"@ ","decomposemethodname":"wrap Key ","nowapisequence":""}
{"methodannotation":"unwraps a key ","groudtruth":"java.lang.Character.charValue ","nowflat":"@ ","decomposemethodname":"unwrap Key ","nowapisequence":""}
{"methodannotation":"unwraps a value ","groudtruth":"java.lang.Long.longValue ","nowflat":"@ ","decomposemethodname":"unwrap Value ","nowapisequence":""}
{"methodannotation":"add the requested post parameters to the Request ","groudtruth":"java.lang.Integer.toString java.lang.Integer.toString java.lang.Integer.toString ","nowflat":"8 8 java.lang.Integer.toString 8 ","decomposemethodname":"add Post Params ","nowapisequence":"java.lang.Integer.toString "}
{"methodannotation":"gets number of the IFcFlowMixed property content ","groudtruth":"java.util.List.size ","nowflat":"@ ","decomposemethodname":"size Content ","nowapisequence":""}
